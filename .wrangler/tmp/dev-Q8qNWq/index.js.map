{
  "version": 3,
  "sources": ["wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../../../node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-RFNDk6/middleware-insertion-facade.js", "../../../node_modules/fast-decode-uri-component/index.js", "../../../node_modules/ieee754/index.js", "../../../node_modules/@borewit/text-codec/lib/index.js", "../../../node_modules/token-types/lib/index.js", "../../../node_modules/strtok3/lib/stream/Errors.js", "../../../node_modules/strtok3/lib/stream/Deferred.js", "../../../node_modules/strtok3/lib/stream/AbstractStreamReader.js", "../../../node_modules/strtok3/lib/stream/StreamReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamByobReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamDefaultReader.js", "../../../node_modules/strtok3/lib/stream/WebStreamReaderFactory.js", "../../../node_modules/strtok3/lib/stream/index.js", "../../../node_modules/strtok3/lib/AbstractTokenizer.js", "../../../node_modules/strtok3/lib/ReadStreamTokenizer.js", "../../../node_modules/strtok3/lib/BufferTokenizer.js", "../../../node_modules/strtok3/lib/BlobTokenizer.js", "../../../node_modules/strtok3/lib/core.js", "../../../node_modules/fflate/esm/browser.js", "../../../node_modules/ms/index.js", "../../../node_modules/debug/src/common.js", "../../../node_modules/debug/src/browser.js", "../../../node_modules/@tokenizer/inflate/lib/ZipToken.js", "../../../node_modules/@tokenizer/inflate/lib/index.js", "../../../node_modules/uint8array-extras/index.js", "../../../node_modules/file-type/util.js", "../../../node_modules/file-type/supported.js", "../../../node_modules/file-type/core.js", "../../../node_modules/cookie/src/index.ts", "../../../src/index.ts", "../../../node_modules/elysia/dist/index.mjs", "../../../node_modules/memoirist/dist/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/clone/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/clone/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/create/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/system/policy.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/guard/guard.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/create/immutable.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/error/error.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/kind.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbols/symbols.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/guard/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/patterns/patterns.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/format.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/registry/type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/sets/set.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/any/any.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/array/array.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/argument/argument.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/async-iterator/async-iterator.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/awaited/awaited.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/computed/computed.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-evaluated.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/discard/discard.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/never/never.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/optional/optional-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/mapped/mapped.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor/constructor.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/function/function.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union-evaluated.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union-create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/union/union.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-property-keys.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/finite.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/parse.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/generate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/syntax.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/literal/literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/boolean/boolean.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/bigint/bigint.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/number/number.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/string/string.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/pattern.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/union.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/template-literal/template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/iterator/iterator.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/object/object.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/promise/promise.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly/readonly-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly/readonly.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/tuple/tuple.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/optional/optional.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intersect/intersect.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/ref/ref.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/composite/composite.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/const/const.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/date/date.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/null/null.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/symbol/symbol.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/undefined/undefined.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/uint8array/uint8array.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unknown/unknown.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/constructor-parameters/constructor-parameters.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/enum/enum.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-check.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extends/extends-undefined.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-template-literal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/instance-type/instance-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/instantiate/instantiate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/readonly-optional/readonly-optional.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/record/record.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/integer/integer.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/capitalize.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/lowercase.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/uncapitalize.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/intrinsic/uppercase.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/module/module.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/module/compute.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-key.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/partial/partial-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/partial/partial.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/required/required-from-mapped-result.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/required/required.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/not/not.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/parameters/parameters.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/recursive/recursive.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/regexp/regexp.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/rest/rest.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/return-type/return-type.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/transform/transform.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/unsafe/unsafe.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/void/void.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/type/type/type.mjs", "../../../node_modules/elysia/dist/type-system/index.mjs", "../../../node_modules/elysia/dist/type-system/utils.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/errors/errors.mjs", "../../../node_modules/@sinclair/typebox/build/esm/errors/function.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/deref/deref.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/hash/hash.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/check/check.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/assert/assert.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/cast/cast.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/create/create.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clone/clone.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/clean/clean.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/convert/convert.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/decode/decode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/decode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/encode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/transform/has.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/default/default.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/delta/delta.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/pointer/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/pointer/pointer.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/equal/equal.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/encode/encode.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/mutate/mutate.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/parse/parse.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/value/index.mjs", "../../../node_modules/@sinclair/typebox/build/esm/value/value/value.mjs", "../../../node_modules/@sinclair/typebox/build/esm/compiler/compiler.mjs", "../../../node_modules/elysia/dist/universal/file.mjs", "../../../node_modules/elysia/dist/universal/utils.mjs", "../../../node_modules/elysia/dist/error.mjs", "../../../node_modules/elysia/dist/utils.mjs", "../../../node_modules/elysia/dist/type-system/format.mjs", "../../../node_modules/elysia/dist/sucrose.mjs", "../../../node_modules/elysia/dist/adapter/cloudflare-worker/index.mjs", "../../../node_modules/elysia/dist/adapter/web-standard/index.mjs", "../../../node_modules/elysia/dist/adapter/web-standard/handler.mjs", "../../../node_modules/elysia/dist/adapter/utils.mjs", "../../../node_modules/elysia/dist/cookies.mjs", "../../../node_modules/elysia/dist/universal/index.mjs", "../../../node_modules/elysia/dist/universal/env.mjs", "../../../node_modules/elysia/dist/adapter/bun/index.mjs", "../../../node_modules/elysia/dist/adapter/bun/compose.mjs", "../../../node_modules/elysia/dist/adapter/bun/handler.mjs", "../../../node_modules/elysia/dist/compose.mjs", "../../../node_modules/elysia/dist/parse-query.mjs", "../../../node_modules/elysia/dist/trace.mjs", "../../../node_modules/elysia/dist/schema.mjs", "../../../node_modules/exact-mirror/dist/index.mjs", "../../../node_modules/elysia/dist/adapter/bun/handler-native.mjs", "../../../node_modules/elysia/dist/ws/index.mjs", "../../../node_modules/elysia/dist/dynamic-handle.mjs", "../../../src/nostr.ts", "../../../node_modules/nostr-tools/lib/esm/index.js", "../../../node_modules/@noble/curves/src/secp256k1.ts", "../../../node_modules/@noble/curves/node_modules/@noble/hashes/src/sha256.ts", "../../../node_modules/@noble/curves/node_modules/@noble/hashes/src/_sha2.ts", "../../../node_modules/@noble/curves/node_modules/@noble/hashes/src/_assert.ts", "../../../node_modules/@noble/curves/node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/curves/node_modules/@noble/hashes/src/crypto.ts", "../../../node_modules/@noble/curves/src/abstract/modular.ts", "../../../node_modules/@noble/curves/src/abstract/utils.ts", "../../../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../../node_modules/@noble/curves/src/abstract/curve.ts", "../../../node_modules/@noble/curves/src/_shortw_utils.ts", "../../../node_modules/@noble/curves/node_modules/@noble/hashes/src/hmac.ts", "../../../node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/hashes/src/crypto.ts", "../../../node_modules/@noble/hashes/src/sha256.ts", "../../../node_modules/@noble/hashes/src/_sha2.ts", "../../../node_modules/@noble/hashes/src/_assert.ts", "../../../node_modules/@scure/base/lib/esm/index.js", "../../../node_modules/@noble/ciphers/src/aes.ts", "../../../node_modules/@noble/ciphers/src/utils.ts", "../../../node_modules/@noble/ciphers/src/_assert.ts", "../../../node_modules/@noble/ciphers/src/_polyval.ts", "../../../node_modules/@noble/ciphers/src/chacha.ts", "../../../node_modules/@noble/ciphers/src/_poly1305.ts", "../../../node_modules/@noble/ciphers/src/_arx.ts", "../../../node_modules/@noble/hashes/src/hkdf.ts", "../../../node_modules/@noble/hashes/src/hmac.ts", "../../../src/svg.ts"],
  "sourceRoot": "/Users/somanoda/Documents/program/nostr-embed/.wrangler/tmp/dev-Q8qNWq",
  "sourcesContent": ["", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n} from \"./common\";\n\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport { __facade_registerInternal__ } from \"/Users/somanoda/Documents/program/nostr-embed/node_modules/wrangler/templates/middleware/loader-sw.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/somanoda/Documents/program/nostr-embed/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/somanoda/Documents/program/nostr-embed/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\t\t\t\t__facade_registerInternal__([__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default])", "'use strict'\n\nvar UTF8_ACCEPT = 12\nvar UTF8_REJECT = 0\nvar UTF8_DATA = [\n  // The first part of the table maps bytes to character to a transition.\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\n  4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7,\n  10, 9, 9, 9, 11, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n\n  // The second part of the table maps a state to a new state when adding a\n  // transition.\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  12, 0, 0, 0, 0, 24, 36, 48, 60, 72, 84, 96,\n  0, 12, 12, 12, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n\n  // The third part maps the current transition to a mask that needs to apply\n  // to the byte.\n  0x7F, 0x3F, 0x3F, 0x3F, 0x00, 0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07\n]\n\nfunction decodeURIComponent (uri) {\n  var percentPosition = uri.indexOf('%')\n  if (percentPosition === -1) return uri\n\n  var length = uri.length\n  var decoded = ''\n  var last = 0\n  var codepoint = 0\n  var startOfOctets = percentPosition\n  var state = UTF8_ACCEPT\n\n  while (percentPosition > -1 && percentPosition < length) {\n    var high = hexCodeToInt(uri[percentPosition + 1], 4)\n    var low = hexCodeToInt(uri[percentPosition + 2], 0)\n    var byte = high | low\n    var type = UTF8_DATA[byte]\n    state = UTF8_DATA[256 + state + type]\n    codepoint = (codepoint << 6) | (byte & UTF8_DATA[364 + type])\n\n    if (state === UTF8_ACCEPT) {\n      decoded += uri.slice(last, startOfOctets)\n\n      decoded += (codepoint <= 0xFFFF)\n        ? String.fromCharCode(codepoint)\n        : String.fromCharCode(\n          (0xD7C0 + (codepoint >> 10)),\n          (0xDC00 + (codepoint & 0x3FF))\n        )\n\n      codepoint = 0\n      last = percentPosition + 3\n      percentPosition = startOfOctets = uri.indexOf('%', last)\n    } else if (state === UTF8_REJECT) {\n      return null\n    } else {\n      percentPosition += 3\n      if (percentPosition < length && uri.charCodeAt(percentPosition) === 37) continue\n      return null\n    }\n  }\n\n  return decoded + uri.slice(last)\n}\n\nvar HEX = {\n  '0': 0,\n  '1': 1,\n  '2': 2,\n  '3': 3,\n  '4': 4,\n  '5': 5,\n  '6': 6,\n  '7': 7,\n  '8': 8,\n  '9': 9,\n  'a': 10,\n  'A': 10,\n  'b': 11,\n  'B': 11,\n  'c': 12,\n  'C': 12,\n  'd': 13,\n  'D': 13,\n  'e': 14,\n  'E': 14,\n  'f': 15,\n  'F': 15\n}\n\nfunction hexCodeToInt (c, shift) {\n  var i = HEX[c]\n  return i === undefined ? 255 : i << shift\n}\n\nmodule.exports = decodeURIComponent\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "// text-polyfill.ts\n// Minimal encode/decode for utf-8, utf-16le, ascii, latin1, windows-1252\nconst WINDOWS_1252_EXTRA = {\n    0x80: \"\u20AC\", 0x82: \"\u201A\", 0x83: \"\u0192\", 0x84: \"\u201E\", 0x85: \"\u2026\", 0x86: \"\u2020\",\n    0x87: \"\u2021\", 0x88: \"\u02C6\", 0x89: \"\u2030\", 0x8a: \"\u0160\", 0x8b: \"\u2039\", 0x8c: \"\u0152\",\n    0x8e: \"\u017D\", 0x91: \"\u2018\", 0x92: \"\u2019\", 0x93: \"\u201C\", 0x94: \"\u201D\", 0x95: \"\u2022\",\n    0x96: \"\u2013\", 0x97: \"\u2014\", 0x98: \"\u02DC\", 0x99: \"\u2122\", 0x9a: \"\u0161\", 0x9b: \"\u203A\",\n    0x9c: \"\u0153\", 0x9e: \"\u017E\", 0x9f: \"\u0178\",\n};\nconst WINDOWS_1252_REVERSE = {};\nfor (const [code, char] of Object.entries(WINDOWS_1252_EXTRA)) {\n    WINDOWS_1252_REVERSE[char] = Number.parseInt(code);\n}\n/**\n * Decode text from binary data\n * @param bytes Binary data\n * @param encoding Encoding\n */\nexport function textDecode(bytes, encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextDecoder !== \"undefined\") {\n                return new globalThis.TextDecoder(\"utf-8\").decode(bytes);\n            }\n            return decodeUTF8(bytes);\n        case \"utf-16le\":\n            return decodeUTF16LE(bytes);\n        case \"ascii\":\n            return decodeASCII(bytes);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return decodeLatin1(bytes);\n        case \"windows-1252\":\n            return decodeWindows1252(bytes);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\nexport function textEncode(input = \"\", encoding = \"utf-8\") {\n    switch (encoding.toLowerCase()) {\n        case \"utf-8\":\n        case \"utf8\":\n            if (typeof globalThis.TextEncoder !== \"undefined\") {\n                return new globalThis.TextEncoder().encode(input);\n            }\n            return encodeUTF8(input);\n        case \"utf-16le\":\n            return encodeUTF16LE(input);\n        case \"ascii\":\n            return encodeASCII(input);\n        case \"latin1\":\n        case \"iso-8859-1\":\n            return encodeLatin1(input);\n        case \"windows-1252\":\n            return encodeWindows1252(input);\n        default:\n            throw new RangeError(`Encoding '${encoding}' not supported`);\n    }\n}\n// --- Internal helpers ---\nfunction decodeUTF8(bytes) {\n    let out = \"\";\n    let i = 0;\n    while (i < bytes.length) {\n        const b1 = bytes[i++];\n        if (b1 < 0x80) {\n            out += String.fromCharCode(b1);\n        }\n        else if (b1 < 0xe0) {\n            const b2 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x1f) << 6) | b2);\n        }\n        else if (b1 < 0xf0) {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            out += String.fromCharCode(((b1 & 0x0f) << 12) | (b2 << 6) | b3);\n        }\n        else {\n            const b2 = bytes[i++] & 0x3f;\n            const b3 = bytes[i++] & 0x3f;\n            const b4 = bytes[i++] & 0x3f;\n            let cp = ((b1 & 0x07) << 18) |\n                (b2 << 12) |\n                (b3 << 6) |\n                b4;\n            cp -= 0x10000;\n            out += String.fromCharCode(0xd800 + ((cp >> 10) & 0x3ff), 0xdc00 + (cp & 0x3ff));\n        }\n    }\n    return out;\n}\nfunction decodeUTF16LE(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.length; i += 2) {\n        out += String.fromCharCode(bytes[i] | (bytes[i + 1] << 8));\n    }\n    return out;\n}\nfunction decodeASCII(bytes) {\n    return String.fromCharCode(...bytes.map((b) => b & 0x7f));\n}\nfunction decodeLatin1(bytes) {\n    return String.fromCharCode(...bytes);\n}\nfunction decodeWindows1252(bytes) {\n    let out = \"\";\n    for (const b of bytes) {\n        if (b >= 0x80 && b <= 0x9f && WINDOWS_1252_EXTRA[b]) {\n            out += WINDOWS_1252_EXTRA[b];\n        }\n        else {\n            out += String.fromCharCode(b);\n        }\n    }\n    return out;\n}\nfunction encodeUTF8(str) {\n    const out = [];\n    for (let i = 0; i < str.length; i++) {\n        const cp = str.charCodeAt(i);\n        if (cp < 0x80) {\n            out.push(cp);\n        }\n        else if (cp < 0x800) {\n            out.push(0xc0 | (cp >> 6), 0x80 | (cp & 0x3f));\n        }\n        else if (cp < 0x10000) {\n            out.push(0xe0 | (cp >> 12), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n        else {\n            out.push(0xf0 | (cp >> 18), 0x80 | ((cp >> 12) & 0x3f), 0x80 | ((cp >> 6) & 0x3f), 0x80 | (cp & 0x3f));\n        }\n    }\n    return new Uint8Array(out);\n}\nfunction encodeUTF16LE(str) {\n    const out = new Uint8Array(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        out[i * 2] = code & 0xff;\n        out[i * 2 + 1] = code >> 8;\n    }\n    return out;\n}\nfunction encodeASCII(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0x7f));\n}\nfunction encodeLatin1(str) {\n    return new Uint8Array([...str].map((ch) => ch.charCodeAt(0) & 0xff));\n}\nfunction encodeWindows1252(str) {\n    return new Uint8Array([...str].map((ch) => {\n        const code = ch.charCodeAt(0);\n        if (code <= 0xff)\n            return code;\n        if (WINDOWS_1252_REVERSE[ch] !== undefined)\n            return WINDOWS_1252_REVERSE[ch];\n        return 0x3f; // '?'\n    }));\n}\n", "import * as ieee754 from 'ieee754';\nimport { textDecode } from \"@borewit/text-codec\";\n// Primitive types\nfunction dv(array) {\n    return new DataView(array.buffer, array.byteOffset);\n}\n/*\n * 8-bit unsigned integer\n */\nexport const UINT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getUint8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit unsigned integer, Little Endian byte order\n */\nexport const UINT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit unsigned integer, Big Endian byte order\n */\nexport const UINT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getUint16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit unsigned integer, Little Endian byte order\n */\nexport const UINT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return dataView.getUint8(offset) + (dataView.getUint16(offset + 1, true) << 8);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit unsigned integer, Big Endian byte order\n */\nexport const UINT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const dataView = dv(array);\n        return (dataView.getUint16(offset) << 8) + dataView.getUint8(offset + 2);\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit unsigned integer, Little Endian byte order\n */\nexport const UINT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit unsigned integer, Big Endian byte order\n */\nexport const UINT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getUint32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setUint32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 8-bit signed integer\n */\nexport const INT8 = {\n    len: 1,\n    get(array, offset) {\n        return dv(array).getInt8(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt8(offset, value);\n        return offset + 1;\n    }\n};\n/**\n * 16-bit signed integer, Big Endian byte order\n */\nexport const INT16_BE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value);\n        return offset + 2;\n    }\n};\n/**\n * 16-bit signed integer, Little Endian byte order\n */\nexport const INT16_LE = {\n    len: 2,\n    get(array, offset) {\n        return dv(array).getInt16(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt16(offset, value, true);\n        return offset + 2;\n    }\n};\n/**\n * 24-bit signed integer, Little Endian byte order\n */\nexport const INT24_LE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_LE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint8(offset, value & 0xff);\n        dataView.setUint16(offset + 1, value >> 8, true);\n        return offset + 3;\n    }\n};\n/**\n * 24-bit signed integer, Big Endian byte order\n */\nexport const INT24_BE = {\n    len: 3,\n    get(array, offset) {\n        const unsigned = UINT24_BE.get(array, offset);\n        return unsigned > 0x7fffff ? unsigned - 0x1000000 : unsigned;\n    },\n    put(array, offset, value) {\n        const dataView = dv(array);\n        dataView.setUint16(offset, value >> 8);\n        dataView.setUint8(offset + 2, value & 0xff);\n        return offset + 3;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * 32-bit signed integer, Big Endian byte order\n */\nexport const INT32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getInt32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setInt32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * 64-bit unsigned integer, Little Endian byte order\n */\nexport const UINT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Little Endian byte order\n */\nexport const INT64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit unsigned integer, Big Endian byte order\n */\nexport const UINT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigUint64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigUint64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * 64-bit signed integer, Big Endian byte order\n */\nexport const INT64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getBigInt64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setBigInt64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, big endian\n */\nexport const Float16_BE = {\n    len: 2,\n    get(dataView, offset) {\n        return ieee754.read(dataView, offset, false, 10, this.len);\n    },\n    put(dataView, offset, value) {\n        ieee754.write(dataView, value, offset, false, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 16-bit (half precision) float, little endian\n */\nexport const Float16_LE = {\n    len: 2,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 10, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 10, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, big endian\n */\nexport const Float32_BE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 32-bit (single precision) float, little endian\n */\nexport const Float32_LE = {\n    len: 4,\n    get(array, offset) {\n        return dv(array).getFloat32(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat32(offset, value, true);\n        return offset + 4;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, big endian\n */\nexport const Float64_BE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 64-bit (double precision) float, little endian\n */\nexport const Float64_LE = {\n    len: 8,\n    get(array, offset) {\n        return dv(array).getFloat64(offset, true);\n    },\n    put(array, offset, value) {\n        dv(array).setFloat64(offset, value, true);\n        return offset + 8;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, big endian\n */\nexport const Float80_BE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, false, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, false, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * IEEE 754 80-bit (extended precision) float, little endian\n */\nexport const Float80_LE = {\n    len: 10,\n    get(array, offset) {\n        return ieee754.read(array, offset, true, 63, this.len);\n    },\n    put(array, offset, value) {\n        ieee754.write(array, value, offset, true, 63, this.len);\n        return offset + this.len;\n    }\n};\n/**\n * Ignore a given number of bytes\n */\nexport class IgnoreType {\n    /**\n     * @param len number of bytes to ignore\n     */\n    constructor(len) {\n        this.len = len;\n    }\n    // ToDo: don't read, but skip data\n    get(_array, _off) {\n    }\n}\nexport class Uint8ArrayType {\n    constructor(len) {\n        this.len = len;\n    }\n    get(array, offset) {\n        return array.subarray(offset, offset + this.len);\n    }\n}\n/**\n * Consume a fixed number of bytes from the stream and return a string with a specified encoding.\n * Supports all encodings supported by TextDecoder, plus 'windows-1252'.\n */\nexport class StringType {\n    constructor(len, encoding) {\n        this.len = len;\n        this.encoding = encoding;\n    }\n    get(data, offset = 0) {\n        const bytes = data.subarray(offset, offset + this.len);\n        return textDecode(bytes, this.encoding);\n    }\n}\n/**\n * ANSI Latin 1 String using Windows-1252 (Code Page 1252)\n * Windows-1252 is a superset of ISO 8859-1 / Latin-1.\n */\nexport class AnsiStringType extends StringType {\n    constructor(len) {\n        super(len, 'windows-1252');\n    }\n}\n", "export const defaultMessages = 'End-Of-Stream';\n/**\n * Thrown on read operation of the end of file or stream has been reached\n */\nexport class EndOfStreamError extends Error {\n    constructor() {\n        super(defaultMessages);\n        this.name = \"EndOfStreamError\";\n    }\n}\nexport class AbortError extends Error {\n    constructor(message = \"The operation was aborted\") {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n", "export class Deferred {\n    constructor() {\n        this.resolve = () => null;\n        this.reject = () => null;\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n", "import { EndOfStreamError, AbortError } from \"./Errors.js\";\nexport class AbstractStreamReader {\n    constructor() {\n        this.endOfStream = false;\n        this.interrupted = false;\n        /**\n         * Store peeked data\n         * @type {Array}\n         */\n        this.peekQueue = [];\n    }\n    async peek(uint8Array, mayBeLess = false) {\n        const bytesRead = await this.read(uint8Array, mayBeLess);\n        this.peekQueue.push(uint8Array.subarray(0, bytesRead)); // Put read data back to peek buffer\n        return bytesRead;\n    }\n    async read(buffer, mayBeLess = false) {\n        if (buffer.length === 0) {\n            return 0;\n        }\n        let bytesRead = this.readFromPeekBuffer(buffer);\n        if (!this.endOfStream) {\n            bytesRead += await this.readRemainderFromStream(buffer.subarray(bytesRead), mayBeLess);\n        }\n        if (bytesRead === 0 && !mayBeLess) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Read chunk from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @returns Number of bytes read\n     */\n    readFromPeekBuffer(buffer) {\n        let remaining = buffer.length;\n        let bytesRead = 0;\n        // consume peeked data first\n        while (this.peekQueue.length > 0 && remaining > 0) {\n            const peekData = this.peekQueue.pop(); // Front of queue\n            if (!peekData)\n                throw new Error('peekData should be defined');\n            const lenCopy = Math.min(peekData.length, remaining);\n            buffer.set(peekData.subarray(0, lenCopy), bytesRead);\n            bytesRead += lenCopy;\n            remaining -= lenCopy;\n            if (lenCopy < peekData.length) {\n                // remainder back to queue\n                this.peekQueue.push(peekData.subarray(lenCopy));\n            }\n        }\n        return bytesRead;\n    }\n    async readRemainderFromStream(buffer, mayBeLess) {\n        let bytesRead = 0;\n        // Continue reading from stream if required\n        while (bytesRead < buffer.length && !this.endOfStream) {\n            if (this.interrupted) {\n                throw new AbortError();\n            }\n            const chunkLen = await this.readFromStream(buffer.subarray(bytesRead), mayBeLess);\n            if (chunkLen === 0)\n                break;\n            bytesRead += chunkLen;\n        }\n        if (!mayBeLess && bytesRead < buffer.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n}\n", "import { AbortError, } from './Errors.js';\nimport { Deferred } from './Deferred.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\n/**\n * Node.js Readable Stream Reader\n * Ref: https://nodejs.org/api/stream.html#readable-streams\n */\nexport class StreamReader extends AbstractStreamReader {\n    constructor(s) {\n        super();\n        this.s = s;\n        /**\n         * Deferred used for postponed read request (as not data is yet available to read)\n         */\n        this.deferred = null;\n        if (!s.read || !s.once) {\n            throw new Error('Expected an instance of stream.Readable');\n        }\n        this.s.once('end', () => {\n            this.endOfStream = true;\n            if (this.deferred) {\n                this.deferred.resolve(0);\n            }\n        });\n        this.s.once('error', err => this.reject(err));\n        this.s.once('close', () => this.abort());\n    }\n    /**\n     * Read chunk from stream\n     * @param buffer Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @returns Number of bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        const readBuffer = this.s.read(buffer.length);\n        if (readBuffer) {\n            buffer.set(readBuffer);\n            return readBuffer.length;\n        }\n        const request = {\n            buffer,\n            mayBeLess,\n            deferred: new Deferred()\n        };\n        this.deferred = request.deferred;\n        this.s.once('readable', () => {\n            this.readDeferred(request);\n        });\n        return request.deferred.promise;\n    }\n    /**\n     * Process deferred read request\n     * @param request Deferred read request\n     */\n    readDeferred(request) {\n        const readBuffer = this.s.read(request.buffer.length);\n        if (readBuffer) {\n            request.buffer.set(readBuffer);\n            request.deferred.resolve(readBuffer.length);\n            this.deferred = null;\n        }\n        else {\n            this.s.once('readable', () => {\n                this.readDeferred(request);\n            });\n        }\n    }\n    reject(err) {\n        this.interrupted = true;\n        if (this.deferred) {\n            this.deferred.reject(err);\n            this.deferred = null;\n        }\n    }\n    async abort() {\n        this.reject(new AbortError());\n    }\n    async close() {\n        return this.abort();\n    }\n}\n", "import { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n    }\n    async abort() {\n        return this.close();\n    }\n    async close() {\n        this.reader.releaseLock();\n    }\n}\n", "import { WebStreamReader } from './WebStreamReader.js';\n/**\n * Read from a WebStream using a BYOB reader\n * Reference: https://nodejs.org/api/webstreams.html#class-readablestreambyobreader\n */\nexport class WebStreamByobReader extends WebStreamReader {\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        // @ts-ignore\n        const result = await this.reader.read(new Uint8Array(buffer.length), { min: mayBeLess ? undefined : buffer.length });\n        if (result.done) {\n            this.endOfStream = result.done;\n        }\n        if (result.value) {\n            buffer.set(result.value);\n            return result.value.length;\n        }\n        return 0;\n    }\n}\n", "import { EndOfStreamError } from './Errors.js';\nimport { AbstractStreamReader } from \"./AbstractStreamReader.js\";\nexport class WebStreamDefaultReader extends AbstractStreamReader {\n    constructor(reader) {\n        super();\n        this.reader = reader;\n        this.buffer = null; // Internal buffer to store excess data\n    }\n    /**\n     * Copy chunk to target, and store the remainder in this.buffer\n     */\n    writeChunk(target, chunk) {\n        const written = Math.min(chunk.length, target.length);\n        target.set(chunk.subarray(0, written));\n        // Adjust the remainder of the buffer\n        if (written < chunk.length) {\n            this.buffer = chunk.subarray(written);\n        }\n        else {\n            this.buffer = null;\n        }\n        return written;\n    }\n    /**\n     * Read from stream\n     * @param buffer - Target Uint8Array (or Buffer) to store data read from stream in\n     * @param mayBeLess - If true, may fill the buffer partially\n     * @protected Bytes read\n     */\n    async readFromStream(buffer, mayBeLess) {\n        if (buffer.length === 0)\n            return 0;\n        let totalBytesRead = 0;\n        // Serve from the internal buffer first\n        if (this.buffer) {\n            totalBytesRead += this.writeChunk(buffer, this.buffer);\n        }\n        // Continue reading from the stream if more data is needed\n        while (totalBytesRead < buffer.length && !this.endOfStream) {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.endOfStream = true;\n                break;\n            }\n            if (result.value) {\n                totalBytesRead += this.writeChunk(buffer.subarray(totalBytesRead), result.value);\n            }\n        }\n        if (!mayBeLess && totalBytesRead === 0 && this.endOfStream) {\n            throw new EndOfStreamError();\n        }\n        return totalBytesRead;\n    }\n    abort() {\n        this.interrupted = true;\n        return this.reader.cancel();\n    }\n    async close() {\n        await this.abort();\n        this.reader.releaseLock();\n    }\n}\n", "import { WebStreamByobReader } from './WebStreamByobReader.js';\nimport { WebStreamDefaultReader } from './WebStreamDefaultReader.js';\nexport function makeWebStreamReader(stream) {\n    try {\n        const reader = stream.getReader({ mode: \"byob\" });\n        if (reader instanceof ReadableStreamDefaultReader) {\n            // Fallback to default reader in case `mode: byob` is ignored\n            return new WebStreamDefaultReader(reader);\n        }\n        return new WebStreamByobReader(reader);\n    }\n    catch (error) {\n        if (error instanceof TypeError) {\n            // Fallback to default reader in case `mode: byob` rejected by a `TypeError`\n            return new WebStreamDefaultReader(stream.getReader());\n        }\n        throw error;\n    }\n}\n", "export { AbortError, EndOfStreamError } from './Errors.js';\nexport { StreamReader } from './StreamReader.js';\nexport { WebStreamByobReader } from './WebStreamByobReader.js';\nexport { WebStreamDefaultReader } from './WebStreamDefaultReader.js';\nexport { makeWebStreamReader } from './WebStreamReaderFactory.js';\n", "import { EndOfStreamError } from './stream/index.js';\n/**\n * Core tokenizer\n */\nexport class AbstractTokenizer {\n    /**\n     * Constructor\n     * @param options Tokenizer options\n     * @protected\n     */\n    constructor(options) {\n        this.numBuffer = new Uint8Array(8);\n        /**\n         * Tokenizer-stream position\n         */\n        this.position = 0;\n        this.onClose = options?.onClose;\n        if (options?.abortSignal) {\n            options.abortSignal.addEventListener('abort', () => {\n                this.abort();\n            });\n        }\n    }\n    /**\n     * Read a token from the tokenizer-stream\n     * @param token - The token to read\n     * @param position - If provided, the desired position in the tokenizer-stream\n     * @returns Promise with token data\n     */\n    async readToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.readBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Peek a token from the tokenizer-stream.\n     * @param token - Token to peek from the tokenizer-stream.\n     * @param position - Offset where to begin reading within the file. If position is null, data will be read from the current file position.\n     * @returns Promise with token data\n     */\n    async peekToken(token, position = this.position) {\n        const uint8Array = new Uint8Array(token.len);\n        const len = await this.peekBuffer(uint8Array, { position });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(uint8Array, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async readNumber(token) {\n        const len = await this.readBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Read a numeric token from the stream\n     * @param token - Numeric token\n     * @returns Promise with number\n     */\n    async peekNumber(token) {\n        const len = await this.peekBuffer(this.numBuffer, { length: token.len });\n        if (len < token.len)\n            throw new EndOfStreamError();\n        return token.get(this.numBuffer, 0);\n    }\n    /**\n     * Ignore number of bytes, advances the pointer in under tokenizer-stream.\n     * @param length - Number of bytes to ignore\n     * @return resolves the number of bytes ignored, equals length if this available, otherwise the number of bytes available\n     */\n    async ignore(length) {\n        if (this.fileInfo.size !== undefined) {\n            const bytesLeft = this.fileInfo.size - this.position;\n            if (length > bytesLeft) {\n                this.position += bytesLeft;\n                return bytesLeft;\n            }\n        }\n        this.position += length;\n        return length;\n    }\n    async close() {\n        await this.abort();\n        await this.onClose?.();\n    }\n    normalizeOptions(uint8Array, options) {\n        if (!this.supportsRandomAccess() && options && options.position !== undefined && options.position < this.position) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        return {\n            ...{\n                mayBeLess: false,\n                offset: 0,\n                length: uint8Array.length,\n                position: this.position\n            }, ...options\n        };\n    }\n    abort() {\n        return Promise.resolve(); // Ignore abort signal\n    }\n}\n", "import { AbstractTokenizer } from './AbstractTokenizer.js';\nimport { EndOfStreamError } from './stream/index.js';\nconst maxBufferSize = 256000;\nexport class ReadStreamTokenizer extends AbstractTokenizer {\n    /**\n     * Constructor\n     * @param streamReader stream-reader to read from\n     * @param options Tokenizer options\n     */\n    constructor(streamReader, options) {\n        super(options);\n        this.streamReader = streamReader;\n        this.fileInfo = options?.fileInfo ?? {};\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Target Uint8Array to fill with data read from the tokenizer-stream\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes read\n     */\n    async readBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const skipBytes = normOptions.position - this.position;\n        if (skipBytes > 0) {\n            await this.ignore(skipBytes);\n            return this.readBuffer(uint8Array, options);\n        }\n        if (skipBytes < 0) {\n            throw new Error('`options.position` must be equal or greater than `tokenizer.position`');\n        }\n        if (normOptions.length === 0) {\n            return 0;\n        }\n        const bytesRead = await this.streamReader.read(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n        this.position += bytesRead;\n        if ((!options || !options.mayBeLess) && bytesRead < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array - Uint8Array (or Buffer) to write data to\n     * @param options - Read behaviour options\n     * @returns Promise with number of bytes peeked\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        let bytesRead = 0;\n        if (normOptions.position) {\n            const skipBytes = normOptions.position - this.position;\n            if (skipBytes > 0) {\n                const skipBuffer = new Uint8Array(normOptions.length + skipBytes);\n                bytesRead = await this.peekBuffer(skipBuffer, { mayBeLess: normOptions.mayBeLess });\n                uint8Array.set(skipBuffer.subarray(skipBytes));\n                return bytesRead - skipBytes;\n            }\n            if (skipBytes < 0) {\n                throw new Error('Cannot peek from a negative offset in a stream');\n            }\n        }\n        if (normOptions.length > 0) {\n            try {\n                bytesRead = await this.streamReader.peek(uint8Array.subarray(0, normOptions.length), normOptions.mayBeLess);\n            }\n            catch (err) {\n                if (options?.mayBeLess && err instanceof EndOfStreamError) {\n                    return 0;\n                }\n                throw err;\n            }\n            if ((!normOptions.mayBeLess) && bytesRead < normOptions.length) {\n                throw new EndOfStreamError();\n            }\n        }\n        return bytesRead;\n    }\n    async ignore(length) {\n        // debug(`ignore ${this.position}...${this.position + length - 1}`);\n        const bufSize = Math.min(maxBufferSize, length);\n        const buf = new Uint8Array(bufSize);\n        let totBytesRead = 0;\n        while (totBytesRead < length) {\n            const remaining = length - totBytesRead;\n            const bytesRead = await this.readBuffer(buf, { length: Math.min(bufSize, remaining) });\n            if (bytesRead < 0) {\n                return bytesRead;\n            }\n            totBytesRead += bytesRead;\n        }\n        return totBytesRead;\n    }\n    abort() {\n        return this.streamReader.abort();\n    }\n    async close() {\n        return this.streamReader.close();\n    }\n    supportsRandomAccess() {\n        return false;\n    }\n}\n", "import { EndOfStreamError } from './stream/index.js';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BufferTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(uint8Array, options) {\n        super(options);\n        this.uint8Array = uint8Array;\n        this.fileInfo = { ...options?.fileInfo ?? {}, ...{ size: uint8Array.length } };\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param uint8Array\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(uint8Array, options) {\n        const normOptions = this.normalizeOptions(uint8Array, options);\n        const bytes2read = Math.min(this.uint8Array.length - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        uint8Array.set(this.uint8Array.subarray(normOptions.position, normOptions.position + bytes2read));\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n}\n", "import { EndOfStreamError } from './stream/index.js';\nimport { AbstractTokenizer } from './AbstractTokenizer.js';\nexport class BlobTokenizer extends AbstractTokenizer {\n    /**\n     * Construct BufferTokenizer\n     * @param blob - Uint8Array to tokenize\n     * @param options Tokenizer options\n     */\n    constructor(blob, options) {\n        super(options);\n        this.blob = blob;\n        this.fileInfo = { ...options?.fileInfo ?? {}, ...{ size: blob.size, mimeType: blob.type } };\n    }\n    /**\n     * Read buffer from tokenizer\n     * @param uint8Array - Uint8Array to tokenize\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async readBuffer(uint8Array, options) {\n        if (options?.position) {\n            this.position = options.position;\n        }\n        const bytesRead = await this.peekBuffer(uint8Array, options);\n        this.position += bytesRead;\n        return bytesRead;\n    }\n    /**\n     * Peek (read ahead) buffer from tokenizer\n     * @param buffer\n     * @param options - Read behaviour options\n     * @returns {Promise<number>}\n     */\n    async peekBuffer(buffer, options) {\n        const normOptions = this.normalizeOptions(buffer, options);\n        const bytes2read = Math.min(this.blob.size - normOptions.position, normOptions.length);\n        if ((!normOptions.mayBeLess) && bytes2read < normOptions.length) {\n            throw new EndOfStreamError();\n        }\n        const arrayBuffer = await this.blob.slice(normOptions.position, normOptions.position + bytes2read).arrayBuffer();\n        buffer.set(new Uint8Array(arrayBuffer));\n        return bytes2read;\n    }\n    close() {\n        return super.close();\n    }\n    supportsRandomAccess() {\n        return true;\n    }\n    setPosition(position) {\n        this.position = position;\n    }\n}\n", "import { StreamReader, makeWebStreamReader } from './stream/index.js';\nimport { ReadStreamTokenizer } from './ReadStreamTokenizer.js';\nimport { BufferTokenizer } from './BufferTokenizer.js';\nimport { BlobTokenizer } from './BlobTokenizer.js';\nexport { EndOfStreamError, AbortError } from './stream/index.js';\nexport { AbstractTokenizer } from './AbstractTokenizer.js';\n/**\n * Construct ReadStreamTokenizer from given Stream.\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param stream - Read from Node.js Stream.Readable\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromStream(stream, options) {\n    const streamReader = new StreamReader(stream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await streamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(streamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given ReadableStream (WebStream API).\n * Will set fileSize, if provided given Stream has set the .path property/\n * @param webStream - Read from Node.js Stream.Readable (must be a byte stream)\n * @param options - Tokenizer options\n * @returns ReadStreamTokenizer\n */\nexport function fromWebStream(webStream, options) {\n    const webStreamReader = makeWebStreamReader(webStream);\n    const _options = options ?? {};\n    const chainedClose = _options.onClose;\n    _options.onClose = async () => {\n        await webStreamReader.close();\n        if (chainedClose) {\n            return chainedClose();\n        }\n    };\n    return new ReadStreamTokenizer(webStreamReader, _options);\n}\n/**\n * Construct ReadStreamTokenizer from given Buffer.\n * @param uint8Array - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBuffer(uint8Array, options) {\n    return new BufferTokenizer(uint8Array, options);\n}\n/**\n * Construct ReadStreamTokenizer from given Blob.\n * @param blob - Uint8Array to tokenize\n * @param options - Tokenizer options\n * @returns BufferTokenizer\n */\nexport function fromBlob(blob, options) {\n    return new BlobTokenizer(blob, options);\n}\n", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "/**\n * Ref https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT\n */\nimport { UINT16_LE, UINT32_LE } from \"token-types\";\nexport const Signature = {\n    LocalFileHeader: 0x04034b50,\n    DataDescriptor: 0x08074b50,\n    CentralFileHeader: 0x02014b50,\n    EndOfCentralDirectory: 0x06054b50\n};\nexport const DataDescriptor = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            compressedSize: UINT32_LE.get(array, 8),\n            uncompressedSize: UINT32_LE.get(array, 12),\n        };\n    }, len: 16\n};\n/**\n * First part of the ZIP Local File Header\n * Offset | Bytes| Description\n * -------|------+-------------------------------------------------------------------\n *      0 |    4 | Signature (0x04034b50)\n *      4 |    2 | Minimum version needed to extract\n *      6 |    2 | Bit flag\n *      8 |    2 | Compression method\n *     10 |    2 | File last modification time (MS-DOS format)\n *     12 |    2 | File last modification date (MS-DOS format)\n *     14 |    4 | CRC-32 of uncompressed data\n *     18 |    4 | Compressed size\n *     22 |    4 | Uncompressed size\n *     26 |    2 | File name length (n)\n *     28 |    2 | Extra field length (m)\n *     30 |    n | File name\n * 30 + n |    m | Extra field\n */\nexport const LocalFileHeaderToken = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 6);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 4),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 8),\n            compressedSize: UINT32_LE.get(array, 18),\n            uncompressedSize: UINT32_LE.get(array, 22),\n            filenameLength: UINT16_LE.get(array, 26),\n            extraFieldLength: UINT16_LE.get(array, 28),\n            filename: null\n        };\n    }, len: 30\n};\n/**\n * 4.3.16  End of central directory record:\n *  end of central dir signature (0x06064b50)                                      4 bytes\n *  number of this disk                                                            2 bytes\n *  number of the disk with the start of the central directory                     2 bytes\n *  total number of entries in the central directory on this disk                  2 bytes\n *  total number of entries in the size of the central directory                   2 bytes\n *  sizeOfTheCentralDirectory                                                      4 bytes\n *  offset of start of central directory with respect to the starting disk number  4 bytes\n *  .ZIP file comment length                                                       2 bytes\n *  .ZIP file comment       (variable size)\n */\nexport const EndOfCentralDirectoryRecordToken = {\n    get(array) {\n        return {\n            signature: UINT32_LE.get(array, 0),\n            nrOfThisDisk: UINT16_LE.get(array, 4),\n            nrOfThisDiskWithTheStart: UINT16_LE.get(array, 6),\n            nrOfEntriesOnThisDisk: UINT16_LE.get(array, 8),\n            nrOfEntriesOfSize: UINT16_LE.get(array, 10),\n            sizeOfCd: UINT32_LE.get(array, 12),\n            offsetOfStartOfCd: UINT32_LE.get(array, 16),\n            zipFileCommentLength: UINT16_LE.get(array, 20),\n        };\n    }, len: 22\n};\n/**\n * File header:\n *    central file header signature   4 bytes   0 (0x02014b50)\n *    version made by                 2 bytes   4\n *    version needed to extract       2 bytes   6\n *    general purpose bit flag        2 bytes   8\n *    compression method              2 bytes  10\n *    last mod file time              2 bytes  12\n *    last mod file date              2 bytes  14\n *    crc-32                          4 bytes  16\n *    compressed size                 4 bytes  20\n *    uncompressed size               4 bytes  24\n *    file name length                2 bytes  28\n *    extra field length              2 bytes  30\n *    file comment length             2 bytes  32\n *    disk number start               2 bytes  34\n *    internal file attributes        2 bytes  36\n *    external file attributes        4 bytes  38\n *    relative offset of local header 4 bytes  42\n */\nexport const FileHeader = {\n    get(array) {\n        const flags = UINT16_LE.get(array, 8);\n        return {\n            signature: UINT32_LE.get(array, 0),\n            minVersion: UINT16_LE.get(array, 6),\n            dataDescriptor: !!(flags & 0x0008),\n            compressedMethod: UINT16_LE.get(array, 10),\n            compressedSize: UINT32_LE.get(array, 20),\n            uncompressedSize: UINT32_LE.get(array, 24),\n            filenameLength: UINT16_LE.get(array, 28),\n            extraFieldLength: UINT16_LE.get(array, 30),\n            fileCommentLength: UINT16_LE.get(array, 32),\n            relativeOffsetOfLocalHeader: UINT32_LE.get(array, 42),\n            filename: null\n        };\n    }, len: 46\n};\n", "import { StringType, UINT32_LE } from 'token-types';\nimport { decompressSync } from 'fflate';\nimport initDebug from 'debug';\nimport { DataDescriptor, EndOfCentralDirectoryRecordToken, FileHeader, LocalFileHeaderToken, Signature } from \"./ZipToken.js\";\nfunction signatureToArray(signature) {\n    const signatureBytes = new Uint8Array(UINT32_LE.len);\n    UINT32_LE.put(signatureBytes, 0, signature);\n    return signatureBytes;\n}\nconst debug = initDebug('tokenizer:inflate');\nconst syncBufferSize = 256 * 1024;\nconst ddSignatureArray = signatureToArray(Signature.DataDescriptor);\nconst eocdSignatureBytes = signatureToArray(Signature.EndOfCentralDirectory);\nexport class ZipHandler {\n    constructor(tokenizer) {\n        this.tokenizer = tokenizer;\n        this.syncBuffer = new Uint8Array(syncBufferSize);\n    }\n    async isZip() {\n        return await this.peekSignature() === Signature.LocalFileHeader;\n    }\n    peekSignature() {\n        return this.tokenizer.peekToken(UINT32_LE);\n    }\n    async findEndOfCentralDirectoryLocator() {\n        const randomReadTokenizer = this.tokenizer;\n        const chunkLength = Math.min(16 * 1024, randomReadTokenizer.fileInfo.size);\n        const buffer = this.syncBuffer.subarray(0, chunkLength);\n        await this.tokenizer.readBuffer(buffer, { position: randomReadTokenizer.fileInfo.size - chunkLength });\n        // Search the buffer from end to beginning for EOCD signature\n        // const signature = 0x06054b50;\n        for (let i = buffer.length - 4; i >= 0; i--) {\n            // Compare 4 bytes directly without calling readUInt32LE\n            if (buffer[i] === eocdSignatureBytes[0] &&\n                buffer[i + 1] === eocdSignatureBytes[1] &&\n                buffer[i + 2] === eocdSignatureBytes[2] &&\n                buffer[i + 3] === eocdSignatureBytes[3]) {\n                return randomReadTokenizer.fileInfo.size - chunkLength + i;\n            }\n        }\n        return -1;\n    }\n    async readCentralDirectory() {\n        if (!this.tokenizer.supportsRandomAccess()) {\n            debug('Cannot reading central-directory without random-read support');\n            return;\n        }\n        debug('Reading central-directory...');\n        const pos = this.tokenizer.position;\n        const offset = await this.findEndOfCentralDirectoryLocator();\n        if (offset > 0) {\n            debug('Central-directory 32-bit signature found');\n            const eocdHeader = await this.tokenizer.readToken(EndOfCentralDirectoryRecordToken, offset);\n            const files = [];\n            this.tokenizer.setPosition(eocdHeader.offsetOfStartOfCd);\n            for (let n = 0; n < eocdHeader.nrOfEntriesOfSize; ++n) {\n                const entry = await this.tokenizer.readToken(FileHeader);\n                if (entry.signature !== Signature.CentralFileHeader) {\n                    throw new Error('Expected Central-File-Header signature');\n                }\n                entry.filename = await this.tokenizer.readToken(new StringType(entry.filenameLength, 'utf-8'));\n                await this.tokenizer.ignore(entry.extraFieldLength);\n                await this.tokenizer.ignore(entry.fileCommentLength);\n                files.push(entry);\n                debug(`Add central-directory file-entry: n=${n + 1}/${files.length}: filename=${files[n].filename}`);\n            }\n            this.tokenizer.setPosition(pos);\n            return files;\n        }\n        this.tokenizer.setPosition(pos);\n    }\n    async unzip(fileCb) {\n        const entries = await this.readCentralDirectory();\n        if (entries) {\n            // Use Central Directory to iterate over files\n            return this.iterateOverCentralDirectory(entries, fileCb);\n        }\n        // Scan Zip files for local-file-header\n        let stop = false;\n        do {\n            const zipHeader = await this.readLocalFileHeader();\n            if (!zipHeader)\n                break;\n            const next = fileCb(zipHeader);\n            stop = !!next.stop;\n            let fileData = undefined;\n            await this.tokenizer.ignore(zipHeader.extraFieldLength);\n            if (zipHeader.dataDescriptor && zipHeader.compressedSize === 0) {\n                const chunks = [];\n                let len = syncBufferSize;\n                debug('Compressed-file-size unknown, scanning for next data-descriptor-signature....');\n                let nextHeaderIndex = -1;\n                while (nextHeaderIndex < 0 && len === syncBufferSize) {\n                    len = await this.tokenizer.peekBuffer(this.syncBuffer, { mayBeLess: true });\n                    nextHeaderIndex = indexOf(this.syncBuffer.subarray(0, len), ddSignatureArray);\n                    const size = nextHeaderIndex >= 0 ? nextHeaderIndex : len;\n                    if (next.handler) {\n                        const data = new Uint8Array(size);\n                        await this.tokenizer.readBuffer(data);\n                        chunks.push(data);\n                    }\n                    else {\n                        // Move position to the next header if found, skip the whole buffer otherwise\n                        await this.tokenizer.ignore(size);\n                    }\n                }\n                debug(`Found data-descriptor-signature at pos=${this.tokenizer.position}`);\n                if (next.handler) {\n                    await this.inflate(zipHeader, mergeArrays(chunks), next.handler);\n                }\n            }\n            else {\n                if (next.handler) {\n                    debug(`Reading compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    fileData = new Uint8Array(zipHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n                else {\n                    debug(`Ignoring compressed-file-data: ${zipHeader.compressedSize} bytes`);\n                    await this.tokenizer.ignore(zipHeader.compressedSize);\n                }\n            }\n            debug(`Reading data-descriptor at pos=${this.tokenizer.position}`);\n            if (zipHeader.dataDescriptor) {\n                // await this.tokenizer.ignore(DataDescriptor.len);\n                const dataDescriptor = await this.tokenizer.readToken(DataDescriptor);\n                if (dataDescriptor.signature !== 0x08074b50) {\n                    throw new Error(`Expected data-descriptor-signature at position ${this.tokenizer.position - DataDescriptor.len}`);\n                }\n            }\n        } while (!stop);\n    }\n    async iterateOverCentralDirectory(entries, fileCb) {\n        for (const fileHeader of entries) {\n            const next = fileCb(fileHeader);\n            if (next.handler) {\n                this.tokenizer.setPosition(fileHeader.relativeOffsetOfLocalHeader);\n                const zipHeader = await this.readLocalFileHeader();\n                if (zipHeader) {\n                    await this.tokenizer.ignore(zipHeader.extraFieldLength);\n                    const fileData = new Uint8Array(fileHeader.compressedSize);\n                    await this.tokenizer.readBuffer(fileData);\n                    await this.inflate(zipHeader, fileData, next.handler);\n                }\n            }\n            if (next.stop)\n                break;\n        }\n    }\n    inflate(zipHeader, fileData, cb) {\n        if (zipHeader.compressedMethod === 0) {\n            return cb(fileData);\n        }\n        debug(`Decompress filename=${zipHeader.filename}, compressed-size=${fileData.length}`);\n        const uncompressedData = decompressSync(fileData);\n        return cb(uncompressedData);\n    }\n    async readLocalFileHeader() {\n        const signature = await this.tokenizer.peekToken(UINT32_LE);\n        if (signature === Signature.LocalFileHeader) {\n            const header = await this.tokenizer.readToken(LocalFileHeaderToken);\n            header.filename = await this.tokenizer.readToken(new StringType(header.filenameLength, 'utf-8'));\n            return header;\n        }\n        if (signature === Signature.CentralFileHeader) {\n            return false;\n        }\n        if (signature === 0xE011CFD0) {\n            throw new Error('Encrypted ZIP');\n        }\n        throw new Error('Unexpected signature');\n    }\n}\nfunction indexOf(buffer, portion) {\n    const bufferLength = buffer.length;\n    const portionLength = portion.length;\n    // Return -1 if the portion is longer than the buffer\n    if (portionLength > bufferLength)\n        return -1;\n    // Search for the portion in the buffer\n    for (let i = 0; i <= bufferLength - portionLength; i++) {\n        let found = true;\n        for (let j = 0; j < portionLength; j++) {\n            if (buffer[i + j] !== portion[j]) {\n                found = false;\n                break;\n            }\n        }\n        if (found) {\n            return i; // Return the starting offset\n        }\n    }\n    return -1; // Not found\n}\nfunction mergeArrays(chunks) {\n    // Concatenate chunks into a single Uint8Array\n    const totalLength = chunks.reduce((acc, curr) => acc + curr.length, 0);\n    const mergedArray = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const chunk of chunks) {\n        mergedArray.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return mergedArray;\n}\n", "const objectToString = Object.prototype.toString;\nconst uint8ArrayStringified = '[object Uint8Array]';\nconst arrayBufferStringified = '[object ArrayBuffer]';\n\nfunction isType(value, typeConstructor, typeStringified) {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\tif (value.constructor === typeConstructor) {\n\t\treturn true;\n\t}\n\n\treturn objectToString.call(value) === typeStringified;\n}\n\nexport function isUint8Array(value) {\n\treturn isType(value, Uint8Array, uint8ArrayStringified);\n}\n\nfunction isArrayBuffer(value) {\n\treturn isType(value, ArrayBuffer, arrayBufferStringified);\n}\n\nfunction isUint8ArrayOrArrayBuffer(value) {\n\treturn isUint8Array(value) || isArrayBuffer(value);\n}\n\nexport function assertUint8Array(value) {\n\tif (!isUint8Array(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function assertUint8ArrayOrArrayBuffer(value) {\n\tif (!isUint8ArrayOrArrayBuffer(value)) {\n\t\tthrow new TypeError(`Expected \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nexport function toUint8Array(value) {\n\tif (value instanceof ArrayBuffer) {\n\t\treturn new Uint8Array(value);\n\t}\n\n\tif (ArrayBuffer.isView(value)) {\n\t\treturn new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t}\n\n\tthrow new TypeError(`Unsupported value, got \\`${typeof value}\\`.`);\n}\n\nexport function concatUint8Arrays(arrays, totalLength) {\n\tif (arrays.length === 0) {\n\t\treturn new Uint8Array(0);\n\t}\n\n\ttotalLength ??= arrays.reduce((accumulator, currentValue) => accumulator + currentValue.length, 0);\n\n\tconst returnValue = new Uint8Array(totalLength);\n\n\tlet offset = 0;\n\tfor (const array of arrays) {\n\t\tassertUint8Array(array);\n\t\treturnValue.set(array, offset);\n\t\toffset += array.length;\n\t}\n\n\treturn returnValue;\n}\n\nexport function areUint8ArraysEqual(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line unicorn/no-for-loop\n\tfor (let index = 0; index < a.length; index++) {\n\t\tif (a[index] !== b[index]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function compareUint8Arrays(a, b) {\n\tassertUint8Array(a);\n\tassertUint8Array(b);\n\n\tconst length = Math.min(a.length, b.length);\n\n\tfor (let index = 0; index < length; index++) {\n\t\tconst diff = a[index] - b[index];\n\t\tif (diff !== 0) {\n\t\t\treturn Math.sign(diff);\n\t\t}\n\t}\n\n\t// At this point, all the compared elements are equal.\n\t// The shorter array should come first if the arrays are of different lengths.\n\treturn Math.sign(a.length - b.length);\n}\n\nconst cachedDecoders = {\n\tutf8: new globalThis.TextDecoder('utf8'),\n};\n\nexport function uint8ArrayToString(array, encoding = 'utf8') {\n\tassertUint8ArrayOrArrayBuffer(array);\n\tcachedDecoders[encoding] ??= new globalThis.TextDecoder(encoding);\n\treturn cachedDecoders[encoding].decode(array);\n}\n\nfunction assertString(value) {\n\tif (typeof value !== 'string') {\n\t\tthrow new TypeError(`Expected \\`string\\`, got \\`${typeof value}\\``);\n\t}\n}\n\nconst cachedEncoder = new globalThis.TextEncoder();\n\nexport function stringToUint8Array(string) {\n\tassertString(string);\n\treturn cachedEncoder.encode(string);\n}\n\nfunction base64ToBase64Url(base64) {\n\treturn base64.replaceAll('+', '-').replaceAll('/', '_').replace(/=+$/, '');\n}\n\nfunction base64UrlToBase64(base64url) {\n\tconst base64 = base64url.replaceAll('-', '+').replaceAll('_', '/');\n\tconst padding = (4 - (base64.length % 4)) % 4;\n\treturn base64 + '='.repeat(padding);\n}\n\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\n// Important: Keep this value divisible by 3 so intermediate chunks produce no Base64 padding.\nconst MAX_BLOCK_SIZE = 65_535;\n\nexport function uint8ArrayToBase64(array, {urlSafe = false} = {}) {\n\tassertUint8Array(array);\n\n\tlet base64 = '';\n\n\tfor (let index = 0; index < array.length; index += MAX_BLOCK_SIZE) {\n\t\tconst chunk = array.subarray(index, index + MAX_BLOCK_SIZE);\n\t\t// Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n\t\tbase64 += globalThis.btoa(String.fromCodePoint.apply(undefined, chunk));\n\t}\n\n\treturn urlSafe ? base64ToBase64Url(base64) : base64;\n}\n\nexport function base64ToUint8Array(base64String) {\n\tassertString(base64String);\n\treturn Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), x => x.codePointAt(0));\n}\n\nexport function stringToBase64(string, {urlSafe = false} = {}) {\n\tassertString(string);\n\treturn uint8ArrayToBase64(stringToUint8Array(string), {urlSafe});\n}\n\nexport function base64ToString(base64String) {\n\tassertString(base64String);\n\treturn uint8ArrayToString(base64ToUint8Array(base64String));\n}\n\nconst byteToHexLookupTable = Array.from({length: 256}, (_, index) => index.toString(16).padStart(2, '0'));\n\nexport function uint8ArrayToHex(array) {\n\tassertUint8Array(array);\n\n\t// Concatenating a string is faster than using an array.\n\tlet hexString = '';\n\n\t// eslint-disable-next-line unicorn/no-for-loop -- Max performance is critical.\n\tfor (let index = 0; index < array.length; index++) {\n\t\thexString += byteToHexLookupTable[array[index]];\n\t}\n\n\treturn hexString;\n}\n\nconst hexToDecimalLookupTable = {\n\t0: 0,\n\t1: 1,\n\t2: 2,\n\t3: 3,\n\t4: 4,\n\t5: 5,\n\t6: 6,\n\t7: 7,\n\t8: 8,\n\t9: 9,\n\ta: 10,\n\tb: 11,\n\tc: 12,\n\td: 13,\n\te: 14,\n\tf: 15,\n\tA: 10,\n\tB: 11,\n\tC: 12,\n\tD: 13,\n\tE: 14,\n\tF: 15,\n};\n\nexport function hexToUint8Array(hexString) {\n\tassertString(hexString);\n\n\tif (hexString.length % 2 !== 0) {\n\t\tthrow new Error('Invalid Hex string length.');\n\t}\n\n\tconst resultLength = hexString.length / 2;\n\tconst bytes = new Uint8Array(resultLength);\n\n\tfor (let index = 0; index < resultLength; index++) {\n\t\tconst highNibble = hexToDecimalLookupTable[hexString[index * 2]];\n\t\tconst lowNibble = hexToDecimalLookupTable[hexString[(index * 2) + 1]];\n\n\t\tif (highNibble === undefined || lowNibble === undefined) {\n\t\t\tthrow new Error(`Invalid Hex character encountered at position ${index * 2}`);\n\t\t}\n\n\t\tbytes[index] = (highNibble << 4) | lowNibble; // eslint-disable-line no-bitwise\n\t}\n\n\treturn bytes;\n}\n\n/**\n@param {DataView} view\n@returns {number}\n*/\nexport function getUintBE(view) {\n\tconst {byteLength} = view;\n\n\tif (byteLength === 6) {\n\t\treturn (view.getUint16(0) * (2 ** 32)) + view.getUint32(2);\n\t}\n\n\tif (byteLength === 5) {\n\t\treturn (view.getUint8(0) * (2 ** 32)) + view.getUint32(1);\n\t}\n\n\tif (byteLength === 4) {\n\t\treturn view.getUint32(0);\n\t}\n\n\tif (byteLength === 3) {\n\t\treturn (view.getUint8(0) * (2 ** 16)) + view.getUint16(1);\n\t}\n\n\tif (byteLength === 2) {\n\t\treturn view.getUint16(0);\n\t}\n\n\tif (byteLength === 1) {\n\t\treturn view.getUint8(0);\n\t}\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {number}\n*/\nexport function indexOf(array, value) {\n\tconst arrayLength = array.length;\n\tconst valueLength = value.length;\n\n\tif (valueLength === 0) {\n\t\treturn -1;\n\t}\n\n\tif (valueLength > arrayLength) {\n\t\treturn -1;\n\t}\n\n\tconst validOffsetLength = arrayLength - valueLength;\n\n\tfor (let index = 0; index <= validOffsetLength; index++) {\n\t\tlet isMatch = true;\n\t\tfor (let index2 = 0; index2 < valueLength; index2++) {\n\t\t\tif (array[index + index2] !== value[index2]) {\n\t\t\t\tisMatch = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isMatch) {\n\t\t\treturn index;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n@param {Uint8Array} array\n@param {Uint8Array} value\n@returns {boolean}\n*/\nexport function includes(array, value) {\n\treturn indexOf(array, value) !== -1;\n}\n", "import {StringType} from 'token-types';\n\nexport function stringToBytes(string) {\n\treturn [...string].map(character => character.charCodeAt(0)); // eslint-disable-line unicorn/prefer-code-point\n}\n\n/**\nChecks whether the TAR checksum is valid.\n\n@param {Uint8Array} arrayBuffer - The TAR header `[offset ... offset + 512]`.\n@param {number} offset - TAR header offset.\n@returns {boolean} `true` if the TAR checksum is valid, otherwise `false`.\n*/\nexport function tarHeaderChecksumMatches(arrayBuffer, offset = 0) {\n\tconst readSum = Number.parseInt(new StringType(6).get(arrayBuffer, 148).replace(/\\0.*$/, '').trim(), 8); // Read sum in header\n\tif (Number.isNaN(readSum)) {\n\t\treturn false;\n\t}\n\n\tlet sum = 8 * 0x20; // Initialize signed bit sum\n\n\tfor (let index = offset; index < offset + 148; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\tfor (let index = offset + 156; index < offset + 512; index++) {\n\t\tsum += arrayBuffer[index];\n\t}\n\n\treturn readSum === sum;\n}\n\n/**\nID3 UINT32 sync-safe tokenizer token.\n28 bits (representing up to 256MB) integer, the msb is 0 to avoid \"false syncsignals\".\n*/\nexport const uint32SyncSafeToken = {\n\tget: (buffer, offset) => (buffer[offset + 3] & 0x7F) | ((buffer[offset + 2]) << 7) | ((buffer[offset + 1]) << 14) | ((buffer[offset]) << 21),\n\tlen: 4,\n};\n", "export const extensions = [\n\t'jpg',\n\t'png',\n\t'apng',\n\t'gif',\n\t'webp',\n\t'flif',\n\t'xcf',\n\t'cr2',\n\t'cr3',\n\t'orf',\n\t'arw',\n\t'dng',\n\t'nef',\n\t'rw2',\n\t'raf',\n\t'tif',\n\t'bmp',\n\t'icns',\n\t'jxr',\n\t'psd',\n\t'indd',\n\t'zip',\n\t'tar',\n\t'rar',\n\t'gz',\n\t'bz2',\n\t'7z',\n\t'dmg',\n\t'mp4',\n\t'mid',\n\t'mkv',\n\t'webm',\n\t'mov',\n\t'avi',\n\t'mpg',\n\t'mp2',\n\t'mp3',\n\t'm4a',\n\t'oga',\n\t'ogg',\n\t'ogv',\n\t'opus',\n\t'flac',\n\t'wav',\n\t'spx',\n\t'amr',\n\t'pdf',\n\t'epub',\n\t'elf',\n\t'macho',\n\t'exe',\n\t'swf',\n\t'rtf',\n\t'wasm',\n\t'woff',\n\t'woff2',\n\t'eot',\n\t'ttf',\n\t'otf',\n\t'ttc',\n\t'ico',\n\t'flv',\n\t'ps',\n\t'xz',\n\t'sqlite',\n\t'nes',\n\t'crx',\n\t'xpi',\n\t'cab',\n\t'deb',\n\t'ar',\n\t'rpm',\n\t'Z',\n\t'lz',\n\t'cfb',\n\t'mxf',\n\t'mts',\n\t'blend',\n\t'bpg',\n\t'docx',\n\t'pptx',\n\t'xlsx',\n\t'3gp',\n\t'3g2',\n\t'j2c',\n\t'jp2',\n\t'jpm',\n\t'jpx',\n\t'mj2',\n\t'aif',\n\t'qcp',\n\t'odt',\n\t'ods',\n\t'odp',\n\t'xml',\n\t'mobi',\n\t'heic',\n\t'cur',\n\t'ktx',\n\t'ape',\n\t'wv',\n\t'dcm',\n\t'ics',\n\t'glb',\n\t'pcap',\n\t'dsf',\n\t'lnk',\n\t'alias',\n\t'voc',\n\t'ac3',\n\t'm4v',\n\t'm4p',\n\t'm4b',\n\t'f4v',\n\t'f4p',\n\t'f4b',\n\t'f4a',\n\t'mie',\n\t'asf',\n\t'ogm',\n\t'ogx',\n\t'mpc',\n\t'arrow',\n\t'shp',\n\t'aac',\n\t'mp1',\n\t'it',\n\t's3m',\n\t'xm',\n\t'skp',\n\t'avif',\n\t'eps',\n\t'lzh',\n\t'pgp',\n\t'asar',\n\t'stl',\n\t'chm',\n\t'3mf',\n\t'zst',\n\t'jxl',\n\t'vcf',\n\t'jls',\n\t'pst',\n\t'dwg',\n\t'parquet',\n\t'class',\n\t'arj',\n\t'cpio',\n\t'ace',\n\t'avro',\n\t'icc',\n\t'fbx',\n\t'vsdx',\n\t'vtt',\n\t'apk',\n\t'drc',\n\t'lz4',\n\t'potx',\n\t'xltx',\n\t'dotx',\n\t'xltm',\n\t'ott',\n\t'ots',\n\t'otp',\n\t'odg',\n\t'otg',\n\t'xlsm',\n\t'docm',\n\t'dotm',\n\t'potm',\n\t'pptm',\n\t'jar',\n\t'rm',\n\t'ppsm',\n\t'ppsx',\n];\n\nexport const mimeTypes = [\n\t'image/jpeg',\n\t'image/png',\n\t'image/gif',\n\t'image/webp',\n\t'image/flif',\n\t'image/x-xcf',\n\t'image/x-canon-cr2',\n\t'image/x-canon-cr3',\n\t'image/tiff',\n\t'image/bmp',\n\t'image/vnd.ms-photo',\n\t'image/vnd.adobe.photoshop',\n\t'application/x-indesign',\n\t'application/epub+zip',\n\t'application/x-xpinstall',\n\t'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text',\n\t'application/vnd.oasis.opendocument.spreadsheet',\n\t'application/vnd.oasis.opendocument.presentation',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n\t'application/zip',\n\t'application/x-tar',\n\t'application/x-rar-compressed',\n\t'application/gzip',\n\t'application/x-bzip2',\n\t'application/x-7z-compressed',\n\t'application/x-apple-diskimage',\n\t'application/vnd.apache.arrow.file',\n\t'video/mp4',\n\t'audio/midi',\n\t'video/matroska',\n\t'video/webm',\n\t'video/quicktime',\n\t'video/vnd.avi',\n\t'audio/wav',\n\t'audio/qcelp',\n\t'audio/x-ms-asf',\n\t'video/x-ms-asf',\n\t'application/vnd.ms-asf',\n\t'video/mpeg',\n\t'video/3gpp',\n\t'audio/mpeg',\n\t'audio/mp4', // RFC 4337\n\t'video/ogg',\n\t'audio/ogg',\n\t'audio/ogg; codecs=opus',\n\t'application/ogg',\n\t'audio/flac',\n\t'audio/ape',\n\t'audio/wavpack',\n\t'audio/amr',\n\t'application/pdf',\n\t'application/x-elf',\n\t'application/x-mach-binary',\n\t'application/x-msdownload',\n\t'application/x-shockwave-flash',\n\t'application/rtf',\n\t'application/wasm',\n\t'font/woff',\n\t'font/woff2',\n\t'application/vnd.ms-fontobject',\n\t'font/ttf',\n\t'font/otf',\n\t'font/collection',\n\t'image/x-icon',\n\t'video/x-flv',\n\t'application/postscript',\n\t'application/eps',\n\t'application/x-xz',\n\t'application/x-sqlite3',\n\t'application/x-nintendo-nes-rom',\n\t'application/x-google-chrome-extension',\n\t'application/vnd.ms-cab-compressed',\n\t'application/x-deb',\n\t'application/x-unix-archive',\n\t'application/x-rpm',\n\t'application/x-compress',\n\t'application/x-lzip',\n\t'application/x-cfb',\n\t'application/x-mie',\n\t'application/mxf',\n\t'video/mp2t',\n\t'application/x-blender',\n\t'image/bpg',\n\t'image/j2c',\n\t'image/jp2',\n\t'image/jpx',\n\t'image/jpm',\n\t'image/mj2',\n\t'audio/aiff',\n\t'application/xml',\n\t'application/x-mobipocket-ebook',\n\t'image/heif',\n\t'image/heif-sequence',\n\t'image/heic',\n\t'image/heic-sequence',\n\t'image/icns',\n\t'image/ktx',\n\t'application/dicom',\n\t'audio/x-musepack',\n\t'text/calendar',\n\t'text/vcard',\n\t'text/vtt',\n\t'model/gltf-binary',\n\t'application/vnd.tcpdump.pcap',\n\t'audio/x-dsf', // Non-standard\n\t'application/x.ms.shortcut', // Invented by us\n\t'application/x.apple.alias', // Invented by us\n\t'audio/x-voc',\n\t'audio/vnd.dolby.dd-raw',\n\t'audio/x-m4a',\n\t'image/apng',\n\t'image/x-olympus-orf',\n\t'image/x-sony-arw',\n\t'image/x-adobe-dng',\n\t'image/x-nikon-nef',\n\t'image/x-panasonic-rw2',\n\t'image/x-fujifilm-raf',\n\t'video/x-m4v',\n\t'video/3gpp2',\n\t'application/x-esri-shape',\n\t'audio/aac',\n\t'audio/x-it',\n\t'audio/x-s3m',\n\t'audio/x-xm',\n\t'video/MP1S',\n\t'video/MP2P',\n\t'application/vnd.sketchup.skp',\n\t'image/avif',\n\t'application/x-lzh-compressed',\n\t'application/pgp-encrypted',\n\t'application/x-asar',\n\t'model/stl',\n\t'application/vnd.ms-htmlhelp',\n\t'model/3mf',\n\t'image/jxl',\n\t'application/zstd',\n\t'image/jls',\n\t'application/vnd.ms-outlook',\n\t'image/vnd.dwg',\n\t'application/vnd.apache.parquet',\n\t'application/java-vm',\n\t'application/x-arj',\n\t'application/x-cpio',\n\t'application/x-ace-compressed',\n\t'application/avro',\n\t'application/vnd.iccprofile',\n\t'application/x.autodesk.fbx', // Invented by us\n\t'application/vnd.visio',\n\t'application/vnd.android.package-archive',\n\t'application/vnd.google.draco', // Invented by us\n\t'application/x-lz4', // Invented by us\n\t'application/vnd.openxmlformats-officedocument.presentationml.template',\n\t'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n\t'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n\t'application/vnd.ms-excel.template.macroenabled.12',\n\t'application/vnd.oasis.opendocument.text-template',\n\t'application/vnd.oasis.opendocument.spreadsheet-template',\n\t'application/vnd.oasis.opendocument.presentation-template',\n\t'application/vnd.oasis.opendocument.graphics',\n\t'application/vnd.oasis.opendocument.graphics-template',\n\t'application/vnd.ms-excel.sheet.macroenabled.12',\n\t'application/vnd.ms-word.document.macroenabled.12',\n\t'application/vnd.ms-word.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t'application/java-archive',\n\t'application/vnd.rn-realmedia',\n];\n", "/**\nPrimary entry point, Node.js specific entry point is index.js\n*/\n\nimport * as Token from 'token-types';\nimport * as strtok3 from 'strtok3/core';\nimport {ZipHandler} from '@tokenizer/inflate';\nimport {getUintBE} from 'uint8array-extras';\nimport {\n\tstringToBytes,\n\ttarHeaderChecksumMatches,\n\tuint32SyncSafeToken,\n} from './util.js';\nimport {extensions, mimeTypes} from './supported.js';\n\nexport const reasonableDetectionSizeInBytes = 4100; // A fair amount of file-types are detectable within this range.\n\nexport async function fileTypeFromStream(stream, options) {\n\treturn new FileTypeParser(options).fromStream(stream);\n}\n\nexport async function fileTypeFromBuffer(input, options) {\n\treturn new FileTypeParser(options).fromBuffer(input);\n}\n\nexport async function fileTypeFromBlob(blob, options) {\n\treturn new FileTypeParser(options).fromBlob(blob);\n}\n\nfunction getFileTypeFromMimeType(mimeType) {\n\tmimeType = mimeType.toLowerCase();\n\tswitch (mimeType) {\n\t\tcase 'application/epub+zip':\n\t\t\treturn {\n\t\t\t\text: 'epub',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text':\n\t\t\treturn {\n\t\t\t\text: 'odt',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.text-template':\n\t\t\treturn {\n\t\t\t\text: 'ott',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet':\n\t\t\treturn {\n\t\t\t\text: 'ods',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.spreadsheet-template':\n\t\t\treturn {\n\t\t\t\text: 'ots',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation':\n\t\t\treturn {\n\t\t\t\text: 'odp',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.presentation-template':\n\t\t\treturn {\n\t\t\t\text: 'otp',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics':\n\t\t\treturn {\n\t\t\t\text: 'odg',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.oasis.opendocument.graphics-template':\n\t\t\treturn {\n\t\t\t\text: 'otg',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.slideshow':\n\t\t\treturn {\n\t\t\t\text: 'ppsx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet':\n\t\t\treturn {\n\t\t\t\text: 'xlsx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.sheet.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xlsm',\n\t\t\t\tmime: 'application/vnd.ms-excel.sheet.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.spreadsheetml.template':\n\t\t\treturn {\n\t\t\t\text: 'xltx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-excel.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'xltm',\n\t\t\t\tmime: 'application/vnd.ms-excel.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.slideshow.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'ppsm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.slideshow.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n\t\t\treturn {\n\t\t\t\text: 'docx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.document.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'docm',\n\t\t\t\tmime: 'application/vnd.ms-word.document.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.wordprocessingml.template':\n\t\t\treturn {\n\t\t\t\text: 'dotx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-word.template.macroenabledtemplate':\n\t\t\treturn {\n\t\t\t\text: 'dotm',\n\t\t\t\tmime: 'application/vnd.ms-word.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.template':\n\t\t\treturn {\n\t\t\t\text: 'potx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.template.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'potm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.template.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.openxmlformats-officedocument.presentationml.presentation':\n\t\t\treturn {\n\t\t\t\text: 'pptx',\n\t\t\t\tmime: mimeType,\n\t\t\t};\n\t\tcase 'application/vnd.ms-powerpoint.presentation.macroenabled':\n\t\t\treturn {\n\t\t\t\text: 'pptm',\n\t\t\t\tmime: 'application/vnd.ms-powerpoint.presentation.macroenabled.12',\n\t\t\t};\n\t\tcase 'application/vnd.ms-visio.drawing':\n\t\t\treturn {\n\t\t\t\text: 'vsdx',\n\t\t\t\tmime: 'application/vnd.visio',\n\t\t\t};\n\t\tcase 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml':\n\t\t\treturn {\n\t\t\t\text: '3mf',\n\t\t\t\tmime: 'model/3mf',\n\t\t\t};\n\t\tdefault:\n\t}\n}\n\nfunction _check(buffer, headers, options) {\n\toptions = {\n\t\toffset: 0,\n\t\t...options,\n\t};\n\n\tfor (const [index, header] of headers.entries()) {\n\t\t// If a bitmask is set\n\t\tif (options.mask) {\n\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\tif (header !== (options.mask[index] & buffer[index + options.offset])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (header !== buffer[index + options.offset]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport async function fileTypeFromTokenizer(tokenizer, options) {\n\treturn new FileTypeParser(options).fromTokenizer(tokenizer);\n}\n\nexport async function fileTypeStream(webStream, options) {\n\treturn new FileTypeParser(options).toDetectionStream(webStream, options);\n}\n\nexport class FileTypeParser {\n\tconstructor(options) {\n\t\tthis.options = {\n\t\t\tmpegOffsetTolerance: 0,\n\t\t\t...options,\n\t\t};\n\n\t\tthis.detectors = [...(options?.customDetectors ?? []),\n\t\t\t{id: 'core', detect: this.detectConfident},\n\t\t\t{id: 'core.imprecise', detect: this.detectImprecise}];\n\t\tthis.tokenizerOptions = {\n\t\t\tabortSignal: options?.signal,\n\t\t};\n\t}\n\n\tasync fromTokenizer(tokenizer) {\n\t\tconst initialPosition = tokenizer.position;\n\n\t\t// Iterate through all file-type detectors\n\t\tfor (const detector of this.detectors) {\n\t\t\tconst fileType = await detector.detect(tokenizer);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\n\t\t\tif (initialPosition !== tokenizer.position) {\n\t\t\t\treturn undefined; // Cannot proceed scanning of the tokenizer is at an arbitrary position\n\t\t\t}\n\t\t}\n\t}\n\n\tasync fromBuffer(input) {\n\t\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer)) {\n\t\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t\t}\n\n\t\tconst buffer = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\t\tif (!(buffer?.length > 1)) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.fromTokenizer(strtok3.fromBuffer(buffer, this.tokenizerOptions));\n\t}\n\n\tasync fromBlob(blob) {\n\t\treturn this.fromStream(blob.stream());\n\t}\n\n\tasync fromStream(stream) {\n\t\tconst tokenizer = await strtok3.fromWebStream(stream, this.tokenizerOptions);\n\t\ttry {\n\t\t\treturn await this.fromTokenizer(tokenizer);\n\t\t} finally {\n\t\t\tawait tokenizer.close();\n\t\t}\n\t}\n\n\tasync toDetectionStream(stream, options) {\n\t\tconst {sampleSize = reasonableDetectionSizeInBytes} = options;\n\t\tlet detectedFileType;\n\t\tlet firstChunk;\n\n\t\tconst reader = stream.getReader({mode: 'byob'});\n\t\ttry {\n\t\t\t// Read the first chunk from the stream\n\t\t\tconst {value: chunk, done} = await reader.read(new Uint8Array(sampleSize));\n\t\t\tfirstChunk = chunk;\n\t\t\tif (!done && chunk) {\n\t\t\t\ttry {\n\t\t\t\t\t// Attempt to detect the file type from the chunk\n\t\t\t\t\tdetectedFileType = await this.fromBuffer(chunk.subarray(0, sampleSize));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!(error instanceof strtok3.EndOfStreamError)) {\n\t\t\t\t\t\tthrow error; // Re-throw non-EndOfStreamError\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedFileType = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfirstChunk = chunk;\n\t\t} finally {\n\t\t\treader.releaseLock(); // Ensure the reader is released\n\t\t}\n\n\t\t// Create a new ReadableStream to manage locking issues\n\t\tconst transformStream = new TransformStream({\n\t\t\tasync start(controller) {\n\t\t\t\tcontroller.enqueue(firstChunk); // Enqueue the initial chunk\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\t// Pass through the chunks without modification\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t});\n\n\t\tconst newStream = stream.pipeThrough(transformStream);\n\t\tnewStream.fileType = detectedFileType;\n\n\t\treturn newStream;\n\t}\n\n\tcheck(header, options) {\n\t\treturn _check(this.buffer, header, options);\n\t}\n\n\tcheckString(header, options) {\n\t\treturn this.check(stringToBytes(header), options);\n\t}\n\n\t// Detections with a high degree of certainty in identifying the correct file type\n\tdetectConfident = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Keep reading until EOF if the file size is unknown.\n\t\tif (tokenizer.fileInfo.size === undefined) {\n\t\t\ttokenizer.fileInfo.size = Number.MAX_SAFE_INTEGER;\n\t\t}\n\n\t\tthis.tokenizer = tokenizer;\n\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: 12, mayBeLess: true});\n\n\t\t// -- 2-byte signatures --\n\n\t\tif (this.check([0x42, 0x4D])) {\n\t\t\treturn {\n\t\t\t\text: 'bmp',\n\t\t\t\tmime: 'image/bmp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x0B, 0x77])) {\n\t\t\treturn {\n\t\t\t\text: 'ac3',\n\t\t\t\tmime: 'audio/vnd.dolby.dd-raw',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x78, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'dmg',\n\t\t\t\tmime: 'application/x-apple-diskimage',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4D, 0x5A])) {\n\t\t\treturn {\n\t\t\t\text: 'exe',\n\t\t\t\tmime: 'application/x-msdownload',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x25, 0x21])) {\n\t\t\tawait tokenizer.peekBuffer(this.buffer, {length: 24, mayBeLess: true});\n\n\t\t\tif (\n\t\t\t\tthis.checkString('PS-Adobe-', {offset: 2})\n\t\t\t\t&& this.checkString(' EPSF-', {offset: 14})\n\t\t\t) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'eps',\n\t\t\t\t\tmime: 'application/eps',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ps',\n\t\t\t\tmime: 'application/postscript',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x1F, 0xA0])\n\t\t\t|| this.check([0x1F, 0x9D])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'Z',\n\t\t\t\tmime: 'application/x-compress',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC7, 0x71])) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x60, 0xEA])) {\n\t\t\treturn {\n\t\t\t\text: 'arj',\n\t\t\t\tmime: 'application/x-arj',\n\t\t\t};\n\t\t}\n\n\t\t// -- 3-byte signatures --\n\n\t\tif (this.check([0xEF, 0xBB, 0xBF])) { // UTF-8-BOM\n\t\t\t// Strip off UTF-8-BOM\n\t\t\tthis.tokenizer.ignore(3);\n\t\t\treturn this.detectConfident(tokenizer);\n\t\t}\n\n\t\tif (this.check([0x47, 0x49, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'gif',\n\t\t\t\tmime: 'image/gif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0xBC])) {\n\t\t\treturn {\n\t\t\t\text: 'jxr',\n\t\t\t\tmime: 'image/vnd.ms-photo',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x1F, 0x8B, 0x8])) {\n\t\t\treturn {\n\t\t\t\text: 'gz',\n\t\t\t\tmime: 'application/gzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x5A, 0x68])) {\n\t\t\treturn {\n\t\t\t\text: 'bz2',\n\t\t\t\tmime: 'application/x-bzip2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ID3')) {\n\t\t\tawait tokenizer.ignore(6); // Skip ID3 header until the header size\n\t\t\tconst id3HeaderLength = await tokenizer.readToken(uint32SyncSafeToken);\n\t\t\tif (tokenizer.position + id3HeaderLength > tokenizer.fileInfo.size) {\n\t\t\t\t// Guess file type based on ID3 header for backward compatibility\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(id3HeaderLength);\n\t\t\treturn this.fromTokenizer(tokenizer); // Skip ID3 header, recursion\n\t\t}\n\n\t\t// Musepack, SV7\n\t\tif (this.checkString('MP+')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\t(this.buffer[0] === 0x43 || this.buffer[0] === 0x46)\n\t\t\t&& this.check([0x57, 0x53], {offset: 1})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'swf',\n\t\t\t\tmime: 'application/x-shockwave-flash',\n\t\t\t};\n\t\t}\n\n\t\t// -- 4-byte signatures --\n\n\t\t// Requires a sample size of 4 bytes\n\t\tif (this.check([0xFF, 0xD8, 0xFF])) {\n\t\t\tif (this.check([0xF7], {offset: 3})) { // JPG7/SOF55, indicating a ISO/IEC 14495 / JPEG-LS file\n\t\t\t\treturn {\n\t\t\t\t\text: 'jls',\n\t\t\t\t\tmime: 'image/jls',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'jpg',\n\t\t\t\tmime: 'image/jpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4F, 0x62, 0x6A, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'avro',\n\t\t\t\tmime: 'application/avro',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FLIF')) {\n\t\t\treturn {\n\t\t\t\text: 'flif',\n\t\t\t\tmime: 'image/flif',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('8BPS')) {\n\t\t\treturn {\n\t\t\t\text: 'psd',\n\t\t\t\tmime: 'image/vnd.adobe.photoshop',\n\t\t\t};\n\t\t}\n\n\t\t// Musepack, SV8\n\t\tif (this.checkString('MPCK')) {\n\t\t\treturn {\n\t\t\t\text: 'mpc',\n\t\t\t\tmime: 'audio/x-musepack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('FORM')) {\n\t\t\treturn {\n\t\t\t\text: 'aif',\n\t\t\t\tmime: 'audio/aiff',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('icns', {offset: 0})) {\n\t\t\treturn {\n\t\t\t\text: 'icns',\n\t\t\t\tmime: 'image/icns',\n\t\t\t};\n\t\t}\n\n\t\t// Zip-based file formats\n\t\t// Need to be before the `zip` check\n\t\tif (this.check([0x50, 0x4B, 0x3, 0x4])) { // Local file header signature\n\t\t\tlet fileType;\n\t\t\tawait new ZipHandler(tokenizer).unzip(zipHeader => {\n\t\t\t\tswitch (zipHeader.filename) {\n\t\t\t\t\tcase 'META-INF/mozilla.rsa':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'xpi',\n\t\t\t\t\t\t\tmime: 'application/x-xpinstall',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'META-INF/MANIFEST.MF':\n\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\text: 'jar',\n\t\t\t\t\t\t\tmime: 'application/java-archive',\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'mimetype':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tconst mimeType = new TextDecoder('utf-8').decode(fileData).trim();\n\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase '[Content_Types].xml':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync handler(fileData) {\n\t\t\t\t\t\t\t\t// Use TextDecoder to decode the UTF-8 encoded data\n\t\t\t\t\t\t\t\tlet xmlContent = new TextDecoder('utf-8').decode(fileData);\n\t\t\t\t\t\t\t\tconst endPos = xmlContent.indexOf('.main+xml\"');\n\t\t\t\t\t\t\t\tif (endPos === -1) {\n\t\t\t\t\t\t\t\t\tconst mimeType = 'application/vnd.ms-package.3dmanufacturing-3dmodel+xml';\n\t\t\t\t\t\t\t\t\tif (xmlContent.includes(`ContentType=\"${mimeType}\"`)) {\n\t\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\txmlContent = xmlContent.slice(0, Math.max(0, endPos));\n\t\t\t\t\t\t\t\t\tconst firstPos = xmlContent.lastIndexOf('\"');\n\t\t\t\t\t\t\t\t\tconst mimeType = xmlContent.slice(Math.max(0, firstPos + 1));\n\t\t\t\t\t\t\t\t\tfileType = getFileTypeFromMimeType(mimeType);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tstop: true,\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (/classes\\d*\\.dex/.test(zipHeader.filename)) {\n\t\t\t\t\t\t\tfileType = {\n\t\t\t\t\t\t\t\text: 'apk',\n\t\t\t\t\t\t\t\tmime: 'application/vnd.android.package-archive',\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\treturn {stop: true};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('OggS')) {\n\t\t\t// This is an OGG container\n\t\t\tawait tokenizer.ignore(28);\n\t\t\tconst type = new Uint8Array(8);\n\t\t\tawait tokenizer.readBuffer(type);\n\n\t\t\t// Needs to be before `ogg` check\n\t\t\tif (_check(type, [0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'opus',\n\t\t\t\t\tmime: 'audio/ogg; codecs=opus',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' theora' in header.\n\t\t\tif (_check(type, [0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogv',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01video' in header.\n\t\t\tif (_check(type, [0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogm',\n\t\t\t\t\tmime: 'video/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\t\tif (_check(type, [0x7F, 0x46, 0x4C, 0x41, 0x43])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'oga',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\t\tif (_check(type, [0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'spx',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If '\\x01vorbis' in header\n\t\t\tif (_check(type, [0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73])) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ogg',\n\t\t\t\t\tmime: 'audio/ogg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\t\treturn {\n\t\t\t\text: 'ogx',\n\t\t\t\tmime: 'application/ogg',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x50, 0x4B])\n\t\t\t&& (this.buffer[2] === 0x3 || this.buffer[2] === 0x5 || this.buffer[2] === 0x7)\n\t\t\t&& (this.buffer[3] === 0x4 || this.buffer[3] === 0x6 || this.buffer[3] === 0x8)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'zip',\n\t\t\t\tmime: 'application/zip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('MThd')) {\n\t\t\treturn {\n\t\t\t\text: 'mid',\n\t\t\t\tmime: 'audio/midi',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOFF')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff',\n\t\t\t\tmime: 'font/woff',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('wOF2')\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x01, 0x00, 0x00], {offset: 4})\n\t\t\t\t|| this.checkString('OTTO', {offset: 4})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'woff2',\n\t\t\t\tmime: 'font/woff2',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xD4, 0xC3, 0xB2, 0xA1]) || this.check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\t\treturn {\n\t\t\t\text: 'pcap',\n\t\t\t\tmime: 'application/vnd.tcpdump.pcap',\n\t\t\t};\n\t\t}\n\n\t\t// Sony DSD Stream File (DSF)\n\t\tif (this.checkString('DSD ')) {\n\t\t\treturn {\n\t\t\t\text: 'dsf',\n\t\t\t\tmime: 'audio/x-dsf', // Non-standard\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('LZIP')) {\n\t\t\treturn {\n\t\t\t\text: 'lz',\n\t\t\t\tmime: 'application/x-lzip',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('fLaC')) {\n\t\t\treturn {\n\t\t\t\text: 'flac',\n\t\t\t\tmime: 'audio/flac',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x50, 0x47, 0xFB])) {\n\t\t\treturn {\n\t\t\t\text: 'bpg',\n\t\t\t\tmime: 'image/bpg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('wvpk')) {\n\t\t\treturn {\n\t\t\t\text: 'wv',\n\t\t\t\tmime: 'audio/wavpack',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('%PDF')) {\n\t\t\t// Assume this is just a normal PDF\n\t\t\treturn {\n\t\t\t\text: 'pdf',\n\t\t\t\tmime: 'application/pdf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x61, 0x73, 0x6D])) {\n\t\t\treturn {\n\t\t\t\text: 'wasm',\n\t\t\t\tmime: 'application/wasm',\n\t\t\t};\n\t\t}\n\n\t\t// TIFF, little-endian type\n\t\tif (this.check([0x49, 0x49])) {\n\t\t\tconst fileType = await this.readTiffHeader(false);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\t// TIFF, big-endian type\n\t\tif (this.check([0x4D, 0x4D])) {\n\t\t\tconst fileType = await this.readTiffHeader(true);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('MAC ')) {\n\t\t\treturn {\n\t\t\t\text: 'ape',\n\t\t\t\tmime: 'audio/ape',\n\t\t\t};\n\t\t}\n\n\t\t// https://github.com/file/file/blob/master/magic/Magdir/matroska\n\t\tif (this.check([0x1A, 0x45, 0xDF, 0xA3])) { // Root element: EBML\n\t\t\tasync function readField() {\n\t\t\t\tconst msb = await tokenizer.peekNumber(Token.UINT8);\n\t\t\t\tlet mask = 0x80;\n\t\t\t\tlet ic = 0; // 0 = A, 1 = B, 2 = C, 3 = D\n\n\t\t\t\twhile ((msb & mask) === 0 && mask !== 0) {\n\t\t\t\t\t++ic;\n\t\t\t\t\tmask >>= 1;\n\t\t\t\t}\n\n\t\t\t\tconst id = new Uint8Array(ic + 1);\n\t\t\t\tawait tokenizer.readBuffer(id);\n\t\t\t\treturn id;\n\t\t\t}\n\n\t\t\tasync function readElement() {\n\t\t\t\tconst idField = await readField();\n\t\t\t\tconst lengthField = await readField();\n\n\t\t\t\tlengthField[0] ^= 0x80 >> (lengthField.length - 1);\n\t\t\t\tconst nrLength = Math.min(6, lengthField.length); // JavaScript can max read 6 bytes integer\n\n\t\t\t\tconst idView = new DataView(idField.buffer);\n\t\t\t\tconst lengthView = new DataView(lengthField.buffer, lengthField.length - nrLength, nrLength);\n\n\t\t\t\treturn {\n\t\t\t\t\tid: getUintBE(idView),\n\t\t\t\t\tlen: getUintBE(lengthView),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tasync function readChildren(children) {\n\t\t\t\twhile (children > 0) {\n\t\t\t\t\tconst element = await readElement();\n\t\t\t\t\tif (element.id === 0x42_82) {\n\t\t\t\t\t\tconst rawValue = await tokenizer.readToken(new Token.StringType(element.len));\n\t\t\t\t\t\treturn rawValue.replaceAll(/\\00.*$/g, ''); // Return DocType\n\t\t\t\t\t}\n\n\t\t\t\t\tawait tokenizer.ignore(element.len); // ignore payload\n\t\t\t\t\t--children;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst re = await readElement();\n\t\t\tconst documentType = await readChildren(re.len);\n\n\t\t\tswitch (documentType) {\n\t\t\t\tcase 'webm':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'webm',\n\t\t\t\t\t\tmime: 'video/webm',\n\t\t\t\t\t};\n\n\t\t\t\tcase 'matroska':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mkv',\n\t\t\t\t\t\tmime: 'video/matroska',\n\t\t\t\t\t};\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('SQLi')) {\n\t\t\treturn {\n\t\t\t\text: 'sqlite',\n\t\t\t\tmime: 'application/x-sqlite3',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\t\treturn {\n\t\t\t\text: 'nes',\n\t\t\t\tmime: 'application/x-nintendo-nes-rom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Cr24')) {\n\t\t\treturn {\n\t\t\t\text: 'crx',\n\t\t\t\tmime: 'application/x-google-chrome-extension',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('MSCF')\n\t\t\t|| this.checkString('ISc(')\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'cab',\n\t\t\t\tmime: 'application/vnd.ms-cab-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\t\treturn {\n\t\t\t\text: 'rpm',\n\t\t\t\tmime: 'application/x-rpm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xC5, 0xD0, 0xD3, 0xC6])) {\n\t\t\treturn {\n\t\t\t\text: 'eps',\n\t\t\t\tmime: 'application/eps',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x28, 0xB5, 0x2F, 0xFD])) {\n\t\t\treturn {\n\t\t\t\text: 'zst',\n\t\t\t\tmime: 'application/zstd',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x7F, 0x45, 0x4C, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'elf',\n\t\t\t\tmime: 'application/x-elf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x21, 0x42, 0x44, 0x4E])) {\n\t\t\treturn {\n\t\t\t\text: 'pst',\n\t\t\t\tmime: 'application/vnd.ms-outlook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('PAR1') || this.checkString('PARE')) {\n\t\t\treturn {\n\t\t\t\text: 'parquet',\n\t\t\t\tmime: 'application/vnd.apache.parquet',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('ttcf')) {\n\t\t\treturn {\n\t\t\t\text: 'ttc',\n\t\t\t\tmime: 'font/collection',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCF, 0xFA, 0xED, 0xFE])) {\n\t\t\treturn {\n\t\t\t\text: 'macho',\n\t\t\t\tmime: 'application/x-mach-binary',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x22, 0x4D, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'lz4',\n\t\t\t\tmime: 'application/x-lz4', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'otf',\n\t\t\t\tmime: 'font/otf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('#!AMR')) {\n\t\t\treturn {\n\t\t\t\text: 'amr',\n\t\t\t\tmime: 'audio/amr',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('{\\\\rtf')) {\n\t\t\treturn {\n\t\t\t\text: 'rtf',\n\t\t\t\tmime: 'application/rtf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x46, 0x4C, 0x56, 0x01])) {\n\t\t\treturn {\n\t\t\t\text: 'flv',\n\t\t\t\tmime: 'video/x-flv',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('IMPM')) {\n\t\t\treturn {\n\t\t\t\text: 'it',\n\t\t\t\tmime: 'audio/x-it',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('-lh0-', {offset: 2})\n\t\t\t|| this.checkString('-lh1-', {offset: 2})\n\t\t\t|| this.checkString('-lh2-', {offset: 2})\n\t\t\t|| this.checkString('-lh3-', {offset: 2})\n\t\t\t|| this.checkString('-lh4-', {offset: 2})\n\t\t\t|| this.checkString('-lh5-', {offset: 2})\n\t\t\t|| this.checkString('-lh6-', {offset: 2})\n\t\t\t|| this.checkString('-lh7-', {offset: 2})\n\t\t\t|| this.checkString('-lzs-', {offset: 2})\n\t\t\t|| this.checkString('-lz4-', {offset: 2})\n\t\t\t|| this.checkString('-lz5-', {offset: 2})\n\t\t\t|| this.checkString('-lhd-', {offset: 2})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'lzh',\n\t\t\t\tmime: 'application/x-lzh-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// MPEG program stream (PS or MPEG-PS)\n\t\tif (this.check([0x00, 0x00, 0x01, 0xBA])) {\n\t\t\t//  MPEG-PS, MPEG-1 Part 1\n\t\t\tif (this.check([0x21], {offset: 4, mask: [0xF1]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .ps, .mpeg\n\t\t\t\t\tmime: 'video/MP1S',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG-PS, MPEG-2 Part 1\n\t\t\tif (this.check([0x44], {offset: 4, mask: [0xC4]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mpg', // May also be .mpg, .m2p, .vob or .sub\n\t\t\t\t\tmime: 'video/MP2P',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('ITSF')) {\n\t\t\treturn {\n\t\t\t\text: 'chm',\n\t\t\t\tmime: 'application/vnd.ms-htmlhelp',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xCA, 0xFE, 0xBA, 0xBE])) {\n\t\t\treturn {\n\t\t\t\text: 'class',\n\t\t\t\tmime: 'application/java-vm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('.RMF')) {\n\t\t\treturn {\n\t\t\t\text: 'rm',\n\t\t\t\tmime: 'application/vnd.rn-realmedia',\n\t\t\t};\n\t\t}\n\n\t\t// -- 5-byte signatures --\n\n\t\tif (this.checkString('DRACO')) {\n\t\t\treturn {\n\t\t\t\text: 'drc',\n\t\t\t\tmime: 'application/vnd.google.draco', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\t// -- 6-byte signatures --\n\n\t\tif (this.check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'xz',\n\t\t\t\tmime: 'application/x-xz',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('<?xml ')) {\n\t\t\treturn {\n\t\t\t\text: 'xml',\n\t\t\t\tmime: 'application/xml',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\t\treturn {\n\t\t\t\text: '7z',\n\t\t\t\tmime: 'application/x-7z-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7])\n\t\t\t&& (this.buffer[6] === 0x0 || this.buffer[6] === 0x1)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'rar',\n\t\t\t\tmime: 'application/x-rar-compressed',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('solid ')) {\n\t\t\treturn {\n\t\t\t\text: 'stl',\n\t\t\t\tmime: 'model/stl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('AC')) {\n\t\t\tconst version = new Token.StringType(4, 'latin1').get(this.buffer, 2);\n\t\t\tif (version.match('^d*') && version >= 1000 && version <= 1050) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'dwg',\n\t\t\t\t\tmime: 'image/vnd.dwg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.checkString('070707')) {\n\t\t\treturn {\n\t\t\t\text: 'cpio',\n\t\t\t\tmime: 'application/x-cpio',\n\t\t\t};\n\t\t}\n\n\t\t// -- 7-byte signatures --\n\n\t\tif (this.checkString('BLENDER')) {\n\t\t\treturn {\n\t\t\t\text: 'blend',\n\t\t\t\tmime: 'application/x-blender',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('!<arch>')) {\n\t\t\tawait tokenizer.ignore(8);\n\t\t\tconst string = await tokenizer.readToken(new Token.StringType(13, 'ascii'));\n\t\t\tif (string === 'debian-binary') {\n\t\t\t\treturn {\n\t\t\t\t\text: 'deb',\n\t\t\t\t\tmime: 'application/x-deb',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\text: 'ar',\n\t\t\t\tmime: 'application/x-unix-archive',\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.checkString('WEBVTT')\n\t\t\t&&\t(\n\t\t\t\t// One of LF, CR, tab, space, or end of file must follow \"WEBVTT\" per the spec (see `fixture/fixture-vtt-*.vtt` for examples). Note that `\\0` is technically the null character (there is no such thing as an EOF character). However, checking for `\\0` gives us the same result as checking for the end of the stream.\n\t\t\t\t(['\\n', '\\r', '\\t', ' ', '\\0'].some(char7 => this.checkString(char7, {offset: 6}))))\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'vtt',\n\t\t\t\tmime: 'text/vtt',\n\t\t\t};\n\t\t}\n\n\t\t// -- 8-byte signatures --\n\n\t\tif (this.check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\t// APNG format (https://wiki.mozilla.org/APNG_Specification)\n\t\t\t// 1. Find the first IDAT (image data) chunk (49 44 41 54)\n\t\t\t// 2. Check if there is an \"acTL\" chunk before the IDAT one (61 63 54 4C)\n\n\t\t\t// Offset calculated as follows:\n\t\t\t// - 8 bytes: PNG signature\n\t\t\t// - 4 (length) + 4 (chunk type) + 13 (chunk data) + 4 (CRC): IHDR chunk\n\n\t\t\tawait tokenizer.ignore(8); // ignore PNG signature\n\n\t\t\tasync function readChunkHeader() {\n\t\t\t\treturn {\n\t\t\t\t\tlength: await tokenizer.readToken(Token.INT32_BE),\n\t\t\t\t\ttype: await tokenizer.readToken(new Token.StringType(4, 'latin1')),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tconst chunk = await readChunkHeader();\n\t\t\t\tif (chunk.length < 0) {\n\t\t\t\t\treturn; // Invalid chunk length\n\t\t\t\t}\n\n\t\t\t\tswitch (chunk.type) {\n\t\t\t\t\tcase 'IDAT':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'png',\n\t\t\t\t\t\t\tmime: 'image/png',\n\t\t\t\t\t\t};\n\t\t\t\t\tcase 'acTL':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'apng',\n\t\t\t\t\t\t\tmime: 'image/apng',\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tawait tokenizer.ignore(chunk.length + 4); // Ignore chunk-data + CRC\n\t\t\t\t}\n\t\t\t} while (tokenizer.position + 8 < tokenizer.fileInfo.size);\n\n\t\t\treturn {\n\t\t\t\text: 'png',\n\t\t\t\tmime: 'image/png',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x41, 0x52, 0x52, 0x4F, 0x57, 0x31, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'arrow',\n\t\t\t\tmime: 'application/vnd.apache.arrow.file',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'glb',\n\t\t\t\tmime: 'model/gltf-binary',\n\t\t\t};\n\t\t}\n\n\t\t// `mov` format variants\n\t\tif (\n\t\t\tthis.check([0x66, 0x72, 0x65, 0x65], {offset: 4}) // `free`\n\t\t\t|| this.check([0x6D, 0x64, 0x61, 0x74], {offset: 4}) // `mdat` MJPEG\n\t\t\t|| this.check([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) // `moov`\n\t\t\t|| this.check([0x77, 0x69, 0x64, 0x65], {offset: 4}) // `wide`\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mov',\n\t\t\t\tmime: 'video/quicktime',\n\t\t\t};\n\t\t}\n\n\t\t// -- 9-byte signatures --\n\n\t\tif (this.check([0x49, 0x49, 0x52, 0x4F, 0x08, 0x00, 0x00, 0x00, 0x18])) {\n\t\t\treturn {\n\t\t\t\text: 'orf',\n\t\t\t\tmime: 'image/x-olympus-orf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('gimp xcf ')) {\n\t\t\treturn {\n\t\t\t\text: 'xcf',\n\t\t\t\tmime: 'image/x-xcf',\n\t\t\t};\n\t\t}\n\n\t\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\t\t// It's not required to be first, but it's recommended to be. Almost all ISO base media files start with `ftyp` box.\n\t\t// `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n\t\t// Here we check for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n\t\tif (\n\t\t\tthis.checkString('ftyp', {offset: 4})\n\t\t\t&& (this.buffer[8] & 0x60) !== 0x00 // Brand major, first character ASCII?\n\t\t) {\n\t\t\t// They all can have MIME `video/mp4` except `application/mp4` special-case which is hard to detect.\n\t\t\t// For some cases, we're specific, everything else falls to `video/mp4` with `mp4` extension.\n\t\t\tconst brandMajor = new Token.StringType(4, 'latin1').get(this.buffer, 8).replace('\\0', ' ').trim();\n\t\t\tswitch (brandMajor) {\n\t\t\t\tcase 'avif':\n\t\t\t\tcase 'avis':\n\t\t\t\t\treturn {ext: 'avif', mime: 'image/avif'};\n\t\t\t\tcase 'mif1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif'};\n\t\t\t\tcase 'msf1':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heif-sequence'};\n\t\t\t\tcase 'heic':\n\t\t\t\tcase 'heix':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic'};\n\t\t\t\tcase 'hevc':\n\t\t\t\tcase 'hevx':\n\t\t\t\t\treturn {ext: 'heic', mime: 'image/heic-sequence'};\n\t\t\t\tcase 'qt':\n\t\t\t\t\treturn {ext: 'mov', mime: 'video/quicktime'};\n\t\t\t\tcase 'M4V':\n\t\t\t\tcase 'M4VH':\n\t\t\t\tcase 'M4VP':\n\t\t\t\t\treturn {ext: 'm4v', mime: 'video/x-m4v'};\n\t\t\t\tcase 'M4P':\n\t\t\t\t\treturn {ext: 'm4p', mime: 'video/mp4'};\n\t\t\t\tcase 'M4B':\n\t\t\t\t\treturn {ext: 'm4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'M4A':\n\t\t\t\t\treturn {ext: 'm4a', mime: 'audio/x-m4a'};\n\t\t\t\tcase 'F4V':\n\t\t\t\t\treturn {ext: 'f4v', mime: 'video/mp4'};\n\t\t\t\tcase 'F4P':\n\t\t\t\t\treturn {ext: 'f4p', mime: 'video/mp4'};\n\t\t\t\tcase 'F4A':\n\t\t\t\t\treturn {ext: 'f4a', mime: 'audio/mp4'};\n\t\t\t\tcase 'F4B':\n\t\t\t\t\treturn {ext: 'f4b', mime: 'audio/mp4'};\n\t\t\t\tcase 'crx':\n\t\t\t\t\treturn {ext: 'cr3', mime: 'image/x-canon-cr3'};\n\t\t\t\tdefault:\n\t\t\t\t\tif (brandMajor.startsWith('3g')) {\n\t\t\t\t\t\tif (brandMajor.startsWith('3g2')) {\n\t\t\t\t\t\t\treturn {ext: '3g2', mime: 'video/3gpp2'};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {ext: '3gp', mime: 'video/3gpp'};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ext: 'mp4', mime: 'video/mp4'};\n\t\t\t}\n\t\t}\n\n\t\t// -- 12-byte signatures --\n\n\t\t// RIFF file format which might be AVI, WAV, QCP, etc\n\t\tif (this.check([0x52, 0x49, 0x46, 0x46])) {\n\t\t\tif (this.checkString('WEBP', {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'webp',\n\t\t\t\t\tmime: 'image/webp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'avi',\n\t\t\t\t\tmime: 'video/vnd.avi',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'wav',\n\t\t\t\t\tmime: 'audio/wav',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// QLCM, QCP file\n\t\t\tif (this.check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'qcp',\n\t\t\t\t\tmime: 'audio/qcelp',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x49, 0x49, 0x55, 0x00, 0x18, 0x00, 0x00, 0x00, 0x88, 0xE7, 0x74, 0xD8])) {\n\t\t\treturn {\n\t\t\t\text: 'rw2',\n\t\t\t\tmime: 'image/x-panasonic-rw2',\n\t\t\t};\n\t\t}\n\n\t\t// ASF_Header_Object first 80 bytes\n\t\tif (this.check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t\tasync function readHeader() {\n\t\t\t\tconst guid = new Uint8Array(16);\n\t\t\t\tawait tokenizer.readBuffer(guid);\n\t\t\t\treturn {\n\t\t\t\t\tid: guid,\n\t\t\t\t\tsize: Number(await tokenizer.readToken(Token.UINT64_LE)),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tawait tokenizer.ignore(30);\n\t\t\t// Search for header should be in first 1KB of file.\n\t\t\twhile (tokenizer.position + 24 < tokenizer.fileInfo.size) {\n\t\t\t\tconst header = await readHeader();\n\t\t\t\tlet payload = header.size - 24;\n\t\t\t\tif (_check(header.id, [0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65])) {\n\t\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\t\tconst typeId = new Uint8Array(16);\n\t\t\t\t\tpayload -= await tokenizer.readBuffer(typeId);\n\n\t\t\t\t\tif (_check(typeId, [0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found audio:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'audio/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_check(typeId, [0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B])) {\n\t\t\t\t\t\t// Found video:\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asf',\n\t\t\t\t\t\t\tmime: 'video/x-ms-asf',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait tokenizer.ignore(payload);\n\t\t\t}\n\n\t\t\t// Default to ASF generic extension\n\t\t\treturn {\n\t\t\t\text: 'asf',\n\t\t\t\tmime: 'application/vnd.ms-asf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\t\treturn {\n\t\t\t\text: 'ktx',\n\t\t\t\tmime: 'image/ktx',\n\t\t\t};\n\t\t}\n\n\t\tif ((this.check([0x7E, 0x10, 0x04]) || this.check([0x7E, 0x18, 0x04])) && this.check([0x30, 0x4D, 0x49, 0x45], {offset: 4})) {\n\t\t\treturn {\n\t\t\t\text: 'mie',\n\t\t\t\tmime: 'application/x-mie',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x27, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], {offset: 2})) {\n\t\t\treturn {\n\t\t\t\text: 'shp',\n\t\t\t\tmime: 'application/x-esri-shape',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0x4F, 0xFF, 0x51])) {\n\t\t\treturn {\n\t\t\t\text: 'j2c',\n\t\t\t\tmime: 'image/j2c',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t\t// JPEG-2000 family\n\n\t\t\tawait tokenizer.ignore(20);\n\t\t\tconst type = await tokenizer.readToken(new Token.StringType(4, 'ascii'));\n\t\t\tswitch (type) {\n\t\t\t\tcase 'jp2 ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jp2',\n\t\t\t\t\t\tmime: 'image/jp2',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpx ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpx',\n\t\t\t\t\t\tmime: 'image/jpx',\n\t\t\t\t\t};\n\t\t\t\tcase 'jpm ':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'jpm',\n\t\t\t\t\t\tmime: 'image/jpm',\n\t\t\t\t\t};\n\t\t\t\tcase 'mjp2':\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'mj2',\n\t\t\t\t\t\tmime: 'image/mj2',\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0xFF, 0x0A])\n\t\t\t|| this.check([0x00, 0x00, 0x00, 0x0C, 0x4A, 0x58, 0x4C, 0x20, 0x0D, 0x0A, 0x87, 0x0A])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'jxl',\n\t\t\t\tmime: 'image/jxl',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFE, 0xFF])) { // UTF-16-BOM-LE\n\t\t\tif (this.check([0, 60, 0, 63, 0, 120, 0, 109, 0, 108], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some unknown text based format\n\t\t}\n\n\t\tif (this.check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\t\t// Detected Microsoft Compound File Binary File (MS-CFB) Format.\n\t\t\treturn {\n\t\t\t\text: 'cfb',\n\t\t\t\tmime: 'application/x-cfb',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 12 to 256.\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(256, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (this.check([0x61, 0x63, 0x73, 0x70], {offset: 36})) {\n\t\t\treturn {\n\t\t\t\text: 'icc',\n\t\t\t\tmime: 'application/vnd.iccprofile',\n\t\t\t};\n\t\t}\n\n\t\t// ACE: requires 14 bytes in the buffer\n\t\tif (this.checkString('**ACE', {offset: 7}) && this.checkString('**', {offset: 12})) {\n\t\t\treturn {\n\t\t\t\text: 'ace',\n\t\t\t\tmime: 'application/x-ace-compressed',\n\t\t\t};\n\t\t}\n\n\t\t// -- 15-byte signatures --\n\n\t\tif (this.checkString('BEGIN:')) {\n\t\t\tif (this.checkString('VCARD', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'vcf',\n\t\t\t\t\tmime: 'text/vcard',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.checkString('VCALENDAR', {offset: 6})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'ics',\n\t\t\t\t\tmime: 'text/calendar',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// `raf` is here just to keep all the raw image detectors together.\n\t\tif (this.checkString('FUJIFILMCCD-RAW')) {\n\t\t\treturn {\n\t\t\t\text: 'raf',\n\t\t\t\tmime: 'image/x-fujifilm-raf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Extended Module:')) {\n\t\t\treturn {\n\t\t\t\text: 'xm',\n\t\t\t\tmime: 'audio/x-xm',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Creative Voice File')) {\n\t\t\treturn {\n\t\t\t\text: 'voc',\n\t\t\t\tmime: 'audio/x-voc',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x04, 0x00, 0x00, 0x00]) && this.buffer.length >= 16) { // Rough & quick check Pickle/ASAR\n\t\t\tconst jsonSize = new DataView(this.buffer.buffer).getUint32(12, true);\n\n\t\t\tif (jsonSize > 12 && this.buffer.length >= jsonSize + 16) {\n\t\t\t\ttry {\n\t\t\t\t\tconst header = new TextDecoder().decode(this.buffer.subarray(16, jsonSize + 16));\n\t\t\t\t\tconst json = JSON.parse(header);\n\t\t\t\t\t// Check if Pickle is ASAR\n\t\t\t\t\tif (json.files) { // Final check, assuring Pickle/ASAR format\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'asar',\n\t\t\t\t\t\t\tmime: 'application/x-asar',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} catch {}\n\t\t\t}\n\t\t}\n\n\t\tif (this.check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\t\treturn {\n\t\t\t\text: 'mxf',\n\t\t\t\tmime: 'application/mxf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('SCRM', {offset: 44})) {\n\t\t\treturn {\n\t\t\t\text: 's3m',\n\t\t\t\tmime: 'audio/x-s3m',\n\t\t\t};\n\t\t}\n\n\t\t// Raw MPEG-2 transport stream (188-byte packets)\n\t\tif (this.check([0x47]) && this.check([0x47], {offset: 188})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\t// Blu-ray Disc Audio-Video (BDAV) MPEG-2 transport stream has 4-byte TP_extra_header before each 188-byte packet\n\t\tif (this.check([0x47], {offset: 4}) && this.check([0x47], {offset: 196})) {\n\t\t\treturn {\n\t\t\t\text: 'mts',\n\t\t\t\tmime: 'video/mp2t',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\t\treturn {\n\t\t\t\text: 'mobi',\n\t\t\t\tmime: 'application/x-mobipocket-ebook',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\t\treturn {\n\t\t\t\text: 'dcm',\n\t\t\t\tmime: 'application/dicom',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x4C, 0x00, 0x00, 0x00, 0x01, 0x14, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46])) {\n\t\t\treturn {\n\t\t\t\text: 'lnk',\n\t\t\t\tmime: 'application/x.ms.shortcut', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x62, 0x6F, 0x6F, 0x6B, 0x00, 0x00, 0x00, 0x00, 0x6D, 0x61, 0x72, 0x6B, 0x00, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'alias',\n\t\t\t\tmime: 'application/x.apple.alias', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (this.checkString('Kaydara FBX Binary  \\u0000')) {\n\t\t\treturn {\n\t\t\t\text: 'fbx',\n\t\t\t\tmime: 'application/x.autodesk.fbx', // Invented by us\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tthis.check([0x4C, 0x50], {offset: 34})\n\t\t\t&& (\n\t\t\t\tthis.check([0x00, 0x00, 0x01], {offset: 8})\n\t\t\t\t|| this.check([0x01, 0x00, 0x02], {offset: 8})\n\t\t\t\t|| this.check([0x02, 0x00, 0x02], {offset: 8})\n\t\t\t)\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'eot',\n\t\t\t\tmime: 'application/vnd.ms-fontobject',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x06, 0x06, 0xED, 0xF5, 0xD8, 0x1D, 0x46, 0xE5, 0xBD, 0x31, 0xEF, 0xE7, 0xFE, 0x74, 0xB7, 0x1D])) {\n\t\t\treturn {\n\t\t\t\text: 'indd',\n\t\t\t\tmime: 'application/x-indesign',\n\t\t\t};\n\t\t}\n\n\t\t// Increase sample size from 256 to 512\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(512, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Requires a buffer size of 512 bytes\n\t\tif ((this.checkString('ustar', {offset: 257}) && (this.checkString('\\0', {offset: 262}) || this.checkString(' ', {offset: 262})))\n\t\t\t|| (this.check([0, 0, 0, 0, 0, 0], {offset: 257}) && tarHeaderChecksumMatches(this.buffer))) {\n\t\t\treturn {\n\t\t\t\text: 'tar',\n\t\t\t\tmime: 'application/x-tar',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0xFF, 0xFE])) { // UTF-16-BOM-BE\n\t\t\tif (this.check([60, 0, 63, 0, 120, 0, 109, 0, 108, 0], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'xml',\n\t\t\t\t\tmime: 'application/xml',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (this.check([0xFF, 0x0E, 0x53, 0x00, 0x6B, 0x00, 0x65, 0x00, 0x74, 0x00, 0x63, 0x00, 0x68, 0x00, 0x55, 0x00, 0x70, 0x00, 0x20, 0x00, 0x4D, 0x00, 0x6F, 0x00, 0x64, 0x00, 0x65, 0x00, 0x6C, 0x00], {offset: 2})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'skp',\n\t\t\t\t\tmime: 'application/vnd.sketchup.skp',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn undefined; // Some text based format\n\t\t}\n\n\t\tif (this.checkString('-----BEGIN PGP MESSAGE-----')) {\n\t\t\treturn {\n\t\t\t\text: 'pgp',\n\t\t\t\tmime: 'application/pgp-encrypted',\n\t\t\t};\n\t\t}\n\t};\n\t// Detections with limited supporting data, resulting in a higher likelihood of false positives\n\tdetectImprecise = async tokenizer => {\n\t\tthis.buffer = new Uint8Array(reasonableDetectionSizeInBytes);\n\n\t\t// Read initial sample size of 8 bytes\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(8, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\tif (\n\t\t\tthis.check([0x0, 0x0, 0x1, 0xBA])\n\t\t\t|| this.check([0x0, 0x0, 0x1, 0xB3])\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mpg',\n\t\t\t\tmime: 'video/mpeg',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ttf',\n\t\t\t\tmime: 'font/ttf',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x01, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'ico',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\tif (this.check([0x00, 0x00, 0x02, 0x00])) {\n\t\t\treturn {\n\t\t\t\text: 'cur',\n\t\t\t\tmime: 'image/x-icon',\n\t\t\t};\n\t\t}\n\n\t\t// Adjust buffer to `mpegOffsetTolerance`\n\t\tawait tokenizer.peekBuffer(this.buffer, {length: Math.min(2 + this.options.mpegOffsetTolerance, tokenizer.fileInfo.size), mayBeLess: true});\n\n\t\t// Check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE)\n\t\tif (this.buffer.length >= (2 + this.options.mpegOffsetTolerance)) {\n\t\t\tfor (let depth = 0; depth <= this.options.mpegOffsetTolerance; ++depth) {\n\t\t\t\tconst type = this.scanMpeg(depth);\n\t\t\t\tif (type) {\n\t\t\t\t\treturn type;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tasync readTiffTag(bigEndian) {\n\t\tconst tagId = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tthis.tokenizer.ignore(10);\n\t\tswitch (tagId) {\n\t\t\tcase 50_341:\n\t\t\t\treturn {\n\t\t\t\t\text: 'arw',\n\t\t\t\t\tmime: 'image/x-sony-arw',\n\t\t\t\t};\n\t\t\tcase 50_706:\n\t\t\t\treturn {\n\t\t\t\t\text: 'dng',\n\t\t\t\t\tmime: 'image/x-adobe-dng',\n\t\t\t\t};\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync readTiffIFD(bigEndian) {\n\t\tconst numberOfTags = await this.tokenizer.readToken(bigEndian ? Token.UINT16_BE : Token.UINT16_LE);\n\t\tfor (let n = 0; n < numberOfTags; ++n) {\n\t\t\tconst fileType = await this.readTiffTag(bigEndian);\n\t\t\tif (fileType) {\n\t\t\t\treturn fileType;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync readTiffHeader(bigEndian) {\n\t\tconst version = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 2);\n\t\tconst ifdOffset = (bigEndian ? Token.UINT32_BE : Token.UINT32_LE).get(this.buffer, 4);\n\n\t\tif (version === 42) {\n\t\t\t// TIFF file header\n\t\t\tif (ifdOffset >= 6) {\n\t\t\t\tif (this.checkString('CR', {offset: 8})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'cr2',\n\t\t\t\t\t\tmime: 'image/x-canon-cr2',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (ifdOffset >= 8) {\n\t\t\t\t\tconst someId1 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 8);\n\t\t\t\t\tconst someId2 = (bigEndian ? Token.UINT16_BE : Token.UINT16_LE).get(this.buffer, 10);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(someId1 === 0x1C && someId2 === 0xFE)\n\t\t\t\t\t\t|| (someId1 === 0x1F && someId2 === 0x0B)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\text: 'nef',\n\t\t\t\t\t\t\tmime: 'image/x-nikon-nef',\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.tokenizer.ignore(ifdOffset);\n\t\t\tconst fileType = await this.readTiffIFD(bigEndian);\n\t\t\treturn fileType ?? {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\n\t\tif (version === 43) {\t// Big TIFF file header\n\t\t\treturn {\n\t\t\t\text: 'tif',\n\t\t\t\tmime: 'image/tiff',\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\tScan check MPEG 1 or 2 Layer 3 header, or 'layer 0' for ADTS (MPEG sync-word 0xFFE).\n\n\t@param offset - Offset to scan for sync-preamble.\n\t@returns {{ext: string, mime: string}}\n\t*/\n\tscanMpeg(offset) {\n\t\tif (this.check([0xFF, 0xE0], {offset, mask: [0xFF, 0xE0]})) {\n\t\t\tif (this.check([0x10], {offset: offset + 1, mask: [0x16]})) {\n\t\t\t\t// Check for (ADTS) MPEG-2\n\t\t\t\tif (this.check([0x08], {offset: offset + 1, mask: [0x08]})) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'aac',\n\t\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Must be (ADTS) MPEG-4\n\t\t\t\treturn {\n\t\t\t\t\text: 'aac',\n\t\t\t\t\tmime: 'audio/aac',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// MPEG 1 or 2 Layer 3 header\n\t\t\t// Check for MPEG layer 3\n\t\t\tif (this.check([0x02], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp3',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 2\n\t\t\tif (this.check([0x04], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp2',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Check for MPEG layer 1\n\t\t\tif (this.check([0x06], {offset: offset + 1, mask: [0x06]})) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mp1',\n\t\t\t\t\tmime: 'audio/mpeg',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport const supportedExtensions = new Set(extensions);\nexport const supportedMimeTypes = new Set(mimeTypes);\n", "/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp =\n  /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\nconst __toString = Object.prototype.toString;\n\nconst NullObject = /* @__PURE__ */ (() => {\n  const C = function () {};\n  C.prototype = Object.create(null);\n  return C;\n})() as unknown as { new (): any };\n\n/**\n * Parse options.\n */\nexport interface ParseOptions {\n  /**\n   * Specifies a function that will be used to decode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since the value of a cookie has a limited character set (and must be a simple string), this function can be used to decode\n   * a previously-encoded cookie value into a JavaScript string.\n   *\n   * The default function is the global `decodeURIComponent`, wrapped in a `try..catch`. If an error\n   * is thrown it will return the cookie's original value. If you provide your own encode/decode\n   * scheme you must ensure errors are appropriately handled.\n   *\n   * @default decode\n   */\n  decode?: (str: string) => string | undefined;\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nexport function parse(\n  str: string,\n  options?: ParseOptions,\n): Record<string, string | undefined> {\n  const obj: Record<string, string | undefined> = new NullObject();\n  const len = str.length;\n  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n  if (len < 2) return obj;\n\n  const dec = options?.decode || decode;\n  let index = 0;\n\n  do {\n    const eqIdx = str.indexOf(\"=\", index);\n    if (eqIdx === -1) break; // No more cookie pairs.\n\n    const colonIdx = str.indexOf(\";\", index);\n    const endIdx = colonIdx === -1 ? len : colonIdx;\n\n    if (eqIdx > endIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n      continue;\n    }\n\n    const keyStartIdx = startIndex(str, index, eqIdx);\n    const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n    const key = str.slice(keyStartIdx, keyEndIdx);\n\n    // only assign once\n    if (obj[key] === undefined) {\n      let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n      let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\n      const value = dec(str.slice(valStartIdx, valEndIdx));\n      obj[key] = value;\n    }\n\n    index = endIdx + 1;\n  } while (index < len);\n\n  return obj;\n}\n\nfunction startIndex(str: string, index: number, max: number) {\n  do {\n    const code = str.charCodeAt(index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n  } while (++index < max);\n  return max;\n}\n\nfunction endIndex(str: string, index: number, min: number) {\n  while (index > min) {\n    const code = str.charCodeAt(--index);\n    if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n  }\n  return min;\n}\n\n/**\n * Serialize options.\n */\nexport interface SerializeOptions {\n  /**\n   * Specifies a function that will be used to encode a [cookie-value](https://datatracker.ietf.org/doc/html/rfc6265#section-4.1.1).\n   * Since value of a cookie has a limited character set (and must be a simple string), this function can be used to encode\n   * a value into a string suited for a cookie's value, and should mirror `decode` when parsing.\n   *\n   * @default encodeURIComponent\n   */\n  encode?: (str: string) => string;\n  /**\n   * Specifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.2).\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  maxAge?: number;\n  /**\n   * Specifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.1).\n   * When no expiration is set clients consider this a \"non-persistent cookie\" and delete it the current session is over.\n   *\n   * The [cookie storage model specification](https://tools.ietf.org/html/rfc6265#section-5.3) states that if both `expires` and\n   * `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\n   * so if both are set, they should point to the same date and time.\n   */\n  expires?: Date;\n  /**\n   * Specifies the value for the [`Domain` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.3).\n   * When no domain is set clients consider the cookie to apply to the current domain only.\n   */\n  domain?: string;\n  /**\n   * Specifies the value for the [`Path` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.4).\n   * When no path is set, the path is considered the [\"default path\"](https://tools.ietf.org/html/rfc6265#section-5.1.4).\n   */\n  path?: string;\n  /**\n   * Enables the [`HttpOnly` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.6).\n   * When enabled, clients will not allow client-side JavaScript to see the cookie in `document.cookie`.\n   */\n  httpOnly?: boolean;\n  /**\n   * Enables the [`Secure` `Set-Cookie` attribute](https://tools.ietf.org/html/rfc6265#section-5.2.5).\n   * When enabled, clients will only send the cookie back if the browser has a HTTPS connection.\n   */\n  secure?: boolean;\n  /**\n   * Enables the [`Partitioned` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/).\n   * When enabled, clients will only send the cookie back when the current domain _and_ top-level domain matches.\n   *\n   * This is an attribute that has not yet been fully standardized, and may change in the future.\n   * This also means clients may ignore this attribute until they understand it. More information\n   * about can be found in [the proposal](https://github.com/privacycg/CHIPS).\n   */\n  partitioned?: boolean;\n  /**\n   * Specifies the value for the [`Priority` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   *\n   * - `'low'` will set the `Priority` attribute to `Low`.\n   * - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.\n   * - `'high'` will set the `Priority` attribute to `High`.\n   *\n   * More information about priority levels can be found in [the specification](https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1).\n   */\n  priority?: \"low\" | \"medium\" | \"high\";\n  /**\n   * Specifies the value for the [`SameSite` `Set-Cookie` attribute](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   *\n   * - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   * - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\n   * - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\n   * - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\n   *\n   * More information about enforcement levels can be found in [the specification](https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7).\n   */\n  sameSite?: boolean | \"lax\" | \"strict\" | \"none\";\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nexport function serialize(\n  name: string,\n  val: string,\n  options?: SerializeOptions,\n): string {\n  const enc = options?.encode || encodeURIComponent;\n\n  if (!cookieNameRegExp.test(name)) {\n    throw new TypeError(`argument name is invalid: ${name}`);\n  }\n\n  const value = enc(val);\n\n  if (!cookieValueRegExp.test(value)) {\n    throw new TypeError(`argument val is invalid: ${val}`);\n  }\n\n  let str = name + \"=\" + value;\n  if (!options) return str;\n\n  if (options.maxAge !== undefined) {\n    if (!Number.isInteger(options.maxAge)) {\n      throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n    }\n\n    str += \"; Max-Age=\" + options.maxAge;\n  }\n\n  if (options.domain) {\n    if (!domainValueRegExp.test(options.domain)) {\n      throw new TypeError(`option domain is invalid: ${options.domain}`);\n    }\n\n    str += \"; Domain=\" + options.domain;\n  }\n\n  if (options.path) {\n    if (!pathValueRegExp.test(options.path)) {\n      throw new TypeError(`option path is invalid: ${options.path}`);\n    }\n\n    str += \"; Path=\" + options.path;\n  }\n\n  if (options.expires) {\n    if (\n      !isDate(options.expires) ||\n      !Number.isFinite(options.expires.valueOf())\n    ) {\n      throw new TypeError(`option expires is invalid: ${options.expires}`);\n    }\n\n    str += \"; Expires=\" + options.expires.toUTCString();\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.partitioned) {\n    str += \"; Partitioned\";\n  }\n\n  if (options.priority) {\n    const priority =\n      typeof options.priority === \"string\"\n        ? options.priority.toLowerCase()\n        : undefined;\n    switch (priority) {\n      case \"low\":\n        str += \"; Priority=Low\";\n        break;\n      case \"medium\":\n        str += \"; Priority=Medium\";\n        break;\n      case \"high\":\n        str += \"; Priority=High\";\n        break;\n      default:\n        throw new TypeError(`option priority is invalid: ${options.priority}`);\n    }\n  }\n\n  if (options.sameSite) {\n    const sameSite =\n      typeof options.sameSite === \"string\"\n        ? options.sameSite.toLowerCase()\n        : options.sameSite;\n    switch (sameSite) {\n      case true:\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str: string): string {\n  if (str.indexOf(\"%\") === -1) return str;\n\n  try {\n    return decodeURIComponent(str);\n  } catch (e) {\n    return str;\n  }\n}\n\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val: any): val is Date {\n  return __toString.call(val) === \"[object Date]\";\n}\n", "import { Elysia } from \"elysia\";\nimport { getProfileByNpub, getBadgesByNpub } from \"./nostr\";\nimport { generateProfileSvg } from \"./svg\";\nimport { CloudflareAdapter } from 'elysia/adapter/cloudflare-worker';\n\nexport default new Elysia({\n  adapter: CloudflareAdapter\n})\n  .get(\"/\", () => \"Nostr Profile SVG API - Access /:npub to get profile card\")\n  .get(\"/:npub\", async ({ params: { npub }, set }) => {\n    try {\n      // npub\u306E\u57FA\u672C\u7684\u306A\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\n      if (!npub.startsWith('npub1')) {\n        set.status = 400;\n        return { error: 'Invalid npub format. Must start with npub1' };\n      }\n\n      // Nostr\u30D7\u30ED\u30D5\u30A3\u30FC\u30EB\u3068\u30D0\u30C3\u30B8\u3092\u4E26\u5217\u3067\u53D6\u5F97\n      const [profile, badges] = await Promise.all([\n        getProfileByNpub(npub),\n        getBadgesByNpub(npub)\n      ]);\n\n      if (!profile) {\n        set.status = 404;\n        return { error: 'Profile not found or timeout' };\n      }\n\n      // SVG\u3092\u751F\u6210\n      const svg = generateProfileSvg(profile, npub, badges);\n\n      // Content-Type\u3092image/svg+xml\u306B\u8A2D\u5B9A\n      set.headers['Content-Type'] = 'image/svg+xml';\n      set.headers['Cache-Control'] = 'public, max-age=3600'; // 1\u6642\u9593\u30AD\u30E3\u30C3\u30B7\u30E5\n\n      return svg;\n    } catch (error) {\n      console.error('Error:', error);\n      set.status = 500;\n      return { error: 'Internal server error' };\n    }\n  })\n  .compile();\n", "var _a;\nimport { Memoirist } from \"memoirist\";\nimport {\n  Kind\n} from \"@sinclair/typebox\";\nimport fastDecodeURIComponent from \"fast-decode-uri-component\";\nimport { t } from \"./type-system/index.mjs\";\nimport { mergeInference, sucrose } from \"./sucrose.mjs\";\nimport { BunAdapter } from \"./adapter/bun/index.mjs\";\nimport { WebStandardAdapter } from \"./adapter/web-standard/index.mjs\";\nimport { env } from \"./universal/env.mjs\";\nimport {\n  cloneInference,\n  deduplicateChecksum,\n  fnToContainer,\n  getLoosePath,\n  localHookToLifeCycleStore,\n  mergeDeep,\n  mergeSchemaValidator,\n  PromiseGroup,\n  promoteEvent,\n  isNotEmpty,\n  encodePath,\n  lifeCycleToArray,\n  supportPerMethodInlineHandler,\n  redirect,\n  emptySchema,\n  insertStandaloneValidator\n} from \"./utils.mjs\";\nimport {\n  coercePrimitiveRoot,\n  stringToStructureCoercions,\n  getSchemaValidator,\n  getResponseSchemaValidator,\n  getCookieValidator,\n  queryCoercions\n} from \"./schema.mjs\";\nimport {\n  composeHandler,\n  composeGeneralHandler,\n  composeErrorHandler\n} from \"./compose.mjs\";\nimport { createTracer } from \"./trace.mjs\";\nimport {\n  mergeHook,\n  checksum,\n  mergeLifeCycle,\n  filterGlobalHook,\n  asHookType,\n  replaceUrlPath\n} from \"./utils.mjs\";\nimport {\n  createDynamicErrorHandler,\n  createDynamicHandler\n} from \"./dynamic-handle.mjs\";\nimport {\n  status,\n  ERROR_CODE,\n  ValidationError\n} from \"./error.mjs\";\n_a = Symbol.dispose;\nconst _Elysia = class _Elysia {\n  constructor(config = {}) {\n    this.server = null;\n    this.dependencies = {};\n    this[\"~Prefix\"] = \"\";\n    this[\"~Singleton\"] = null;\n    this[\"~Definitions\"] = null;\n    this[\"~Metadata\"] = null;\n    this[\"~Ephemeral\"] = null;\n    this[\"~Volatile\"] = null;\n    this[\"~Routes\"] = null;\n    this.singleton = {\n      decorator: {},\n      store: {},\n      derive: {},\n      resolve: {}\n    };\n    this.definitions = {\n      typebox: t.Module({}),\n      type: {},\n      error: {}\n    };\n    this.extender = {\n      macro: {},\n      higherOrderFunctions: []\n    };\n    this.validator = {\n      global: null,\n      scoped: null,\n      local: null,\n      getCandidate() {\n        return !this.global && !this.scoped && !this.local ? {\n          body: void 0,\n          headers: void 0,\n          params: void 0,\n          query: void 0,\n          cookie: void 0,\n          response: void 0\n        } : mergeSchemaValidator(\n          mergeSchemaValidator(this.global, this.scoped),\n          this.local\n        );\n      }\n    };\n    this.standaloneValidator = {\n      global: null,\n      scoped: null,\n      local: null\n    };\n    this.event = {};\n    this.router = {\n      \"~http\": void 0,\n      get http() {\n        return this[\"~http\"] || (this[\"~http\"] = new Memoirist({\n          lazy: !0,\n          onParam: fastDecodeURIComponent\n        })), this[\"~http\"];\n      },\n      \"~dynamic\": void 0,\n      // Use in non-AOT mode\n      get dynamic() {\n        return this[\"~dynamic\"] || (this[\"~dynamic\"] = new Memoirist({\n          onParam: fastDecodeURIComponent\n        })), this[\"~dynamic\"];\n      },\n      // Static Router\n      static: {},\n      // Native Static Response\n      response: {},\n      history: []\n    };\n    this.routeTree = {};\n    this.inference = {\n      body: !1,\n      cookie: !1,\n      headers: !1,\n      query: !1,\n      set: !1,\n      server: !1,\n      path: !1,\n      route: !1,\n      url: !1\n    };\n    this[\"~parser\"] = {};\n    this.handle = async (request) => this.fetch(request);\n    /**\n     * Use handle can be either sync or async to save performance.\n     *\n     * Beside benchmark purpose, please use 'handle' instead.\n     */\n    this.fetch = (request) => (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this))(request);\n    this.handleError = async (context, error) => (this.handleError = this.config.aot ? composeErrorHandler(this) : createDynamicErrorHandler(this))(context, error);\n    /**\n     * ### listen\n     * Assign current instance to port and start serving\n     *\n     * ---\n     * @example\n     * ```typescript\n     * new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     * ```\n     */\n    this.listen = (options, callback) => (this[\"~adapter\"].listen(this)(options, callback), this);\n    /**\n     * ### stop\n     * Stop server from serving\n     *\n     * ---\n     * @example\n     * ```typescript\n     * const app = new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     *\n     * // Sometime later\n     * app.stop()\n     * ```\n     *\n     * @example\n     * ```typescript\n     * const app = new Elysia()\n     *     .get(\"/\", () => 'hi')\n     *     .listen(3000)\n     *\n     * app.stop(true) // Abruptly any requests inflight\n     * ```\n     */\n    this.stop = async (closeActiveConnections) => (await this[\"~adapter\"].stop?.(this, closeActiveConnections), this);\n    this[_a] = () => {\n      this.server && this.stop();\n    };\n    config.tags && (config.detail ? config.detail.tags = config.tags : config.detail = {\n      tags: config.tags\n    }), this.config = {\n      aot: env.ELYSIA_AOT !== \"false\",\n      nativeStaticResponse: !0,\n      systemRouter: !0,\n      encodeSchema: !0,\n      normalize: !0,\n      ...config,\n      prefix: config.prefix ? config.prefix.charCodeAt(0) === 47 ? config.prefix : `/${config.prefix}` : void 0,\n      cookie: {\n        path: \"/\",\n        ...config?.cookie\n      },\n      experimental: config?.experimental ?? {},\n      seed: config?.seed === void 0 ? \"\" : config?.seed\n    }, this[\"~adapter\"] = config.adapter ?? (typeof Bun < \"u\" ? BunAdapter : WebStandardAdapter), config?.analytic && (config?.name || config?.seed !== void 0) && (this.telemetry = {\n      stack: new Error().stack\n    });\n  }\n  get store() {\n    return this.singleton.store;\n  }\n  get decorator() {\n    return this.singleton.decorator;\n  }\n  get routes() {\n    return this.router.history;\n  }\n  getGlobalRoutes() {\n    return this.router.history;\n  }\n  getGlobalDefinitions() {\n    return this.definitions;\n  }\n  getServer() {\n    return this.server;\n  }\n  getParent() {\n    return null;\n  }\n  get promisedModules() {\n    return this._promisedModules || (this._promisedModules = new PromiseGroup(console.error, () => {\n    })), this._promisedModules;\n  }\n  env(model, _env = env) {\n    if (getSchemaValidator(model, {\n      modules: this.definitions.typebox,\n      dynamic: !0,\n      additionalProperties: !0,\n      coerce: !0,\n      sanitize: () => this.config.sanitize\n    }).Check(_env) === !1) {\n      const error = new ValidationError(\"env\", model, _env);\n      throw new Error(error.all.map((x) => x.summary).join(`\n`));\n    }\n    return this;\n  }\n  /**\n   * @private DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n   * @version 1.1.0\n   *\n   * ! Do not use unless you know exactly what you are doing\n   * ? Add Higher order function to Elysia.fetch\n   */\n  wrap(fn) {\n    return this.extender.higherOrderFunctions.push({\n      checksum: checksum(\n        JSON.stringify({\n          name: this.config.name,\n          seed: this.config.seed,\n          content: fn.toString()\n        })\n      ),\n      fn\n    }), this;\n  }\n  get models() {\n    const models = {};\n    for (const name of Object.keys(this.definitions.type))\n      models[name] = getSchemaValidator(\n        this.definitions.typebox.Import(name)\n      );\n    return models.modules = this.definitions.typebox, models;\n  }\n  add(method, path, handle, localHook, options) {\n    const skipPrefix = options?.skipPrefix ?? !1, allowMeta = options?.allowMeta ?? !1;\n    localHook ??= {}, this.applyMacro(localHook);\n    let standaloneValidators = [];\n    if (localHook.standaloneValidator && (standaloneValidators = standaloneValidators.concat(\n      localHook.standaloneValidator\n    )), this.standaloneValidator.local && (standaloneValidators = standaloneValidators.concat(\n      this.standaloneValidator.local\n    )), this.standaloneValidator.scoped && (standaloneValidators = standaloneValidators.concat(\n      this.standaloneValidator.scoped\n    )), this.standaloneValidator.global && (standaloneValidators = standaloneValidators.concat(\n      this.standaloneValidator.global\n    )), path !== \"\" && path.charCodeAt(0) !== 47 && (path = \"/\" + path), this.config.prefix && !skipPrefix && (path = this.config.prefix + path), localHook?.type)\n      switch (localHook.type) {\n        case \"text\":\n          localHook.type = \"text/plain\";\n          break;\n        case \"json\":\n          localHook.type = \"application/json\";\n          break;\n        case \"formdata\":\n          localHook.type = \"multipart/form-data\";\n          break;\n        case \"urlencoded\":\n          localHook.type = \"application/x-www-form-urlencoded\";\n          break;\n        case \"arrayBuffer\":\n          localHook.type = \"application/octet-stream\";\n          break;\n        default:\n          break;\n      }\n    const instanceValidator = this.validator.getCandidate(), cloned = {\n      body: localHook?.body ?? instanceValidator?.body,\n      headers: localHook?.headers ?? instanceValidator?.headers,\n      params: localHook?.params ?? instanceValidator?.params,\n      query: localHook?.query ?? instanceValidator?.query,\n      cookie: localHook?.cookie ?? instanceValidator?.cookie,\n      response: localHook?.response ?? instanceValidator?.response\n    }, shouldPrecompile = this.config.precompile === !0 || typeof this.config.precompile == \"object\" && this.config.precompile.compose === !0, createValidator = () => {\n      const models = this.definitions.type, dynamic = !this.config.aot, normalize = this.config.normalize, modules = this.definitions.typebox, sanitize = () => this.config.sanitize, cookieValidator = () => {\n        if (cloned.cookie || standaloneValidators.find((x) => x.cookie))\n          return getCookieValidator({\n            modules,\n            validator: cloned.cookie,\n            defaultConfig: this.config.cookie,\n            normalize,\n            config: cloned.cookie?.config ?? {},\n            dynamic,\n            models,\n            validators: standaloneValidators.map((x) => x.cookie),\n            sanitize\n          });\n      };\n      return shouldPrecompile ? {\n        body: getSchemaValidator(cloned.body, {\n          modules,\n          dynamic,\n          models,\n          normalize,\n          additionalCoerce: coercePrimitiveRoot(),\n          validators: standaloneValidators.map((x) => x.body),\n          sanitize\n        }),\n        headers: getSchemaValidator(cloned.headers, {\n          modules,\n          dynamic,\n          models,\n          additionalProperties: !0,\n          coerce: !0,\n          additionalCoerce: stringToStructureCoercions(),\n          validators: standaloneValidators.map(\n            (x) => x.headers\n          ),\n          sanitize\n        }),\n        params: getSchemaValidator(cloned.params, {\n          modules,\n          dynamic,\n          models,\n          coerce: !0,\n          additionalCoerce: stringToStructureCoercions(),\n          validators: standaloneValidators.map(\n            (x) => x.params\n          ),\n          sanitize\n        }),\n        query: getSchemaValidator(cloned.query, {\n          modules,\n          dynamic,\n          models,\n          normalize,\n          coerce: !0,\n          additionalCoerce: queryCoercions(),\n          validators: standaloneValidators.map(\n            (x) => x.query\n          ),\n          sanitize\n        }),\n        cookie: cookieValidator(),\n        response: getResponseSchemaValidator(cloned.response, {\n          modules,\n          dynamic,\n          models,\n          normalize,\n          validators: standaloneValidators.map(\n            (x) => x.response\n          ),\n          sanitize\n        })\n      } : {\n        createBody() {\n          return this.body ? this.body : this.body = getSchemaValidator(\n            cloned.body,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              additionalCoerce: coercePrimitiveRoot(),\n              validators: standaloneValidators.map(\n                (x) => x.body\n              ),\n              sanitize\n            }\n          );\n        },\n        createHeaders() {\n          return this.headers ? this.headers : this.headers = getSchemaValidator(\n            cloned.headers,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              additionalProperties: !normalize,\n              coerce: !0,\n              additionalCoerce: stringToStructureCoercions(),\n              validators: standaloneValidators.map(\n                (x) => x.headers\n              ),\n              sanitize\n            }\n          );\n        },\n        createParams() {\n          return this.params ? this.params : this.params = getSchemaValidator(\n            cloned.params,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              coerce: !0,\n              additionalCoerce: stringToStructureCoercions(),\n              validators: standaloneValidators.map(\n                (x) => x.params\n              ),\n              sanitize\n            }\n          );\n        },\n        createQuery() {\n          return this.query ? this.query : this.query = getSchemaValidator(\n            cloned.query,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              coerce: !0,\n              additionalCoerce: queryCoercions(),\n              validators: standaloneValidators.map(\n                (x) => x.query\n              ),\n              sanitize\n            }\n          );\n        },\n        createCookie() {\n          return this.cookie ? this.cookie : this.cookie = cookieValidator();\n        },\n        createResponse() {\n          return this.response ? this.response : this.response = getResponseSchemaValidator(\n            cloned.response,\n            {\n              modules,\n              dynamic,\n              models,\n              normalize,\n              validators: standaloneValidators.map(\n                (x) => x.response\n              ),\n              sanitize\n            }\n          );\n        }\n      };\n    };\n    (instanceValidator.body || instanceValidator.cookie || instanceValidator.headers || instanceValidator.params || instanceValidator.query || instanceValidator.response) && (localHook = mergeHook(localHook, instanceValidator)), localHook.tags && (localHook.detail ? localHook.detail.tags = localHook.tags : localHook.detail = {\n      tags: localHook.tags\n    }), isNotEmpty(this.config.detail) && (localHook.detail = mergeDeep(\n      Object.assign({}, this.config.detail),\n      localHook.detail\n    ));\n    const hooks = isNotEmpty(this.event) ? mergeHook(this.event, localHookToLifeCycleStore(localHook)) : { ...lifeCycleToArray(localHookToLifeCycleStore(localHook)) };\n    if (standaloneValidators.length && Object.assign(hooks, {\n      standaloneValidator: standaloneValidators\n    }), this.config.aot === !1) {\n      const validator = createValidator();\n      this.router.dynamic.add(method, path, {\n        validator,\n        hooks,\n        content: localHook?.type,\n        handle,\n        route: path\n      });\n      const encoded = encodePath(path, { dynamic: !0 });\n      if (path !== encoded && this.router.dynamic.add(method, encoded, {\n        validator,\n        hooks,\n        content: localHook?.type,\n        handle,\n        route: path\n      }), !this.config.strictPath) {\n        const loosePath = getLoosePath(path);\n        this.router.dynamic.add(method, loosePath, {\n          validator,\n          hooks,\n          content: localHook?.type,\n          handle,\n          route: path\n        });\n        const encoded2 = encodePath(loosePath);\n        loosePath !== encoded2 && this.router.dynamic.add(method, loosePath, {\n          validator,\n          hooks,\n          content: localHook?.type,\n          handle,\n          route: path\n        });\n      }\n      this.router.history.push({\n        method,\n        path,\n        composed: null,\n        handler: handle,\n        compile: void 0,\n        hooks\n      });\n      return;\n    }\n    const adapter = this[\"~adapter\"].handler, nativeStaticHandler = typeof handle != \"function\" ? () => {\n      const context = {\n        redirect,\n        request: this[\"~adapter\"].isWebStandard ? new Request(`http://ely.sia${path}`, {\n          method\n        }) : void 0,\n        server: null,\n        set: {\n          headers: Object.assign({}, this.setHeaders)\n        },\n        status,\n        store: this.store\n      };\n      try {\n        this.event.request?.map((x) => {\n          if (typeof x.fn == \"function\")\n            return x.fn(context);\n          if (typeof x == \"function\") return x(context);\n        });\n      } catch (error) {\n        let res;\n        context.error = error, this.event.error?.some((x) => {\n          if (typeof x.fn == \"function\")\n            return res = x.fn(context);\n          if (typeof x == \"function\")\n            return res = x(context);\n        }), res !== void 0 && (handle = res);\n      }\n      const fn = adapter.createNativeStaticHandler?.(\n        handle,\n        hooks,\n        context.set\n      );\n      return fn instanceof Promise ? fn.then((fn2) => {\n        if (fn2) return fn2;\n      }) : fn?.();\n    } : void 0, useNativeStaticResponse = this.config.nativeStaticResponse === !0, addResponsePath = (path2) => {\n      !useNativeStaticResponse || !nativeStaticHandler || (supportPerMethodInlineHandler ? this.router.response[path2] ? this.router.response[path2][method] = nativeStaticHandler() : this.router.response[path2] = {\n        [method]: nativeStaticHandler()\n      } : this.router.response[path2] = nativeStaticHandler());\n    };\n    addResponsePath(path);\n    let _compiled;\n    const compile = () => _compiled || (_compiled = composeHandler({\n      app: this,\n      path,\n      method,\n      hooks,\n      validator: createValidator(),\n      handler: typeof handle != \"function\" && typeof adapter.createStaticHandler != \"function\" ? () => handle : handle,\n      allowMeta,\n      inference: this.inference\n    }));\n    let oldIndex;\n    if (`${method}_${path}` in this.routeTree)\n      for (let i = 0; i < this.router.history.length; i++) {\n        const route = this.router.history[i];\n        if (route.path === path && route.method === method) {\n          oldIndex = i;\n          break;\n        }\n      }\n    else this.routeTree[`${method}_${path}`] = this.router.history.length;\n    const index = oldIndex ?? this.router.history.length, mainHandler = shouldPrecompile ? compile() : (ctx) => (this.router.history[index].composed = compile())(ctx);\n    oldIndex !== void 0 ? this.router.history[oldIndex] = Object.assign(\n      {\n        method,\n        path,\n        composed: mainHandler,\n        compile,\n        handler: handle,\n        hooks\n      },\n      standaloneValidators.length ? {\n        standaloneValidators\n      } : void 0,\n      localHook.webSocket ? { websocket: localHook.websocket } : void 0\n    ) : this.router.history.push(\n      Object.assign(\n        {\n          method,\n          path,\n          composed: mainHandler,\n          compile,\n          handler: handle,\n          hooks\n        },\n        localHook.webSocket ? { websocket: localHook.websocket } : void 0\n      )\n    );\n    const handler = {\n      handler: shouldPrecompile ? mainHandler : void 0,\n      compile() {\n        return this.handler = compile();\n      }\n    }, staticRouter = this.router.static, isStaticPath = path.indexOf(\":\") === -1 && path.indexOf(\"*\") === -1;\n    if (method === \"WS\") {\n      if (isStaticPath) {\n        path in staticRouter ? staticRouter[path][method] = index : staticRouter[path] = {\n          [method]: index\n        };\n        return;\n      }\n      this.router.http.add(\"WS\", path, handler), this.config.strictPath || this.router.http.add(\"WS\", getLoosePath(path), handler);\n      const encoded = encodePath(path, { dynamic: !0 });\n      path !== encoded && this.router.http.add(\"WS\", encoded, handler);\n      return;\n    }\n    if (isStaticPath)\n      path in staticRouter ? staticRouter[path][method] = index : staticRouter[path] = {\n        [method]: index\n      }, this.config.strictPath || addResponsePath(getLoosePath(path));\n    else {\n      if (this.router.http.add(method, path, handler), !this.config.strictPath) {\n        const loosePath = getLoosePath(path);\n        addResponsePath(loosePath), this.router.http.add(method, loosePath, handler);\n      }\n      const encoded = encodePath(path, { dynamic: !0 });\n      path !== encoded && (this.router.http.add(method, encoded, handler), addResponsePath(encoded));\n    }\n  }\n  headers(header) {\n    return header ? (this.setHeaders || (this.setHeaders = {}), this.setHeaders = mergeDeep(this.setHeaders, header), this) : this;\n  }\n  /**\n   * ### start | Life cycle event\n   * Called after server is ready for serving\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onStart(({ server }) => {\n   *         console.log(\"Running at ${server?.url}:${server?.port}\")\n   *     })\n   *     .listen(3000)\n   * ```\n   */\n  onStart(handler) {\n    return this.on(\"start\", handler), this;\n  }\n  onRequest(handler) {\n    return this.on(\"request\", handler), this;\n  }\n  onParse(options, handler) {\n    return handler ? this.on(\n      options,\n      \"parse\",\n      handler\n    ) : typeof options == \"string\" ? this.on(\"parse\", this[\"~parser\"][options]) : this.on(\"parse\", options);\n  }\n  /**\n   * ### parse | Life cycle event\n   * Callback function to handle body parsing\n   *\n   * If truthy value is returned, will be assigned to `context.body`\n   * Otherwise will skip the callback and look for the next one.\n   *\n   * Equivalent to Express's body parser\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onParse((request, contentType) => {\n   *         if(contentType === \"application/json\")\n   *             return request.json()\n   *     })\n   * ```\n   */\n  parser(name, parser) {\n    return this[\"~parser\"][name] = parser, this;\n  }\n  onTransform(options, handler) {\n    return handler ? this.on(\n      options,\n      \"transform\",\n      handler\n    ) : this.on(\"transform\", options);\n  }\n  resolve(optionsOrResolve, resolve) {\n    resolve || (resolve = optionsOrResolve, optionsOrResolve = { as: \"local\" });\n    const hook = {\n      subType: \"resolve\",\n      fn: resolve\n    };\n    return this.onBeforeHandle(optionsOrResolve, hook);\n  }\n  mapResolve(optionsOrResolve, mapper) {\n    mapper || (mapper = optionsOrResolve, optionsOrResolve = { as: \"local\" });\n    const hook = {\n      subType: \"mapResolve\",\n      fn: mapper\n    };\n    return this.onBeforeHandle(optionsOrResolve, hook);\n  }\n  onBeforeHandle(options, handler) {\n    return handler ? this.on(\n      options,\n      \"beforeHandle\",\n      handler\n    ) : this.on(\"beforeHandle\", options);\n  }\n  onAfterHandle(options, handler) {\n    return handler ? this.on(\n      options,\n      \"afterHandle\",\n      handler\n    ) : this.on(\"afterHandle\", options);\n  }\n  mapResponse(options, handler) {\n    return handler ? this.on(\n      options,\n      \"mapResponse\",\n      handler\n    ) : this.on(\"mapResponse\", options);\n  }\n  onAfterResponse(options, handler) {\n    return handler ? this.on(\n      options,\n      \"afterResponse\",\n      handler\n    ) : this.on(\"afterResponse\", options);\n  }\n  /**\n   * ### After Handle | Life cycle event\n   * Intercept request **after** main handler is called.\n   *\n   * If truthy value is returned, will be assigned as `Response`\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onAfterHandle((context, response) => {\n   *         if(typeof response === \"object\")\n   *             return JSON.stringify(response)\n   *     })\n   * ```\n   */\n  trace(options, handler) {\n    handler || (handler = options, options = { as: \"local\" }), Array.isArray(handler) || (handler = [handler]);\n    for (const fn of handler)\n      this.on(\n        options,\n        \"trace\",\n        createTracer(fn)\n      );\n    return this;\n  }\n  error(name, error) {\n    switch (typeof name) {\n      case \"string\":\n        return error.prototype[ERROR_CODE] = name, this.definitions.error[name] = error, this;\n      case \"function\":\n        return this.definitions.error = name(this.definitions.error), this;\n    }\n    for (const [code, error2] of Object.entries(name))\n      error2.prototype[ERROR_CODE] = code, this.definitions.error[code] = error2;\n    return this;\n  }\n  /**\n   * ### Error | Life cycle event\n   * Called when error is thrown during processing request\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onError(({ code }) => {\n   *         if(code === \"NOT_FOUND\")\n   *             return \"Path not found :(\"\n   *     })\n   * ```\n   */\n  onError(options, handler) {\n    return handler ? this.on(\n      options,\n      \"error\",\n      handler\n    ) : this.on(\"error\", options);\n  }\n  /**\n   * ### stop | Life cycle event\n   * Called after server stop serving request\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .onStop((app) => {\n   *         cleanup()\n   *     })\n   * ```\n   */\n  onStop(handler) {\n    return this.on(\"stop\", handler), this;\n  }\n  on(optionsOrType, typeOrHandlers, handlers) {\n    let type;\n    switch (typeof optionsOrType) {\n      case \"string\":\n        type = optionsOrType, handlers = typeOrHandlers;\n        break;\n      case \"object\":\n        type = typeOrHandlers, !Array.isArray(typeOrHandlers) && typeof typeOrHandlers == \"object\" && (handlers = typeOrHandlers);\n        break;\n    }\n    Array.isArray(handlers) ? handlers = fnToContainer(handlers) : typeof handlers == \"function\" ? handlers = [\n      {\n        fn: handlers\n      }\n    ] : handlers = [handlers];\n    const handles = handlers;\n    for (const handle of handles)\n      handle.scope = typeof optionsOrType == \"string\" ? \"local\" : optionsOrType?.as ?? \"local\", (type === \"resolve\" || type === \"derive\") && (handle.subType = type);\n    type !== \"trace\" && (this.inference = sucrose(\n      {\n        [type]: handles.map((x) => x.fn)\n      },\n      this.inference,\n      this.config.sucrose\n    ));\n    for (const handle of handles) {\n      const fn = asHookType(handle, \"global\", { skipIfHasType: !0 });\n      switch (type) {\n        case \"start\":\n          this.event.start ??= [], this.event.start.push(fn);\n          break;\n        case \"request\":\n          this.event.request ??= [], this.event.request.push(fn);\n          break;\n        case \"parse\":\n          this.event.parse ??= [], this.event.parse.push(fn);\n          break;\n        case \"transform\":\n          this.event.transform ??= [], this.event.transform.push(fn);\n          break;\n        // @ts-expect-error\n        case \"derive\":\n          this.event.transform ??= [], this.event.transform.push(\n            fnToContainer(fn, \"derive\")\n          );\n          break;\n        case \"beforeHandle\":\n          this.event.beforeHandle ??= [], this.event.beforeHandle.push(fn);\n          break;\n        // @ts-expect-error\n        // eslint-disable-next-line sonarjs/no-duplicated-branches\n        case \"resolve\":\n          this.event.beforeHandle ??= [], this.event.beforeHandle.push(\n            fnToContainer(fn, \"resolve\")\n          );\n          break;\n        case \"afterHandle\":\n          this.event.afterHandle ??= [], this.event.afterHandle.push(fn);\n          break;\n        case \"mapResponse\":\n          this.event.mapResponse ??= [], this.event.mapResponse.push(fn);\n          break;\n        case \"afterResponse\":\n          this.event.afterResponse ??= [], this.event.afterResponse.push(fn);\n          break;\n        case \"trace\":\n          this.event.trace ??= [], this.event.trace.push(fn);\n          break;\n        case \"error\":\n          this.event.error ??= [], this.event.error.push(fn);\n          break;\n        case \"stop\":\n          this.event.stop ??= [], this.event.stop.push(fn);\n          break;\n      }\n    }\n    return this;\n  }\n  as(type) {\n    return promoteEvent(this.event.parse, type), promoteEvent(this.event.transform, type), promoteEvent(this.event.beforeHandle, type), promoteEvent(this.event.afterHandle, type), promoteEvent(this.event.mapResponse, type), promoteEvent(this.event.afterResponse, type), promoteEvent(this.event.trace, type), promoteEvent(this.event.error, type), type === \"scoped\" ? (this.validator.scoped = mergeSchemaValidator(\n      this.validator.scoped,\n      this.validator.local\n    ), this.validator.local = null, this.standaloneValidator.local !== null && (this.standaloneValidator.scoped ||= [], this.standaloneValidator.scoped.push(\n      ...this.standaloneValidator.local\n    ), this.standaloneValidator.local = null)) : type === \"global\" && (this.validator.global = mergeSchemaValidator(\n      this.validator.global,\n      mergeSchemaValidator(\n        this.validator.scoped,\n        this.validator.local\n      )\n    ), this.validator.scoped = null, this.validator.local = null, this.standaloneValidator.local !== null && (this.standaloneValidator.scoped ||= [], this.standaloneValidator.scoped.push(\n      ...this.standaloneValidator.local\n    ), this.standaloneValidator.local = null), this.standaloneValidator.scoped !== null && (this.standaloneValidator.global ||= [], this.standaloneValidator.global.push(\n      ...this.standaloneValidator.scoped\n    ), this.standaloneValidator.scoped = null)), this;\n  }\n  /**\n   * ### group\n   * Encapsulate and group path with prefix\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .group('/v1', app => app\n   *         .get('/', () => 'Hi')\n   *         .get('/name', () => 'Elysia')\n   *     })\n   * ```\n   */\n  group(prefix, schemaOrRun, run) {\n    const instance = new _Elysia({\n      ...this.config,\n      prefix: \"\"\n    });\n    instance.singleton = { ...this.singleton }, instance.definitions = { ...this.definitions }, instance.getServer = () => this.getServer(), instance.inference = cloneInference(this.inference), instance.extender = { ...this.extender }, instance[\"~parser\"] = this[\"~parser\"], instance.standaloneValidator = {\n      local: [...this.standaloneValidator.local ?? []],\n      scoped: [...this.standaloneValidator.scoped ?? []],\n      global: [...this.standaloneValidator.global ?? []]\n    };\n    const isSchema = typeof schemaOrRun == \"object\", sandbox = (isSchema ? run : schemaOrRun)(instance);\n    return this.singleton = mergeDeep(this.singleton, instance.singleton), this.definitions = mergeDeep(this.definitions, instance.definitions), sandbox.event.request?.length && (this.event.request = [\n      ...this.event.request || [],\n      ...sandbox.event.request || []\n    ]), sandbox.event.mapResponse?.length && (this.event.mapResponse = [\n      ...this.event.mapResponse || [],\n      ...sandbox.event.mapResponse || []\n    ]), this.model(sandbox.definitions.type), Object.values(instance.router.history).forEach(\n      ({ method, path, handler, hooks }) => {\n        if (path = (isSchema ? \"\" : this.config.prefix ?? \"\") + prefix + path, isSchema) {\n          const {\n            body,\n            headers,\n            query,\n            params,\n            cookie,\n            response,\n            ...hook\n          } = schemaOrRun, localHook = hooks, hasStandaloneSchema = body || headers || query || params || cookie || response;\n          this.add(\n            method,\n            path,\n            handler,\n            mergeHook(hook, {\n              ...localHook || {},\n              error: localHook.error ? Array.isArray(localHook.error) ? [\n                ...localHook.error ?? [],\n                ...sandbox.event.error ?? []\n              ] : [\n                localHook.error,\n                ...sandbox.event.error ?? []\n              ] : sandbox.event.error,\n              standaloneValidator: hasStandaloneSchema ? [\n                ...localHook.standaloneValidator ?? [],\n                {\n                  body,\n                  headers,\n                  query,\n                  params,\n                  cookie,\n                  response\n                }\n              ] : localHook.standaloneValidator\n            }),\n            void 0\n          );\n        } else\n          this.add(\n            method,\n            path,\n            handler,\n            mergeHook(hooks, {\n              error: sandbox.event.error\n            }),\n            {\n              skipPrefix: !0\n            }\n          );\n      }\n    ), this;\n  }\n  /**\n   * ### guard\n   * Encapsulate and pass hook into all child handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { t } from 'elysia'\n   *\n   * new Elysia()\n   *     .guard({\n   *          body: t.Object({\n   *              username: t.String(),\n   *              password: t.String()\n   *          })\n   *     }, app => app\n   *         .get(\"/\", () => 'Hi')\n   *         .get(\"/name\", () => 'Elysia')\n   *     })\n   * ```\n   */\n  guard(hook, run) {\n    if (!run) {\n      if (typeof hook == \"object\") {\n        this.applyMacro(hook), hook.detail && (this.config.detail ? this.config.detail = mergeDeep(\n          Object.assign({}, this.config.detail),\n          hook.detail\n        ) : this.config.detail = hook.detail), hook.tags && (this.config.detail ? this.config.detail.tags = hook.tags : this.config.detail = {\n          tags: hook.tags\n        });\n        const type = hook.as ?? \"local\";\n        if (hook.schema === \"standalone\") {\n          this.standaloneValidator[type] || (this.standaloneValidator[type] = []);\n          const response = hook?.response ? typeof hook.response == \"string\" || Kind in hook.response || \"~standard\" in hook.response ? {\n            200: hook.response\n          } : hook?.response : void 0;\n          this.standaloneValidator[type].push({\n            body: hook.body,\n            headers: hook.headers,\n            params: hook.params,\n            query: hook.query,\n            response,\n            cookie: hook.cookie\n          });\n        } else\n          this.validator[type] = {\n            body: hook.body ?? this.validator[type]?.body,\n            headers: hook.headers ?? this.validator[type]?.headers,\n            params: hook.params ?? this.validator[type]?.params,\n            query: hook.query ?? this.validator[type]?.query,\n            response: hook.response ?? this.validator[type]?.response,\n            cookie: hook.cookie ?? this.validator[type]?.cookie\n          };\n        return hook.parse && this.on({ as: type }, \"parse\", hook.parse), hook.transform && this.on({ as: type }, \"transform\", hook.transform), hook.derive && this.on({ as: type }, \"derive\", hook.derive), hook.beforeHandle && this.on({ as: type }, \"beforeHandle\", hook.beforeHandle), hook.resolve && this.on({ as: type }, \"resolve\", hook.resolve), hook.afterHandle && this.on({ as: type }, \"afterHandle\", hook.afterHandle), hook.mapResponse && this.on({ as: type }, \"mapResponse\", hook.mapResponse), hook.afterResponse && this.on({ as: type }, \"afterResponse\", hook.afterResponse), hook.error && this.on({ as: type }, \"error\", hook.error), this;\n      }\n      return this.guard({}, hook);\n    }\n    const instance = new _Elysia({\n      ...this.config,\n      prefix: \"\"\n    });\n    instance.singleton = { ...this.singleton }, instance.definitions = { ...this.definitions }, instance.inference = cloneInference(this.inference), instance.extender = { ...this.extender }, instance.getServer = () => this.getServer();\n    const sandbox = run(instance);\n    return this.singleton = mergeDeep(this.singleton, instance.singleton), this.definitions = mergeDeep(this.definitions, instance.definitions), sandbox.getServer = () => this.server, sandbox.event.request?.length && (this.event.request = [\n      ...this.event.request || [],\n      ...sandbox.event.request || []\n    ]), sandbox.event.mapResponse?.length && (this.event.mapResponse = [\n      ...this.event.mapResponse || [],\n      ...sandbox.event.mapResponse || []\n    ]), this.model(sandbox.definitions.type), Object.values(instance.router.history).forEach(\n      ({ method, path, handler, hooks: localHook }) => {\n        const {\n          body,\n          headers,\n          query,\n          params,\n          cookie,\n          response,\n          ...guardHook\n        } = hook, hasStandaloneSchema = body || headers || query || params || cookie || response;\n        this.add(\n          method,\n          path,\n          handler,\n          mergeHook(guardHook, {\n            ...localHook || {},\n            error: localHook.error ? Array.isArray(localHook.error) ? [\n              ...localHook.error ?? [],\n              ...sandbox.event.error ?? []\n            ] : [\n              localHook.error,\n              ...sandbox.event.error ?? []\n            ] : sandbox.event.error,\n            standaloneValidator: hasStandaloneSchema ? [\n              ...localHook.standaloneValidator ?? [],\n              {\n                body,\n                headers,\n                query,\n                params,\n                cookie,\n                response\n              }\n            ] : localHook.standaloneValidator\n          })\n        );\n      }\n    ), this;\n  }\n  /**\n   * ### use\n   * Merge separate logic of Elysia with current\n   *\n   * ---\n   * @example\n   * ```typescript\n   * const plugin = (app: Elysia) => app\n   *     .get('/plugin', () => 'hi')\n   *\n   * new Elysia()\n   *     .use(plugin)\n   * ```\n   */\n  use(plugin) {\n    if (!plugin) return this;\n    if (Array.isArray(plugin)) {\n      let app = this;\n      for (const p of plugin) app = app.use(p);\n      return app;\n    }\n    return plugin instanceof Promise ? (this.promisedModules.add(\n      plugin.then((plugin2) => {\n        if (typeof plugin2 == \"function\") return plugin2(this);\n        if (plugin2 instanceof _Elysia)\n          return this._use(plugin2).compile();\n        if (plugin2.constructor?.name === \"Elysia\")\n          return this._use(\n            plugin2\n          ).compile();\n        if (typeof plugin2.default == \"function\")\n          return plugin2.default(this);\n        if (plugin2.default instanceof _Elysia)\n          return this._use(plugin2.default);\n        if (plugin2.constructor?.name === \"Elysia\")\n          return this._use(plugin2.default);\n        if (plugin2.constructor?.name === \"_Elysia\")\n          return this._use(plugin2.default);\n        try {\n          return this._use(plugin2.default);\n        } catch (error) {\n          throw console.error(\n            'Invalid plugin type. Expected Elysia instance, function, or module with \"default\" as Elysia instance or function that returns Elysia instance.'\n          ), error;\n        }\n      }).then((v) => (v && typeof v.compile == \"function\" && v.compile(), v))\n    ), this) : this._use(plugin);\n  }\n  propagatePromiseModules(plugin) {\n    if (plugin.promisedModules.size <= 0) return this;\n    for (const promise of plugin.promisedModules.promises)\n      this.promisedModules.add(\n        promise.then((v) => {\n          if (!v) return;\n          const t3 = this._use(v);\n          return t3 instanceof Promise ? t3.then((v2) => {\n            v2 ? v2.compile() : v.compile();\n          }) : v.compile();\n        })\n      );\n    return this;\n  }\n  _use(plugin) {\n    if (typeof plugin == \"function\") {\n      const instance = plugin(this);\n      return instance instanceof Promise ? (this.promisedModules.add(\n        instance.then((plugin2) => {\n          if (plugin2 instanceof _Elysia) {\n            plugin2.getServer = () => this.getServer(), plugin2.getGlobalRoutes = () => this.getGlobalRoutes(), plugin2.getGlobalDefinitions = () => this.getGlobalDefinitions(), plugin2.model(this.definitions.type), plugin2.error(this.definitions.error);\n            for (const {\n              method,\n              path,\n              handler,\n              hooks\n            } of Object.values(plugin2.router.history))\n              this.add(\n                method,\n                path,\n                handler,\n                hooks,\n                void 0\n              );\n            return plugin2 === this ? void 0 : (this.propagatePromiseModules(plugin2), plugin2);\n          }\n          return typeof plugin2 == \"function\" ? plugin2(\n            this\n          ) : typeof plugin2.default == \"function\" ? plugin2.default(\n            this\n          ) : this._use(plugin2);\n        }).then((v) => (v && typeof v.compile == \"function\" && v.compile(), v))\n      ), this) : instance;\n    }\n    this.propagatePromiseModules(plugin);\n    const name = plugin.config.name, seed = plugin.config.seed;\n    if (plugin.getParent = () => this, plugin.getServer = () => this.getServer(), plugin.getGlobalRoutes = () => this.getGlobalRoutes(), plugin.getGlobalDefinitions = () => this.getGlobalDefinitions(), plugin.standaloneValidator?.scoped && (this.standaloneValidator.local ? this.standaloneValidator.local = this.standaloneValidator.local.concat(\n      plugin.standaloneValidator.scoped\n    ) : this.standaloneValidator.local = plugin.standaloneValidator.scoped), plugin.standaloneValidator?.global && (this.standaloneValidator.global ? this.standaloneValidator.global = this.standaloneValidator.global.concat(\n      plugin.standaloneValidator.global\n    ) : this.standaloneValidator.global = plugin.standaloneValidator.global), isNotEmpty(plugin[\"~parser\"]) && (this[\"~parser\"] = {\n      ...plugin[\"~parser\"],\n      ...this[\"~parser\"]\n    }), plugin.setHeaders && this.headers(plugin.setHeaders), name) {\n      name in this.dependencies || (this.dependencies[name] = []);\n      const current = seed !== void 0 ? checksum(name + JSON.stringify(seed)) : 0;\n      this.dependencies[name].some(\n        ({ checksum: checksum3 }) => current === checksum3\n      ) || (this.extender.macro = {\n        ...this.extender.macro,\n        ...plugin.extender.macro\n      }, this.extender.higherOrderFunctions = this.extender.higherOrderFunctions.concat(\n        plugin.extender.higherOrderFunctions\n      ));\n    } else\n      isNotEmpty(plugin.extender.macro) && (this.extender.macro = {\n        ...this.extender.macro,\n        ...plugin.extender.macro\n      }), plugin.extender.higherOrderFunctions.length && (this.extender.higherOrderFunctions = this.extender.higherOrderFunctions.concat(\n        plugin.extender.higherOrderFunctions\n      ));\n    if (plugin.extender.higherOrderFunctions.length) {\n      deduplicateChecksum(this.extender.higherOrderFunctions);\n      const hofHashes = [];\n      for (let i = 0; i < this.extender.higherOrderFunctions.length; i++) {\n        const hof = this.extender.higherOrderFunctions[i];\n        hof.checksum && (hofHashes.includes(hof.checksum) && (this.extender.higherOrderFunctions.splice(i, 1), i--), hofHashes.push(hof.checksum));\n      }\n      hofHashes.length = 0;\n    }\n    this.inference = mergeInference(this.inference, plugin.inference), isNotEmpty(plugin.singleton.decorator) && this.decorate(plugin.singleton.decorator), isNotEmpty(plugin.singleton.store) && this.state(plugin.singleton.store), isNotEmpty(plugin.definitions.type) && this.model(plugin.definitions.type), isNotEmpty(plugin.definitions.error) && this.error(plugin.definitions.error), isNotEmpty(plugin.extender.macro) && (this.extender.macro = {\n      ...this.extender.macro,\n      ...plugin.extender.macro\n    });\n    for (const { method, path, handler, hooks } of Object.values(\n      plugin.router.history\n    ))\n      this.add(method, path, handler, hooks);\n    if (name) {\n      name in this.dependencies || (this.dependencies[name] = []);\n      const current = seed !== void 0 ? checksum(name + JSON.stringify(seed)) : 0;\n      if (this.dependencies[name].some(\n        ({ checksum: checksum3 }) => current === checksum3\n      ))\n        return this;\n      this.dependencies[name].push(\n        this.config?.analytic ? {\n          name: plugin.config.name,\n          seed: plugin.config.seed,\n          checksum: current,\n          dependencies: plugin.dependencies,\n          stack: plugin.telemetry?.stack,\n          routes: plugin.router.history,\n          decorators: plugin.singleton,\n          store: plugin.singleton.store,\n          error: plugin.definitions.error,\n          derive: plugin.event.transform?.filter((x) => x?.subType === \"derive\").map((x) => ({\n            fn: x.toString(),\n            stack: new Error().stack ?? \"\"\n          })),\n          resolve: plugin.event.transform?.filter((x) => x?.subType === \"resolve\").map((x) => ({\n            fn: x.toString(),\n            stack: new Error().stack ?? \"\"\n          }))\n        } : {\n          name: plugin.config.name,\n          seed: plugin.config.seed,\n          checksum: current,\n          dependencies: plugin.dependencies\n        }\n      ), isNotEmpty(plugin.event) && (this.event = mergeLifeCycle(\n        this.event,\n        filterGlobalHook(plugin.event),\n        current\n      ));\n    } else\n      isNotEmpty(plugin.event) && (this.event = mergeLifeCycle(\n        this.event,\n        filterGlobalHook(plugin.event)\n      ));\n    return plugin.validator.global && (this.validator.global = mergeHook(this.validator.global, {\n      ...plugin.validator.global\n    })), plugin.validator.scoped && (this.validator.local = mergeHook(this.validator.local, {\n      ...plugin.validator.scoped\n    })), this;\n  }\n  macro(macroOrName, macro) {\n    if (typeof macroOrName == \"string\" && !macro)\n      throw new Error(\"Macro function is required\");\n    return typeof macroOrName == \"string\" ? this.extender.macro[macroOrName] = macro : this.extender.macro = {\n      ...this.extender.macro,\n      ...macroOrName\n    }, this;\n  }\n  applyMacro(localHook, appliable = localHook, {\n    iteration = 0,\n    applied = {}\n  } = {}) {\n    if (iteration >= 16) return;\n    const macro = this.extender.macro;\n    for (let [key, value] of Object.entries(appliable)) {\n      if (!(key in macro)) continue;\n      const macroHook = typeof macro[key] == \"function\" ? macro[key](value) : macro[key];\n      if (!macroHook || typeof macro[key] == \"object\" && value === !1)\n        return;\n      const seed = checksum(key + JSON.stringify(macroHook.seed ?? value));\n      if (!(seed in applied)) {\n        applied[seed] = !0;\n        for (let [k, value2] of Object.entries(macroHook))\n          if (k !== \"seed\") {\n            if (k in emptySchema) {\n              insertStandaloneValidator(\n                localHook,\n                k,\n                value2\n              ), delete localHook[key];\n              continue;\n            }\n            if (k === \"detail\") {\n              localHook.detail || (localHook.detail = {}), localHook.detail = mergeDeep(localHook.detail, value2, {\n                mergeArray: !0\n              }), delete localHook[key];\n              continue;\n            }\n            if (k in macro) {\n              this.applyMacro(\n                localHook,\n                { [k]: value2 },\n                { applied, iteration: iteration + 1 }\n              ), delete localHook[key];\n              continue;\n            }\n            switch ((k === \"derive\" || k === \"resolve\") && typeof value2 == \"function\" && (value2 = {\n              fn: value2,\n              subType: k\n            }), typeof localHook[k]) {\n              case \"function\":\n                localHook[k] = [localHook[k], value2];\n                break;\n              case \"object\":\n                Array.isArray(localHook[k]) ? localHook[k].push(value2) : localHook[k] = [localHook[k], value2];\n                break;\n              case \"undefined\":\n                localHook[k] = value2;\n                break;\n            }\n            delete localHook[key];\n          }\n      }\n    }\n  }\n  mount(path, handleOrConfig, config) {\n    if (path instanceof _Elysia || typeof path == \"function\" || path.length === 0 || path === \"/\") {\n      const run = typeof path == \"function\" ? path : path instanceof _Elysia ? path.compile().fetch : handleOrConfig instanceof _Elysia ? handleOrConfig.compile().fetch : typeof handleOrConfig == \"function\" ? handleOrConfig : (() => {\n        throw new Error(\"Invalid handler\");\n      })(), handler2 = ({ request, path: path2 }) => run(\n        new Request(replaceUrlPath(request.url, path2), {\n          method: request.method,\n          headers: request.headers,\n          signal: request.signal,\n          credentials: request.credentials,\n          referrerPolicy: request.referrerPolicy,\n          duplex: request.duplex,\n          redirect: request.redirect,\n          mode: request.mode,\n          keepalive: request.keepalive,\n          integrity: request.integrity,\n          body: request.body\n        })\n      );\n      return this.route(\"ALL\", \"/*\", handler2, {\n        parse: \"none\",\n        ...config,\n        detail: {\n          ...config?.detail,\n          hide: !0\n        },\n        config: {\n          mount: run\n        }\n      }), this;\n    }\n    const handle = handleOrConfig instanceof _Elysia ? handleOrConfig.compile().fetch : typeof handleOrConfig == \"function\" ? handleOrConfig : (() => {\n      throw new Error(\"Invalid handler\");\n    })(), length = path.length - (path.endsWith(\"*\") ? 1 : 0), handler = ({ request, path: path2 }) => handle(\n      new Request(\n        replaceUrlPath(request.url, path2.slice(length) || \"/\"),\n        {\n          method: request.method,\n          headers: request.headers,\n          signal: request.signal,\n          credentials: request.credentials,\n          referrerPolicy: request.referrerPolicy,\n          duplex: request.duplex,\n          redirect: request.redirect,\n          mode: request.mode,\n          keepalive: request.keepalive,\n          integrity: request.integrity,\n          body: request.body\n        }\n      )\n    );\n    return this.route(\"ALL\", path, handler, {\n      parse: \"none\",\n      ...config,\n      detail: {\n        ...config?.detail,\n        hide: !0\n      },\n      config: {\n        mount: handle\n      }\n    }), this.route(\n      \"ALL\",\n      path + (path.endsWith(\"/\") ? \"*\" : \"/*\"),\n      handler,\n      {\n        parse: \"none\",\n        ...config,\n        detail: {\n          ...config?.detail,\n          hide: !0\n        },\n        config: {\n          mount: handle\n        }\n      }\n    ), this;\n  }\n  /**\n   * ### get\n   * Register handler for path with method [GET]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .get('/', () => 'hi')\n   *     .get('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  get(path, handler, hook) {\n    return this.add(\"GET\", path, handler, hook), this;\n  }\n  /**\n   * ### post\n   * Register handler for path with method [POST]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .post('/', () => 'hi')\n   *     .post('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  post(path, handler, hook) {\n    return this.add(\"POST\", path, handler, hook), this;\n  }\n  /**\n   * ### put\n   * Register handler for path with method [PUT]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .put('/', () => 'hi')\n   *     .put('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  put(path, handler, hook) {\n    return this.add(\"PUT\", path, handler, hook), this;\n  }\n  /**\n   * ### patch\n   * Register handler for path with method [PATCH]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .patch('/', () => 'hi')\n   *     .patch('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  patch(path, handler, hook) {\n    return this.add(\"PATCH\", path, handler, hook), this;\n  }\n  /**\n   * ### delete\n   * Register handler for path with method [DELETE]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .delete('/', () => 'hi')\n   *     .delete('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  delete(path, handler, hook) {\n    return this.add(\"DELETE\", path, handler, hook), this;\n  }\n  /**\n   * ### options\n   * Register handler for path with method [POST]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .options('/', () => 'hi')\n   *     .options('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  options(path, handler, hook) {\n    return this.add(\"OPTIONS\", path, handler, hook), this;\n  }\n  /**\n   * ### all\n   * Register handler for path with method [ALL]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .all('/', () => 'hi')\n   *     .all('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  all(path, handler, hook) {\n    return this.add(\"ALL\", path, handler, hook), this;\n  }\n  /**\n   * ### head\n   * Register handler for path with method [HEAD]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .head('/', () => 'hi')\n   *     .head('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  head(path, handler, hook) {\n    return this.add(\"HEAD\", path, handler, hook), this;\n  }\n  /**\n   * ### connect\n   * Register handler for path with method [CONNECT]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .connect('/', () => 'hi')\n   *     .connect('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  connect(path, handler, hook) {\n    return this.add(\"CONNECT\", path, handler, hook), this;\n  }\n  /**\n   * ### route\n   * Register handler for path with method [ROUTE]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .route('/', () => 'hi')\n   *     .route('/with-hook', () => 'hi', {\n   *         response: t.String()\n   *     })\n   * ```\n   */\n  route(method, path, handler, hook) {\n    return this.add(method.toUpperCase(), path, handler, hook, hook?.config), this;\n  }\n  /**\n   * ### ws\n   * Register handler for path with method [ws]\n   *\n   * ---\n   * @example\n   * ```typescript\n   * import { Elysia, t } from 'elysia'\n   *\n   * new Elysia()\n   *     .ws('/', {\n   *         message(ws, message) {\n   *             ws.send(message)\n   *         }\n   *     })\n   * ```\n   */\n  ws(path, options) {\n    return this[\"~adapter\"].ws ? this[\"~adapter\"].ws(this, path, options) : console.warn(\"Current adapter doesn't support WebSocket\"), this;\n  }\n  /**\n   * ### state\n   * Assign global mutatable state accessible for all handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .state('counter', 0)\n   *     .get('/', (({ counter }) => ++counter)\n   * ```\n   */\n  state(options, name, value) {\n    name === void 0 ? (value = options, options = { as: \"append\" }, name = \"\") : value === void 0 && (typeof options == \"string\" ? (value = name, name = options, options = { as: \"append\" }) : typeof options == \"object\" && (value = name, name = \"\"));\n    const { as } = options;\n    if (typeof name != \"string\") return this;\n    switch (typeof value) {\n      case \"object\":\n        return !value || !isNotEmpty(value) ? this : name ? (name in this.singleton.store ? this.singleton.store[name] = mergeDeep(\n          this.singleton.store[name],\n          value,\n          {\n            override: as === \"override\"\n          }\n        ) : this.singleton.store[name] = value, this) : value === null ? this : (this.singleton.store = mergeDeep(this.singleton.store, value, {\n          override: as === \"override\"\n        }), this);\n      case \"function\":\n        return name ? (as === \"override\" || !(name in this.singleton.store)) && (this.singleton.store[name] = value) : this.singleton.store = value(this.singleton.store), this;\n      default:\n        return (as === \"override\" || !(name in this.singleton.store)) && (this.singleton.store[name] = value), this;\n    }\n  }\n  /**\n   * ### decorate\n   * Define custom method to `Context` accessible for all handler\n   *\n   * ---\n   * @example\n   * ```typescript\n   * new Elysia()\n   *     .decorate('getDate', () => Date.now())\n   *     .get('/', (({ getDate }) => getDate())\n   * ```\n   */\n  decorate(options, name, value) {\n    name === void 0 ? (value = options, options = { as: \"append\" }, name = \"\") : value === void 0 && (typeof options == \"string\" ? (value = name, name = options, options = { as: \"append\" }) : typeof options == \"object\" && (value = name, name = \"\"));\n    const { as } = options;\n    if (typeof name != \"string\") return this;\n    switch (typeof value) {\n      case \"object\":\n        return name ? (name in this.singleton.decorator ? this.singleton.decorator[name] = mergeDeep(\n          this.singleton.decorator[name],\n          value,\n          {\n            override: as === \"override\"\n          }\n        ) : this.singleton.decorator[name] = value, this) : value === null ? this : (this.singleton.decorator = mergeDeep(\n          this.singleton.decorator,\n          value,\n          {\n            override: as === \"override\"\n          }\n        ), this);\n      case \"function\":\n        return name ? (as === \"override\" || !(name in this.singleton.decorator)) && (this.singleton.decorator[name] = value) : this.singleton.decorator = value(this.singleton.decorator), this;\n      default:\n        return (as === \"override\" || !(name in this.singleton.decorator)) && (this.singleton.decorator[name] = value), this;\n    }\n  }\n  derive(optionsOrTransform, transform) {\n    transform || (transform = optionsOrTransform, optionsOrTransform = { as: \"local\" });\n    const hook = {\n      subType: \"derive\",\n      fn: transform\n    };\n    return this.onTransform(optionsOrTransform, hook);\n  }\n  model(name, model) {\n    const onlyTypebox = (a) => {\n      const res = {};\n      for (const key in a) \"~standard\" in a[key] || (res[key] = a[key]);\n      return res;\n    };\n    switch (typeof name) {\n      case \"object\":\n        const parsedTypebox = {}, kvs = Object.entries(name);\n        if (!kvs.length) return this;\n        for (const [key, value] of kvs)\n          key in this.definitions.type || (\"~standard\" in value ? this.definitions.type[key] = value : (parsedTypebox[key] = this.definitions.type[key] = value, parsedTypebox[key].$id ??= `#/components/schemas/${key}`));\n        return this.definitions.typebox = t.Module({\n          ...this.definitions.typebox.$defs,\n          ...parsedTypebox\n        }), this;\n      case \"function\":\n        const result = name(this.definitions.type);\n        return this.definitions.type = result, this.definitions.typebox = t.Module(onlyTypebox(result)), this;\n      case \"string\":\n        if (!model) break;\n        if (this.definitions.type[name] = model, \"~standard\" in model) return this;\n        const newModel = {\n          ...model,\n          id: model.$id ?? `#/components/schemas/${name}`\n        };\n        return this.definitions.typebox = t.Module({\n          ...this.definitions.typebox.$defs,\n          ...newModel\n        }), this;\n    }\n    return model ? (this.definitions.type[name] = model, \"~standard\" in model ? this : (this.definitions.typebox = t.Module({\n      ...this.definitions.typebox.$defs,\n      [name]: model\n    }), this)) : this;\n  }\n  Ref(key) {\n    return t.Ref(key);\n  }\n  mapDerive(optionsOrDerive, mapper) {\n    mapper || (mapper = optionsOrDerive, optionsOrDerive = { as: \"local\" });\n    const hook = {\n      subType: \"mapDerive\",\n      fn: mapper\n    };\n    return this.onTransform(optionsOrDerive, hook);\n  }\n  affix(base, type, word) {\n    if (word === \"\") return this;\n    const delimieter = [\"_\", \"-\", \" \"], capitalize = (word2) => word2[0].toUpperCase() + word2.slice(1), joinKey = base === \"prefix\" ? (prefix, word2) => delimieter.includes(prefix.at(-1) ?? \"\") ? prefix + word2 : prefix + capitalize(word2) : delimieter.includes(word.at(-1) ?? \"\") ? (suffix, word2) => word2 + suffix : (suffix, word2) => word2 + capitalize(suffix), remap = (type2) => {\n      const store = {};\n      switch (type2) {\n        case \"decorator\":\n          for (const key in this.singleton.decorator)\n            store[joinKey(word, key)] = this.singleton.decorator[key];\n          this.singleton.decorator = store;\n          break;\n        case \"state\":\n          for (const key in this.singleton.store)\n            store[joinKey(word, key)] = this.singleton.store[key];\n          this.singleton.store = store;\n          break;\n        case \"model\":\n          for (const key in this.definitions.type)\n            store[joinKey(word, key)] = this.definitions.type[key];\n          this.definitions.type = store;\n          break;\n        case \"error\":\n          for (const key in this.definitions.error)\n            store[joinKey(word, key)] = this.definitions.error[key];\n          this.definitions.error = store;\n          break;\n      }\n    }, types = Array.isArray(type) ? type : [type];\n    for (const type2 of types.some((x) => x === \"all\") ? [\"decorator\", \"state\", \"model\", \"error\"] : types)\n      remap(type2);\n    return this;\n  }\n  prefix(type, word) {\n    return this.affix(\"prefix\", type, word);\n  }\n  suffix(type, word) {\n    return this.affix(\"suffix\", type, word);\n  }\n  compile() {\n    return this[\"~adapter\"].beforeCompile?.(this), this[\"~adapter\"].isWebStandard ? (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this), typeof this.server?.reload == \"function\" && this.server.reload({\n      ...this.server || {},\n      fetch: this.fetch\n    }), this) : (typeof this.server?.reload == \"function\" && this.server.reload(this.server || {}), this._handle = composeGeneralHandler(this), this);\n  }\n  /**\n   * Wait until all lazy loaded modules all load is fully\n   */\n  get modules() {\n    return this.promisedModules;\n  }\n};\nlet Elysia = _Elysia;\nimport { t as t2 } from \"./type-system/index.mjs\";\nimport { validationDetail, fileType } from \"./type-system/utils.mjs\";\nimport { serializeCookie, Cookie } from \"./cookies.mjs\";\nimport {\n  ELYSIA_TRACE\n} from \"./trace.mjs\";\nimport {\n  getSchemaValidator as getSchemaValidator2,\n  getResponseSchemaValidator as getResponseSchemaValidator2,\n  replaceSchemaType\n} from \"./schema.mjs\";\nimport {\n  mergeHook as mergeHook2,\n  mergeObjectArray,\n  redirect as redirect2,\n  StatusMap,\n  InvertedStatusMap,\n  form,\n  replaceUrlPath as replaceUrlPath2,\n  checksum as checksum2,\n  cloneInference as cloneInference2,\n  deduplicateChecksum as deduplicateChecksum2,\n  ELYSIA_FORM_DATA,\n  ELYSIA_REQUEST_ID,\n  sse\n} from \"./utils.mjs\";\nimport {\n  status as status2,\n  mapValueError,\n  ParseError,\n  NotFoundError,\n  ValidationError as ValidationError2,\n  InvalidFileType,\n  InternalServerError,\n  InvalidCookieSignature,\n  ERROR_CODE as ERROR_CODE2,\n  ElysiaCustomStatusResponse\n} from \"./error.mjs\";\nimport { env as env2 } from \"./universal/env.mjs\";\nimport { file, ElysiaFile } from \"./universal/file.mjs\";\nimport { TypeSystemPolicy } from \"@sinclair/typebox/system\";\nexport {\n  Cookie,\n  ELYSIA_FORM_DATA,\n  ELYSIA_REQUEST_ID,\n  ELYSIA_TRACE,\n  ERROR_CODE2 as ERROR_CODE,\n  Elysia,\n  ElysiaCustomStatusResponse,\n  ElysiaFile,\n  InternalServerError,\n  InvalidCookieSignature,\n  InvalidFileType,\n  InvertedStatusMap,\n  NotFoundError,\n  ParseError,\n  StatusMap,\n  TypeSystemPolicy,\n  ValidationError2 as ValidationError,\n  checksum2 as checksum,\n  cloneInference2 as cloneInference,\n  deduplicateChecksum2 as deduplicateChecksum,\n  Elysia as default,\n  env2 as env,\n  file,\n  fileType,\n  form,\n  getResponseSchemaValidator2 as getResponseSchemaValidator,\n  getSchemaValidator2 as getSchemaValidator,\n  mapValueError,\n  mergeHook2 as mergeHook,\n  mergeObjectArray,\n  redirect2 as redirect,\n  replaceSchemaType,\n  replaceUrlPath2 as replaceUrlPath,\n  serializeCookie,\n  sse,\n  status2 as status,\n  t2 as t,\n  validationDetail\n};\n", "// src/index.ts\nvar createNode = (part, inert) => {\n  const inertMap = inert?.length ? {} : null;\n  if (inertMap)\n    for (const child of inert)\n      inertMap[child.part.charCodeAt(0)] = child;\n  return {\n    part,\n    store: null,\n    inert: inertMap,\n    params: null,\n    wildcardStore: null\n  };\n};\nvar cloneNode = (node, part) => ({\n  ...node,\n  part\n});\nvar createParamNode = (name) => ({\n  name,\n  store: null,\n  inert: null\n});\nvar Memoirist = class _Memoirist {\n  constructor(config = {}) {\n    this.config = config;\n    if (config.lazy)\n      this.find = this.lazyFind;\n    if (config.onParam && !Array.isArray(config.onParam))\n      this.config.onParam = [\n        this.config.onParam\n      ];\n  }\n  root = {};\n  history = [];\n  deferred = [];\n  static regex = {\n    static: /:.+?(?=\\/|$)/,\n    params: /:.+?(?=\\/|$)/g,\n    optionalParams: /(\\/:\\w+\\?)/g\n  };\n  lazyFind = (method, url) => {\n    if (!this.config.lazy)\n      return this.find;\n    this.build();\n    return this.find(method, url);\n  };\n  build() {\n    if (!this.config.lazy)\n      return;\n    for (const [method, path, store] of this.deferred)\n      this.add(method, path, store, { lazy: false, ignoreHistory: true });\n    this.deferred = [];\n    this.find = (method, url) => {\n      const root = this.root[method];\n      if (!root)\n        return null;\n      return matchRoute(\n        url,\n        url.length,\n        root,\n        0,\n        this.config.onParam\n      );\n    };\n  }\n  add(method, path, store, {\n    ignoreError = false,\n    ignoreHistory = false,\n    lazy = this.config.lazy\n  } = {}) {\n    if (lazy) {\n      this.find = this.lazyFind;\n      this.deferred.push([method, path, store]);\n      return store;\n    }\n    if (typeof path !== \"string\")\n      throw new TypeError(\"Route path must be a string\");\n    if (path === \"\")\n      path = \"/\";\n    else if (path[0] !== \"/\")\n      path = `/${path}`;\n    const isWildcard = path[path.length - 1] === \"*\";\n    const optionalParams = path.match(_Memoirist.regex.optionalParams);\n    if (optionalParams) {\n      const originalPath = path.replaceAll(\"?\", \"\");\n      this.add(method, originalPath, store, {\n        ignoreError,\n        ignoreHistory,\n        lazy\n      });\n      for (let i = 0; i < optionalParams.length; i++) {\n        let newPath = path.replace(optionalParams[i], \"\");\n        this.add(method, newPath, store, {\n          ignoreError: true,\n          ignoreHistory,\n          lazy\n        });\n      }\n      return store;\n    }\n    if (optionalParams)\n      path = path.replaceAll(\"?\", \"\");\n    if (this.history.find(([m, p, s]) => m === method && p === path))\n      return store;\n    if (isWildcard || optionalParams && path.charCodeAt(path.length - 1) === 63)\n      path = path.slice(0, -1);\n    if (!ignoreHistory)\n      this.history.push([method, path, store]);\n    const inertParts = path.split(_Memoirist.regex.static);\n    const paramParts = path.match(_Memoirist.regex.params) || [];\n    if (inertParts[inertParts.length - 1] === \"\")\n      inertParts.pop();\n    let node;\n    if (!this.root[method])\n      node = this.root[method] = createNode(\"/\");\n    else\n      node = this.root[method];\n    let paramPartsIndex = 0;\n    for (let i = 0; i < inertParts.length; ++i) {\n      let part = inertParts[i];\n      if (i > 0) {\n        const param = paramParts[paramPartsIndex++].slice(1);\n        if (node.params === null)\n          node.params = createParamNode(param);\n        else if (node.params.name !== param) {\n          if (ignoreError)\n            return store;\n          else\n            throw new Error(\n              `Cannot create route \"${path}\" with parameter \"${param}\" because a route already exists with a different parameter name (\"${node.params.name}\") in the same location`\n            );\n        }\n        const params = node.params;\n        if (params.inert === null) {\n          node = params.inert = createNode(part);\n          continue;\n        }\n        node = params.inert;\n      }\n      for (let j = 0; ; ) {\n        if (j === part.length) {\n          if (j < node.part.length) {\n            const childNode = cloneNode(node, node.part.slice(j));\n            Object.assign(node, createNode(part, [childNode]));\n          }\n          break;\n        }\n        if (j === node.part.length) {\n          if (node.inert === null)\n            node.inert = {};\n          const inert = node.inert[part.charCodeAt(j)];\n          if (inert) {\n            node = inert;\n            part = part.slice(j);\n            j = 0;\n            continue;\n          }\n          const childNode = createNode(part.slice(j));\n          node.inert[part.charCodeAt(j)] = childNode;\n          node = childNode;\n          break;\n        }\n        if (part[j] !== node.part[j]) {\n          const existingChild = cloneNode(node, node.part.slice(j));\n          const newChild = createNode(part.slice(j));\n          Object.assign(\n            node,\n            createNode(node.part.slice(0, j), [\n              existingChild,\n              newChild\n            ])\n          );\n          node = newChild;\n          break;\n        }\n        ++j;\n      }\n    }\n    if (paramPartsIndex < paramParts.length) {\n      const param = paramParts[paramPartsIndex];\n      const name = param.slice(1);\n      if (node.params === null)\n        node.params = createParamNode(name);\n      else if (node.params.name !== name) {\n        if (ignoreError)\n          return store;\n        else\n          throw new Error(\n            `Cannot create route \"${path}\" with parameter \"${name}\" because a route already exists with a different parameter name (\"${node.params.name}\") in the same location`\n          );\n      }\n      if (node.params.store === null)\n        node.params.store = store;\n      return node.params.store;\n    }\n    if (isWildcard) {\n      if (node.wildcardStore === null)\n        node.wildcardStore = store;\n      return node.wildcardStore;\n    }\n    if (node.store === null)\n      node.store = store;\n    return node.store;\n  }\n  find(method, url) {\n    const root = this.root[method];\n    if (!root)\n      return null;\n    return matchRoute(\n      url,\n      url.length,\n      root,\n      0,\n      this.config.onParam\n    );\n  }\n};\nvar matchRoute = (url, urlLength, node, startIndex, onParam) => {\n  const part = node.part;\n  const length = part.length;\n  const endIndex = startIndex + length;\n  if (length > 1) {\n    if (endIndex > urlLength)\n      return null;\n    if (length < 15) {\n      for (let i = 1, j = startIndex + 1; i < length; ++i, ++j)\n        if (part.charCodeAt(i) !== url.charCodeAt(j))\n          return null;\n    } else if (url.slice(startIndex, endIndex) !== part)\n      return null;\n  }\n  if (endIndex === urlLength) {\n    if (node.store !== null)\n      return {\n        store: node.store,\n        params: {}\n      };\n    if (node.wildcardStore !== null)\n      return {\n        store: node.wildcardStore,\n        params: { \"*\": \"\" }\n      };\n    return null;\n  }\n  if (node.inert !== null) {\n    const inert = node.inert[url.charCodeAt(endIndex)];\n    if (inert !== void 0) {\n      const route = matchRoute(url, urlLength, inert, endIndex, onParam);\n      if (route !== null)\n        return route;\n    }\n  }\n  if (node.params !== null) {\n    const { store, name, inert } = node.params;\n    const slashIndex = url.indexOf(\"/\", endIndex);\n    if (slashIndex !== endIndex) {\n      if (slashIndex === -1 || slashIndex >= urlLength) {\n        if (store !== null) {\n          const params = {};\n          params[name] = url.substring(endIndex, urlLength);\n          if (onParam)\n            for (let i = 0; i < onParam.length; i++) {\n              let temp = onParam[i](params[name], name);\n              if (temp !== void 0)\n                params[name] = temp;\n            }\n          return {\n            store,\n            params\n          };\n        }\n      } else if (inert !== null) {\n        const route = matchRoute(\n          url,\n          urlLength,\n          inert,\n          slashIndex,\n          onParam\n        );\n        if (route !== null) {\n          route.params[name] = url.substring(endIndex, slashIndex);\n          if (onParam)\n            for (let i = 0; i < onParam.length; i++) {\n              let temp = onParam[i](route.params[name], name);\n              if (temp !== void 0)\n                route.params[name] = temp;\n            }\n          return route;\n        }\n      }\n    }\n  }\n  if (node.wildcardStore !== null)\n    return {\n      store: node.wildcardStore,\n      params: {\n        \"*\": url.substring(endIndex, urlLength)\n      }\n    };\n  return null;\n};\nvar src_default = Memoirist;\nexport {\n  Memoirist,\n  src_default as default\n};\n", "import { Clone } from './value.mjs';\n/** Clones a Rest */\nexport function CloneRest(schemas) {\n    return schemas.map((schema) => CloneType(schema));\n}\n/** Clones a Type */\nexport function CloneType(schema, options) {\n    return options === undefined ? Clone(schema) : Clone({ ...options, ...schema });\n}\n", "import * as ValueGuard from '../guard/value.mjs';\nfunction ArrayType(value) {\n    return value.map((value) => Visit(value));\n}\nfunction DateType(value) {\n    return new Date(value.getTime());\n}\nfunction Uint8ArrayType(value) {\n    return new Uint8Array(value);\n}\nfunction RegExpType(value) {\n    return new RegExp(value.source, value.flags);\n}\nfunction ObjectType(value) {\n    const result = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        result[key] = Visit(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        result[key] = Visit(value[key]);\n    }\n    return result;\n}\n// prettier-ignore\nfunction Visit(value) {\n    return (ValueGuard.IsArray(value) ? ArrayType(value) :\n        ValueGuard.IsDate(value) ? DateType(value) :\n            ValueGuard.IsUint8Array(value) ? Uint8ArrayType(value) :\n                ValueGuard.IsRegExp(value) ? RegExpType(value) :\n                    ValueGuard.IsObject(value) ? ObjectType(value) :\n                        value);\n}\n/** Clones a value */\nexport function Clone(value) {\n    return Visit(value);\n}\n", "// --------------------------------------------------------------------------\n// PropertyKey\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nexport function HasPropertyKey(value, key) {\n    return key in value;\n}\n// --------------------------------------------------------------------------\n// Object Instances\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an array */\nexport function IsArray(value) {\n    return Array.isArray(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is a boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is a Date object */\nexport function IsDate(value) {\n    return value instanceof globalThis.Date;\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && !IsArray(value) && !IsUint8Array(value) && Symbol.iterator in value;\n}\n/** Returns true if this value is null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an object */\nexport function IsObject(value) {\n    return typeof value === 'object' && value !== null;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if this value is undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n", "import { TypeSystemPolicy } from '../../system/policy.mjs';\nimport { Immutable } from './immutable.mjs';\nimport { Clone } from '../clone/value.mjs';\n/** Creates TypeBox schematics using the configured InstanceMode */\nexport function CreateType(schema, options) {\n    const result = options !== undefined ? { ...options, ...schema } : schema;\n    switch (TypeSystemPolicy.InstanceMode) {\n        case 'freeze':\n            return Immutable(result);\n        case 'clone':\n            return Clone(result);\n        default:\n            return result;\n    }\n}\n", "import { IsObject, IsArray, IsNumber, IsUndefined } from '../value/guard/index.mjs';\nexport var TypeSystemPolicy;\n(function (TypeSystemPolicy) {\n    // ------------------------------------------------------------------\n    // TypeSystemPolicy: Instancing\n    // ------------------------------------------------------------------\n    /**\n     * Configures the instantiation behavior of TypeBox types. The `default` option assigns raw JavaScript\n     * references for embedded types, which may cause side effects if type properties are explicitly updated\n     * outside the TypeBox type builder. The `clone` option creates copies of any shared types upon creation,\n     * preventing unintended side effects. The `freeze` option applies `Object.freeze()` to the type, making\n     * it fully readonly and immutable. Implementations should use `default` whenever possible, as it is the\n     * fastest way to instantiate types. The default setting is `default`.\n     */\n    TypeSystemPolicy.InstanceMode = 'default';\n    // ------------------------------------------------------------------\n    // TypeSystemPolicy: Checking\n    // ------------------------------------------------------------------\n    /** Sets whether TypeBox should assert optional properties using the TypeScript `exactOptionalPropertyTypes` assertion policy. The default is `false` */\n    TypeSystemPolicy.ExactOptionalPropertyTypes = false;\n    /** Sets whether arrays should be treated as a kind of objects. The default is `false` */\n    TypeSystemPolicy.AllowArrayObject = false;\n    /** Sets whether `NaN` or `Infinity` should be treated as valid numeric values. The default is `false` */\n    TypeSystemPolicy.AllowNaN = false;\n    /** Sets whether `null` should validate for void types. The default is `false` */\n    TypeSystemPolicy.AllowNullVoid = false;\n    /** Checks this value using the ExactOptionalPropertyTypes policy */\n    function IsExactOptionalProperty(value, key) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;\n    }\n    TypeSystemPolicy.IsExactOptionalProperty = IsExactOptionalProperty;\n    /** Checks this value using the AllowArrayObjects policy */\n    function IsObjectLike(value) {\n        const isObject = IsObject(value);\n        return TypeSystemPolicy.AllowArrayObject ? isObject : isObject && !IsArray(value);\n    }\n    TypeSystemPolicy.IsObjectLike = IsObjectLike;\n    /** Checks this value as a record using the AllowArrayObjects policy */\n    function IsRecordLike(value) {\n        return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);\n    }\n    TypeSystemPolicy.IsRecordLike = IsRecordLike;\n    /** Checks this value using the AllowNaN policy */\n    function IsNumberLike(value) {\n        return TypeSystemPolicy.AllowNaN ? IsNumber(value) : Number.isFinite(value);\n    }\n    TypeSystemPolicy.IsNumberLike = IsNumberLike;\n    /** Checks this value using the AllowVoidNull policy */\n    function IsVoidLike(value) {\n        const isUndefined = IsUndefined(value);\n        return TypeSystemPolicy.AllowNullVoid ? isUndefined || value === null : isUndefined;\n    }\n    TypeSystemPolicy.IsVoidLike = IsVoidLike;\n})(TypeSystemPolicy || (TypeSystemPolicy = {}));\n", "// --------------------------------------------------------------------------\n// Iterators\n// --------------------------------------------------------------------------\n/** Returns true if this value is an async iterator */\nexport function IsAsyncIterator(value) {\n    return IsObject(value) && globalThis.Symbol.asyncIterator in value;\n}\n/** Returns true if this value is an iterator */\nexport function IsIterator(value) {\n    return IsObject(value) && globalThis.Symbol.iterator in value;\n}\n// --------------------------------------------------------------------------\n// Object Instances\n// --------------------------------------------------------------------------\n/** Returns true if this value is not an instance of a class */\nexport function IsStandardObject(value) {\n    return IsObject(value) && (globalThis.Object.getPrototypeOf(value) === Object.prototype || globalThis.Object.getPrototypeOf(value) === null);\n}\n/** Returns true if this value is an instance of a class */\nexport function IsInstanceObject(value) {\n    return IsObject(value) && !IsArray(value) && IsFunction(value.constructor) && value.constructor.name !== 'Object';\n}\n// --------------------------------------------------------------------------\n// JavaScript\n// --------------------------------------------------------------------------\n/** Returns true if this value is a Promise */\nexport function IsPromise(value) {\n    return value instanceof globalThis.Promise;\n}\n/** Returns true if this value is a Date */\nexport function IsDate(value) {\n    return value instanceof Date && globalThis.Number.isFinite(value.getTime());\n}\n/** Returns true if this value is an instance of Map<K, T> */\nexport function IsMap(value) {\n    return value instanceof globalThis.Map;\n}\n/** Returns true if this value is an instance of Set<T> */\nexport function IsSet(value) {\n    return value instanceof globalThis.Set;\n}\n/** Returns true if this value is RegExp */\nexport function IsRegExp(value) {\n    return value instanceof globalThis.RegExp;\n}\n/** Returns true if this value is a typed array */\nexport function IsTypedArray(value) {\n    return globalThis.ArrayBuffer.isView(value);\n}\n/** Returns true if the value is a Int8Array */\nexport function IsInt8Array(value) {\n    return value instanceof globalThis.Int8Array;\n}\n/** Returns true if the value is a Uint8Array */\nexport function IsUint8Array(value) {\n    return value instanceof globalThis.Uint8Array;\n}\n/** Returns true if the value is a Uint8ClampedArray */\nexport function IsUint8ClampedArray(value) {\n    return value instanceof globalThis.Uint8ClampedArray;\n}\n/** Returns true if the value is a Int16Array */\nexport function IsInt16Array(value) {\n    return value instanceof globalThis.Int16Array;\n}\n/** Returns true if the value is a Uint16Array */\nexport function IsUint16Array(value) {\n    return value instanceof globalThis.Uint16Array;\n}\n/** Returns true if the value is a Int32Array */\nexport function IsInt32Array(value) {\n    return value instanceof globalThis.Int32Array;\n}\n/** Returns true if the value is a Uint32Array */\nexport function IsUint32Array(value) {\n    return value instanceof globalThis.Uint32Array;\n}\n/** Returns true if the value is a Float32Array */\nexport function IsFloat32Array(value) {\n    return value instanceof globalThis.Float32Array;\n}\n/** Returns true if the value is a Float64Array */\nexport function IsFloat64Array(value) {\n    return value instanceof globalThis.Float64Array;\n}\n/** Returns true if the value is a BigInt64Array */\nexport function IsBigInt64Array(value) {\n    return value instanceof globalThis.BigInt64Array;\n}\n/** Returns true if the value is a BigUint64Array */\nexport function IsBigUint64Array(value) {\n    return value instanceof globalThis.BigUint64Array;\n}\n// --------------------------------------------------------------------------\n// PropertyKey\n// --------------------------------------------------------------------------\n/** Returns true if this value has this property key */\nexport function HasPropertyKey(value, key) {\n    return key in value;\n}\n// --------------------------------------------------------------------------\n// Standard\n// --------------------------------------------------------------------------\n/** Returns true of this value is an object type */\nexport function IsObject(value) {\n    return value !== null && typeof value === 'object';\n}\n/** Returns true if this value is an array, but not a typed array */\nexport function IsArray(value) {\n    return globalThis.Array.isArray(value) && !globalThis.ArrayBuffer.isView(value);\n}\n/** Returns true if this value is an undefined */\nexport function IsUndefined(value) {\n    return value === undefined;\n}\n/** Returns true if this value is an null */\nexport function IsNull(value) {\n    return value === null;\n}\n/** Returns true if this value is an boolean */\nexport function IsBoolean(value) {\n    return typeof value === 'boolean';\n}\n/** Returns true if this value is an number */\nexport function IsNumber(value) {\n    return typeof value === 'number';\n}\n/** Returns true if this value is an integer */\nexport function IsInteger(value) {\n    return globalThis.Number.isInteger(value);\n}\n/** Returns true if this value is bigint */\nexport function IsBigInt(value) {\n    return typeof value === 'bigint';\n}\n/** Returns true if this value is string */\nexport function IsString(value) {\n    return typeof value === 'string';\n}\n/** Returns true if this value is a function */\nexport function IsFunction(value) {\n    return typeof value === 'function';\n}\n/** Returns true if this value is a symbol */\nexport function IsSymbol(value) {\n    return typeof value === 'symbol';\n}\n/** Returns true if this value is a value type such as number, string, boolean */\nexport function IsValueType(value) {\n    // prettier-ignore\n    return (IsBigInt(value) ||\n        IsBoolean(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsUndefined(value));\n}\n", "import * as ValueGuard from '../guard/value.mjs';\nfunction ImmutableArray(value) {\n    return globalThis.Object.freeze(value).map((value) => Immutable(value));\n}\nfunction ImmutableDate(value) {\n    return value;\n}\nfunction ImmutableUint8Array(value) {\n    return value;\n}\nfunction ImmutableRegExp(value) {\n    return value;\n}\nfunction ImmutableObject(value) {\n    const result = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        result[key] = Immutable(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        result[key] = Immutable(value[key]);\n    }\n    return globalThis.Object.freeze(result);\n}\n/** Specialized deep immutable value. Applies freeze recursively to the given value */\n// prettier-ignore\nexport function Immutable(value) {\n    return (ValueGuard.IsArray(value) ? ImmutableArray(value) :\n        ValueGuard.IsDate(value) ? ImmutableDate(value) :\n            ValueGuard.IsUint8Array(value) ? ImmutableUint8Array(value) :\n                ValueGuard.IsRegExp(value) ? ImmutableRegExp(value) :\n                    ValueGuard.IsObject(value) ? ImmutableObject(value) :\n                        value);\n}\n", "/** The base Error type thrown for all TypeBox exceptions  */\nexport class TypeBoxError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n", "export * as KindGuard from './kind.mjs';\nexport * as TypeGuard from './type.mjs';\nexport * as ValueGuard from './value.mjs';\n", "import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\n/** `[Kind-Only]` Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** `[Kind-Only]` Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n/** `[Kind-Only]` Returns true if the given value is TAny */\nexport function IsAny(value) {\n    return IsKindOf(value, 'Any');\n}\n/** `[Kind-Only]` Returns true if the given value is TArgument */\nexport function IsArgument(value) {\n    return IsKindOf(value, 'Argument');\n}\n/** `[Kind-Only]` Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return IsKindOf(value, 'Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    return IsKindOf(value, 'AsyncIterator');\n}\n/** `[Kind-Only]` Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    return IsKindOf(value, 'BigInt');\n}\n/** `[Kind-Only]` Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    return IsKindOf(value, 'Boolean');\n}\n/** `[Kind-Only]` Returns true if the given value is TComputed */\nexport function IsComputed(value) {\n    return IsKindOf(value, 'Computed');\n}\n/** `[Kind-Only]` Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    return IsKindOf(value, 'Constructor');\n}\n/** `[Kind-Only]` Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return IsKindOf(value, 'Date');\n}\n/** `[Kind-Only]` Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    return IsKindOf(value, 'Function');\n}\n/** `[Kind-Only]` Returns true if the given value is TInteger */\nexport function IsImport(value) {\n    return IsKindOf(value, 'Import');\n}\n/** `[Kind-Only]` Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return IsKindOf(value, 'Integer');\n}\n/** `[Kind-Only]` Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    return ValueGuard.IsObject(value);\n}\n/** `[Kind-Only]` Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    return IsKindOf(value, 'Intersect');\n}\n/** `[Kind-Only]` Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    return IsKindOf(value, 'Iterator');\n}\n/** `[Kind-Only]` Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteralValue */\nexport function IsLiteralValue(value) {\n    return ValueGuard.IsBoolean(value) || ValueGuard.IsNumber(value) || ValueGuard.IsString(value);\n}\n/** `[Kind-Only]` Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    return IsKindOf(value, 'Literal');\n}\n/** `[Kind-Only]` Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    return IsKindOf(value, 'MappedKey');\n}\n/** `[Kind-Only]` Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    return IsKindOf(value, 'MappedResult');\n}\n/** `[Kind-Only]` Returns true if the given value is TNever */\nexport function IsNever(value) {\n    return IsKindOf(value, 'Never');\n}\n/** `[Kind-Only]` Returns true if the given value is TNot */\nexport function IsNot(value) {\n    return IsKindOf(value, 'Not');\n}\n/** `[Kind-Only]` Returns true if the given value is TNull */\nexport function IsNull(value) {\n    return IsKindOf(value, 'Null');\n}\n/** `[Kind-Only]` Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return IsKindOf(value, 'Number');\n}\n/** `[Kind-Only]` Returns true if the given value is TObject */\nexport function IsObject(value) {\n    return IsKindOf(value, 'Object');\n}\n/** `[Kind-Only]` Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    return IsKindOf(value, 'Promise');\n}\n/** `[Kind-Only]` Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    return IsKindOf(value, 'Record');\n}\n/** `[Kind-Only]` Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** `[Kind-Only]` Returns true if the given value is TRef */\nexport function IsRef(value) {\n    return IsKindOf(value, 'Ref');\n}\n/** `[Kind-Only]` Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    return IsKindOf(value, 'RegExp');\n}\n/** `[Kind-Only]` Returns true if the given value is TString */\nexport function IsString(value) {\n    return IsKindOf(value, 'String');\n}\n/** `[Kind-Only]` Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    return IsKindOf(value, 'Symbol');\n}\n/** `[Kind-Only]` Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    return IsKindOf(value, 'TemplateLiteral');\n}\n/** `[Kind-Only]` Returns true if the given value is TThis */\nexport function IsThis(value) {\n    return IsKindOf(value, 'This');\n}\n/** `[Kind-Only]` Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** `[Kind-Only]` Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    return IsKindOf(value, 'Tuple');\n}\n/** `[Kind-Only]` Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    return IsKindOf(value, 'Undefined');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    return IsKindOf(value, 'Union');\n}\n/** `[Kind-Only]` Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    return IsKindOf(value, 'Uint8Array');\n}\n/** `[Kind-Only]` Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    return IsKindOf(value, 'Unknown');\n}\n/** `[Kind-Only]` Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** `[Kind-Only]` Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    return IsKindOf(value, 'Void');\n}\n/** `[Kind-Only]` Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]);\n}\n/** `[Kind-Only]` Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (IsAny(value) ||\n        IsArgument(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsComputed(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n", "/** Symbol key applied to transform types */\nexport const TransformKind = Symbol.for('TypeBox.Transform');\n/** Symbol key applied to readonly types */\nexport const ReadonlyKind = Symbol.for('TypeBox.Readonly');\n/** Symbol key applied to optional types */\nexport const OptionalKind = Symbol.for('TypeBox.Optional');\n/** Symbol key applied to types */\nexport const Hint = Symbol.for('TypeBox.Hint');\n/** Symbol key applied to types */\nexport const Kind = Symbol.for('TypeBox.Kind');\n", "import * as ValueGuard from './value.mjs';\nimport { Kind, Hint, TransformKind, ReadonlyKind, OptionalKind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nexport class TypeGuardUnknownTypeError extends TypeBoxError {\n}\nconst KnownTypes = [\n    'Argument',\n    'Any',\n    'Array',\n    'AsyncIterator',\n    'BigInt',\n    'Boolean',\n    'Computed',\n    'Constructor',\n    'Date',\n    'Enum',\n    'Function',\n    'Integer',\n    'Intersect',\n    'Iterator',\n    'Literal',\n    'MappedKey',\n    'MappedResult',\n    'Not',\n    'Null',\n    'Number',\n    'Object',\n    'Promise',\n    'Record',\n    'Ref',\n    'RegExp',\n    'String',\n    'Symbol',\n    'TemplateLiteral',\n    'This',\n    'Tuple',\n    'Undefined',\n    'Union',\n    'Uint8Array',\n    'Unknown',\n    'Void',\n];\nfunction IsPattern(value) {\n    try {\n        new RegExp(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction IsControlCharacterFree(value) {\n    if (!ValueGuard.IsString(value))\n        return false;\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if ((code >= 7 && code <= 13) || code === 27 || code === 127) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction IsAdditionalProperties(value) {\n    return IsOptionalBoolean(value) || IsSchema(value);\n}\nfunction IsOptionalBigInt(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBigInt(value);\n}\nfunction IsOptionalNumber(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsNumber(value);\n}\nfunction IsOptionalBoolean(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsBoolean(value);\n}\nfunction IsOptionalString(value) {\n    return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value);\n}\nfunction IsOptionalPattern(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value) && IsPattern(value));\n}\nfunction IsOptionalFormat(value) {\n    return ValueGuard.IsUndefined(value) || (ValueGuard.IsString(value) && IsControlCharacterFree(value));\n}\nfunction IsOptionalSchema(value) {\n    return ValueGuard.IsUndefined(value) || IsSchema(value);\n}\n// ------------------------------------------------------------------\n// Modifiers\n// ------------------------------------------------------------------\n/** Returns true if this value has a Readonly symbol */\nexport function IsReadonly(value) {\n    return ValueGuard.IsObject(value) && value[ReadonlyKind] === 'Readonly';\n}\n/** Returns true if this value has a Optional symbol */\nexport function IsOptional(value) {\n    return ValueGuard.IsObject(value) && value[OptionalKind] === 'Optional';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\n/** Returns true if the given value is TAny */\nexport function IsAny(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Any') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TArgument */\nexport function IsArgument(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Argument') &&\n        ValueGuard.IsNumber(value.index));\n}\n/** Returns true if the given value is TArray */\nexport function IsArray(value) {\n    return (IsKindOf(value, 'Array') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items) &&\n        IsOptionalNumber(value.minItems) &&\n        IsOptionalNumber(value.maxItems) &&\n        IsOptionalBoolean(value.uniqueItems) &&\n        IsOptionalSchema(value.contains) &&\n        IsOptionalNumber(value.minContains) &&\n        IsOptionalNumber(value.maxContains));\n}\n/** Returns true if the given value is TAsyncIterator */\nexport function IsAsyncIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'AsyncIterator') &&\n        value.type === 'AsyncIterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is TBigInt */\nexport function IsBigInt(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'BigInt') &&\n        value.type === 'bigint' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalBigInt(value.exclusiveMaximum) &&\n        IsOptionalBigInt(value.exclusiveMinimum) &&\n        IsOptionalBigInt(value.maximum) &&\n        IsOptionalBigInt(value.minimum) &&\n        IsOptionalBigInt(value.multipleOf));\n}\n/** Returns true if the given value is TBoolean */\nexport function IsBoolean(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Boolean') &&\n        value.type === 'boolean' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TComputed */\nexport function IsComputed(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Computed') &&\n        ValueGuard.IsString(value.target) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every((schema) => IsSchema(schema)));\n}\n/** Returns true if the given value is TConstructor */\nexport function IsConstructor(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Constructor') &&\n        value.type === 'Constructor' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TDate */\nexport function IsDate(value) {\n    return (IsKindOf(value, 'Date') &&\n        value.type === 'Date' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximumTimestamp) &&\n        IsOptionalNumber(value.exclusiveMinimumTimestamp) &&\n        IsOptionalNumber(value.maximumTimestamp) &&\n        IsOptionalNumber(value.minimumTimestamp) &&\n        IsOptionalNumber(value.multipleOfTimestamp));\n}\n/** Returns true if the given value is TFunction */\nexport function IsFunction(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Function') &&\n        value.type === 'Function' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsArray(value.parameters) &&\n        value.parameters.every(schema => IsSchema(schema)) &&\n        IsSchema(value.returns));\n}\n/** Returns true if the given value is TImport */\nexport function IsImport(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Import') &&\n        ValueGuard.HasPropertyKey(value, '$defs') &&\n        ValueGuard.IsObject(value.$defs) &&\n        IsProperties(value.$defs) &&\n        ValueGuard.HasPropertyKey(value, '$ref') &&\n        ValueGuard.IsString(value.$ref) &&\n        value.$ref in value.$defs // required\n    );\n}\n/** Returns true if the given value is TInteger */\nexport function IsInteger(value) {\n    return (IsKindOf(value, 'Integer') &&\n        value.type === 'integer' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given schema is TProperties */\nexport function IsProperties(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value) &&\n        Object.entries(value).every(([key, schema]) => IsControlCharacterFree(key) && IsSchema(schema)));\n}\n/** Returns true if the given value is TIntersect */\nexport function IsIntersect(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Intersect') &&\n        (ValueGuard.IsString(value.type) && value.type !== 'object' ? false : true) &&\n        ValueGuard.IsArray(value.allOf) &&\n        value.allOf.every(schema => IsSchema(schema) && !IsTransform(schema)) &&\n        IsOptionalString(value.type) &&\n        (IsOptionalBoolean(value.unevaluatedProperties) || IsOptionalSchema(value.unevaluatedProperties)) &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TIterator */\nexport function IsIterator(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Iterator') &&\n        value.type === 'Iterator' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.items));\n}\n/** Returns true if the given value is a TKind with the given name. */\nexport function IsKindOf(value, kind) {\n    return ValueGuard.IsObject(value) && Kind in value && value[Kind] === kind;\n}\n/** Returns true if the given value is TLiteral<string> */\nexport function IsLiteralString(value) {\n    return IsLiteral(value) && ValueGuard.IsString(value.const);\n}\n/** Returns true if the given value is TLiteral<number> */\nexport function IsLiteralNumber(value) {\n    return IsLiteral(value) && ValueGuard.IsNumber(value.const);\n}\n/** Returns true if the given value is TLiteral<boolean> */\nexport function IsLiteralBoolean(value) {\n    return IsLiteral(value) && ValueGuard.IsBoolean(value.const);\n}\n/** Returns true if the given value is TLiteral */\nexport function IsLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Literal') &&\n        IsOptionalString(value.$id) && IsLiteralValue(value.const));\n}\n/** Returns true if the given value is a TLiteralValue */\nexport function IsLiteralValue(value) {\n    return ValueGuard.IsBoolean(value) || ValueGuard.IsNumber(value) || ValueGuard.IsString(value);\n}\n/** Returns true if the given value is a TMappedKey */\nexport function IsMappedKey(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedKey') &&\n        ValueGuard.IsArray(value.keys) &&\n        value.keys.every(key => ValueGuard.IsNumber(key) || ValueGuard.IsString(key)));\n}\n/** Returns true if the given value is TMappedResult */\nexport function IsMappedResult(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'MappedResult') &&\n        IsProperties(value.properties));\n}\n/** Returns true if the given value is TNever */\nexport function IsNever(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Never') &&\n        ValueGuard.IsObject(value.not) &&\n        Object.getOwnPropertyNames(value.not).length === 0);\n}\n/** Returns true if the given value is TNot */\nexport function IsNot(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Not') &&\n        IsSchema(value.not));\n}\n/** Returns true if the given value is TNull */\nexport function IsNull(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Null') &&\n        value.type === 'null' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TNumber */\nexport function IsNumber(value) {\n    return (IsKindOf(value, 'Number') &&\n        value.type === 'number' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.exclusiveMaximum) &&\n        IsOptionalNumber(value.exclusiveMinimum) &&\n        IsOptionalNumber(value.maximum) &&\n        IsOptionalNumber(value.minimum) &&\n        IsOptionalNumber(value.multipleOf));\n}\n/** Returns true if the given value is TObject */\nexport function IsObject(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Object') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsProperties(value.properties) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        IsOptionalNumber(value.minProperties) &&\n        IsOptionalNumber(value.maxProperties));\n}\n/** Returns true if the given value is TPromise */\nexport function IsPromise(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Promise') &&\n        value.type === 'Promise' &&\n        IsOptionalString(value.$id) &&\n        IsSchema(value.item));\n}\n/** Returns true if the given value is TRecord */\nexport function IsRecord(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Record') &&\n        value.type === 'object' &&\n        IsOptionalString(value.$id) &&\n        IsAdditionalProperties(value.additionalProperties) &&\n        ValueGuard.IsObject(value.patternProperties) &&\n        ((schema) => {\n            const keys = Object.getOwnPropertyNames(schema.patternProperties);\n            return (keys.length === 1 &&\n                IsPattern(keys[0]) &&\n                ValueGuard.IsObject(schema.patternProperties) &&\n                IsSchema(schema.patternProperties[keys[0]]));\n        })(value));\n}\n/** Returns true if this value is TRecursive */\nexport function IsRecursive(value) {\n    return ValueGuard.IsObject(value) && Hint in value && value[Hint] === 'Recursive';\n}\n/** Returns true if the given value is TRef */\nexport function IsRef(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Ref') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true if the given value is TRegExp */\nexport function IsRegExp(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'RegExp') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.source) &&\n        ValueGuard.IsString(value.flags) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalNumber(value.minLength));\n}\n/** Returns true if the given value is TString */\nexport function IsString(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'String') &&\n        value.type === 'string' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minLength) &&\n        IsOptionalNumber(value.maxLength) &&\n        IsOptionalPattern(value.pattern) &&\n        IsOptionalFormat(value.format));\n}\n/** Returns true if the given value is TSymbol */\nexport function IsSymbol(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Symbol') &&\n        value.type === 'symbol' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TTemplateLiteral */\nexport function IsTemplateLiteral(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'TemplateLiteral') &&\n        value.type === 'string' &&\n        ValueGuard.IsString(value.pattern) &&\n        value.pattern[0] === '^' &&\n        value.pattern[value.pattern.length - 1] === '$');\n}\n/** Returns true if the given value is TThis */\nexport function IsThis(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'This') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsString(value.$ref));\n}\n/** Returns true of this value is TTransform */\nexport function IsTransform(value) {\n    return ValueGuard.IsObject(value) && TransformKind in value;\n}\n/** Returns true if the given value is TTuple */\nexport function IsTuple(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Tuple') &&\n        value.type === 'array' &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsNumber(value.minItems) &&\n        ValueGuard.IsNumber(value.maxItems) &&\n        value.minItems === value.maxItems &&\n        (( // empty\n        ValueGuard.IsUndefined(value.items) &&\n            ValueGuard.IsUndefined(value.additionalItems) &&\n            value.minItems === 0) || (ValueGuard.IsArray(value.items) &&\n            value.items.every(schema => IsSchema(schema)))));\n}\n/** Returns true if the given value is TUndefined */\nexport function IsUndefined(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Undefined') &&\n        value.type === 'undefined' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TUnion<Literal<string | number>[]> */\nexport function IsUnionLiteral(value) {\n    return IsUnion(value) && value.anyOf.every((schema) => IsLiteralString(schema) || IsLiteralNumber(schema));\n}\n/** Returns true if the given value is TUnion */\nexport function IsUnion(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Union') &&\n        IsOptionalString(value.$id) &&\n        ValueGuard.IsObject(value) &&\n        ValueGuard.IsArray(value.anyOf) &&\n        value.anyOf.every(schema => IsSchema(schema)));\n}\n/** Returns true if the given value is TUint8Array */\nexport function IsUint8Array(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Uint8Array') &&\n        value.type === 'Uint8Array' &&\n        IsOptionalString(value.$id) &&\n        IsOptionalNumber(value.minByteLength) &&\n        IsOptionalNumber(value.maxByteLength));\n}\n/** Returns true if the given value is TUnknown */\nexport function IsUnknown(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Unknown') &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is a raw TUnsafe */\nexport function IsUnsafe(value) {\n    return IsKindOf(value, 'Unsafe');\n}\n/** Returns true if the given value is TVoid */\nexport function IsVoid(value) {\n    // prettier-ignore\n    return (IsKindOf(value, 'Void') &&\n        value.type === 'void' &&\n        IsOptionalString(value.$id));\n}\n/** Returns true if the given value is TKind */\nexport function IsKind(value) {\n    return ValueGuard.IsObject(value) && Kind in value && ValueGuard.IsString(value[Kind]) && !KnownTypes.includes(value[Kind]);\n}\n/** Returns true if the given value is TSchema */\nexport function IsSchema(value) {\n    // prettier-ignore\n    return (ValueGuard.IsObject(value)) && (IsAny(value) ||\n        IsArgument(value) ||\n        IsArray(value) ||\n        IsBoolean(value) ||\n        IsBigInt(value) ||\n        IsAsyncIterator(value) ||\n        IsComputed(value) ||\n        IsConstructor(value) ||\n        IsDate(value) ||\n        IsFunction(value) ||\n        IsInteger(value) ||\n        IsIntersect(value) ||\n        IsIterator(value) ||\n        IsLiteral(value) ||\n        IsMappedKey(value) ||\n        IsMappedResult(value) ||\n        IsNever(value) ||\n        IsNot(value) ||\n        IsNull(value) ||\n        IsNumber(value) ||\n        IsObject(value) ||\n        IsPromise(value) ||\n        IsRecord(value) ||\n        IsRef(value) ||\n        IsRegExp(value) ||\n        IsString(value) ||\n        IsSymbol(value) ||\n        IsTemplateLiteral(value) ||\n        IsThis(value) ||\n        IsTuple(value) ||\n        IsUndefined(value) ||\n        IsUnion(value) ||\n        IsUint8Array(value) ||\n        IsUnknown(value) ||\n        IsUnsafe(value) ||\n        IsVoid(value) ||\n        IsKind(value));\n}\n", "export const PatternBoolean = '(true|false)';\nexport const PatternNumber = '(0|[1-9][0-9]*)';\nexport const PatternString = '(.*)';\nexport const PatternNever = '(?!.*)';\nexport const PatternBooleanExact = `^${PatternBoolean}$`;\nexport const PatternNumberExact = `^${PatternNumber}$`;\nexport const PatternStringExact = `^${PatternString}$`;\nexport const PatternNeverExact = `^${PatternNever}$`;\n", "export * as FormatRegistry from './format.mjs';\nexport * as TypeRegistry from './type.mjs';\n", "/** A registry for user defined string formats */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined string formats */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered format */\nexport function Delete(format) {\n    return map.delete(format);\n}\n/** Returns true if the user defined string format exists */\nexport function Has(format) {\n    return map.has(format);\n}\n/** Sets a validation function for a user defined string format */\nexport function Set(format, func) {\n    map.set(format, func);\n}\n/** Gets a validation function for a user defined string format */\nexport function Get(format) {\n    return map.get(format);\n}\n", "/** A registry for user defined types */\nconst map = new Map();\n/** Returns the entries in this registry */\nexport function Entries() {\n    return new Map(map);\n}\n/** Clears all user defined types */\nexport function Clear() {\n    return map.clear();\n}\n/** Deletes a registered type */\nexport function Delete(kind) {\n    return map.delete(kind);\n}\n/** Returns true if this registry contains this kind */\nexport function Has(kind) {\n    return map.has(kind);\n}\n/** Sets a validation function for a user defined type */\nexport function Set(kind, func) {\n    map.set(kind, func);\n}\n/** Gets a custom validation function for a user defined type */\nexport function Get(kind) {\n    return map.get(kind);\n}\n", "/** Returns true if element right is in the set of left */\n// prettier-ignore\nexport function SetIncludes(T, S) {\n    return T.includes(S);\n}\n/** Returns true if left is a subset of right */\nexport function SetIsSubset(T, S) {\n    return T.every((L) => SetIncludes(S, L));\n}\n/** Returns a distinct set of elements */\nexport function SetDistinct(T) {\n    return [...new Set(T)];\n}\n/** Returns the Intersect of the given sets */\nexport function SetIntersect(T, S) {\n    return T.filter((L) => S.includes(L));\n}\n/** Returns the Union of the given sets */\nexport function SetUnion(T, S) {\n    return [...T, ...S];\n}\n/** Returns the Complement by omitting elements in T that are in S */\n// prettier-ignore\nexport function SetComplement(T, S) {\n    return T.filter(L => !S.includes(L));\n}\n// prettier-ignore\nfunction SetIntersectManyResolve(T, Init) {\n    return T.reduce((Acc, L) => {\n        return SetIntersect(Acc, L);\n    }, Init);\n}\n// prettier-ignore\nexport function SetIntersectMany(T) {\n    return (T.length === 1\n        ? T[0]\n        // Use left to initialize the accumulator for resolve\n        : T.length > 1\n            ? SetIntersectManyResolve(T.slice(1), T[0])\n            : []);\n}\n/** Returns the Union of multiple sets */\nexport function SetUnionMany(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...L);\n    return Acc;\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Any type */\nexport function Any(options) {\n    return CreateType({ [Kind]: 'Any' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Array type */\nexport function Array(items, options) {\n    return CreateType({ [Kind]: 'Array', type: 'array', items }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates an Argument Type. */\nexport function Argument(index) {\n    return CreateType({ [Kind]: 'Argument', index });\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/type.mjs';\n/** `[JavaScript]` Creates a AsyncIterator type */\nexport function AsyncIterator(items, options) {\n    return CreateType({ [Kind]: 'AsyncIterator', type: 'AsyncIterator', items }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Ref } from '../ref/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsPromise, IsRef, IsComputed } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('Awaited', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('Awaited', [Ref($ref)]);\n}\n// prettier-ignore\nfunction FromIntersect(types) {\n    return Intersect(FromRest(types));\n}\n// prettier-ignore\nfunction FromUnion(types) {\n    return Union(FromRest(types));\n}\n// prettier-ignore\nfunction FromPromise(type) {\n    return Awaited(type);\n}\n// prettier-ignore\nfunction FromRest(types) {\n    return types.map(type => Awaited(type));\n}\n/** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\nexport function Awaited(type, options) {\n    return CreateType(IsComputed(type) ? FromComputed(type.target, type.parameters) : IsIntersect(type) ? FromIntersect(type.allOf) : IsUnion(type) ? FromUnion(type.anyOf) : IsPromise(type) ? FromPromise(type.item) : IsRef(type) ? FromRef(type.$ref) : type, options);\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { Kind } from '../symbols/symbols.mjs';\n/** `[Internal]` Creates a deferred computed type. This type is used exclusively in modules to defer resolution of computable types that contain interior references  */\nexport function Computed(target, parameters, options) {\n    return CreateType({ [Kind]: 'Computed', target, parameters }, options);\n}\n", "import { OptionalKind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional, IsTransform } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsIntersectOptional(types) {\n    return types.every(left => IsOptional(left));\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(type) {\n    return (Discard(type, [OptionalKind]));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(types) {\n    return types.map(left => IsOptional(left) ? RemoveOptionalFromType(left) : left);\n}\n// prettier-ignore\nfunction ResolveIntersect(types, options) {\n    return (IsIntersectOptional(types)\n        ? Optional(IntersectCreate(RemoveOptionalFromRest(types), options))\n        : IntersectCreate(RemoveOptionalFromRest(types), options));\n}\n/** `[Json]` Creates an evaluated Intersect type */\nexport function IntersectEvaluated(types, options = {}) {\n    if (types.length === 1)\n        return CreateType(types[0], options);\n    if (types.length === 0)\n        return Never(options);\n    if (types.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return ResolveIntersect(types, options);\n}\n", "function DiscardKey(value, key) {\n    const { [key]: _, ...rest } = value;\n    return rest;\n}\n/** Discards property keys from the given value. This function returns a shallow Clone. */\nexport function Discard(value, keys) {\n    return keys.reduce((acc, key) => DiscardKey(acc, key), value);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Never type */\nexport function Never(options) {\n    return CreateType({ [Kind]: 'Never', not: {} }, options);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Optional } from './optional.mjs';\n// prettier-ignore\nfunction FromProperties(P, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Optional(P[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function OptionalFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// prettier-ignore\nexport function MappedResult(properties) {\n    return CreateType({\n        [Kind]: 'MappedResult',\n        properties\n    });\n}\n", "import { Kind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\n// evaluation types\nimport { Array } from '../array/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Promise } from '../promise/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// operator\nimport { SetIncludes } from '../sets/index.mjs';\n// mapping types\nimport { MappedResult } from './mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsAsyncIterator, IsConstructor, IsFunction, IsIntersect, IsIterator, IsReadonly, IsMappedResult, IsMappedKey, IsObject, IsOptional, IsPromise, IsSchema, IsTuple, IsUnion } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromMappedResult(K, P) {\n    return (K in P\n        ? FromSchemaType(K, P[K])\n        : MappedResult(P));\n}\n// prettier-ignore\nfunction MappedKeyToKnownMappedResultProperties(K) {\n    return { [K]: Literal(K) };\n}\n// prettier-ignore\nfunction MappedKeyToUnknownMappedResultProperties(P) {\n    const Acc = {};\n    for (const L of P)\n        Acc[L] = Literal(L);\n    return Acc;\n}\n// prettier-ignore\nfunction MappedKeyToMappedResultProperties(K, P) {\n    return (SetIncludes(P, K)\n        ? MappedKeyToKnownMappedResultProperties(K)\n        : MappedKeyToUnknownMappedResultProperties(P));\n}\n// prettier-ignore\nfunction FromMappedKey(K, P) {\n    const R = MappedKeyToMappedResultProperties(K, P);\n    return FromMappedResult(K, R);\n}\n// prettier-ignore\nfunction FromRest(K, T) {\n    return T.map(L => FromSchemaType(K, L));\n}\n// prettier-ignore\nfunction FromProperties(K, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(T))\n        Acc[K2] = FromSchemaType(K, T[K2]);\n    return Acc;\n}\n// prettier-ignore\nfunction FromSchemaType(K, T) {\n    // required to retain user defined options for mapped type\n    const options = { ...T };\n    return (\n    // unevaluated modifier types\n    IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) :\n        IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) :\n            // unevaluated mapped types\n            IsMappedResult(T) ? FromMappedResult(K, T.properties) :\n                IsMappedKey(T) ? FromMappedKey(K, T.keys) :\n                    // unevaluated types\n                    IsConstructor(T) ? Constructor(FromRest(K, T.parameters), FromSchemaType(K, T.returns), options) :\n                        IsFunction(T) ? FunctionType(FromRest(K, T.parameters), FromSchemaType(K, T.returns), options) :\n                            IsAsyncIterator(T) ? AsyncIterator(FromSchemaType(K, T.items), options) :\n                                IsIterator(T) ? Iterator(FromSchemaType(K, T.items), options) :\n                                    IsIntersect(T) ? Intersect(FromRest(K, T.allOf), options) :\n                                        IsUnion(T) ? Union(FromRest(K, T.anyOf), options) :\n                                            IsTuple(T) ? Tuple(FromRest(K, T.items ?? []), options) :\n                                                IsObject(T) ? Object(FromProperties(K, T.properties), options) :\n                                                    IsArray(T) ? Array(FromSchemaType(K, T.items), options) :\n                                                        IsPromise(T) ? Promise(FromSchemaType(K, T.item), options) :\n                                                            T);\n}\n// prettier-ignore\nexport function MappedFunctionReturnType(K, T) {\n    const Acc = {};\n    for (const L of K)\n        Acc[L] = FromSchemaType(L, T);\n    return Acc;\n}\n/** `[Json]` Creates a Mapped object type */\nexport function Mapped(key, map, options) {\n    const K = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const RT = map({ [Kind]: 'MappedKey', keys: K });\n    const R = MappedFunctionReturnType(K, RT);\n    return Object(R, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Constructor type */\nexport function Constructor(parameters, returns, options) {\n    return CreateType({ [Kind]: 'Constructor', type: 'Constructor', parameters, returns }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Function type */\nexport function Function(parameters, returns, options) {\n    return CreateType({ [Kind]: 'Function', type: 'Function', parameters, returns }, options);\n}\n", "import { Index } from './indexed.mjs';\nimport { MappedResult } from '../mapped/index.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction MappedIndexPropertyKey(type, key, options) {\n    return { [key]: Index(type, [key], Clone(options)) };\n}\n// prettier-ignore\nfunction MappedIndexPropertyKeys(type, propertyKeys, options) {\n    return propertyKeys.reduce((result, left) => {\n        return { ...result, ...MappedIndexPropertyKey(type, left, options) };\n    }, {});\n}\n// prettier-ignore\nfunction MappedIndexProperties(type, mappedKey, options) {\n    return MappedIndexPropertyKeys(type, mappedKey.keys, options);\n}\n// prettier-ignore\nexport function IndexFromMappedKey(type, mappedKey, options) {\n    const properties = MappedIndexProperties(type, mappedKey, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { IntersectEvaluated } from '../intersect/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { IndexFromMappedKey } from './indexed-from-mapped-key.mjs';\nimport { IndexFromMappedResult } from './indexed-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsIntersect, IsObject, IsMappedKey, IsMappedResult, IsNever, IsSchema, IsTuple, IsUnion, IsRef } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(types, key) {\n    return types.map(type => IndexFromPropertyKey(type, key));\n}\n// prettier-ignore\nfunction FromIntersectRest(types) {\n    return types.filter(type => !IsNever(type));\n}\n// prettier-ignore\nfunction FromIntersect(types, key) {\n    return (IntersectEvaluated(FromIntersectRest(FromRest(types, key))));\n}\n// prettier-ignore\nfunction FromUnionRest(types) {\n    return (types.some(L => IsNever(L))\n        ? []\n        : types);\n}\n// prettier-ignore\nfunction FromUnion(types, key) {\n    return (UnionEvaluated(FromUnionRest(FromRest(types, key))));\n}\n// prettier-ignore\nfunction FromTuple(types, key) {\n    return (key in types ? types[key] :\n        key === '[number]' ? UnionEvaluated(types) :\n            Never());\n}\n// prettier-ignore\nfunction FromArray(type, key) {\n    return (key === '[number]'\n        ? type\n        : Never());\n}\n// prettier-ignore\nfunction FromProperty(properties, propertyKey) {\n    return (propertyKey in properties ? properties[propertyKey] : Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKey(type, propertyKey) {\n    return (IsIntersect(type) ? FromIntersect(type.allOf, propertyKey) :\n        IsUnion(type) ? FromUnion(type.anyOf, propertyKey) :\n            IsTuple(type) ? FromTuple(type.items ?? [], propertyKey) :\n                IsArray(type) ? FromArray(type.items, propertyKey) :\n                    IsObject(type) ? FromProperty(type.properties, propertyKey) :\n                        Never());\n}\n// prettier-ignore\nexport function IndexFromPropertyKeys(type, propertyKeys) {\n    return propertyKeys.map(propertyKey => IndexFromPropertyKey(type, propertyKey));\n}\n// prettier-ignore\nfunction FromSchema(type, propertyKeys) {\n    return (UnionEvaluated(IndexFromPropertyKeys(type, propertyKeys)));\n}\n// prettier-ignore\nexport function IndexFromComputed(type, key) {\n    return Computed('Index', [type, key]);\n}\n/** `[Json]` Returns an Indexed property type for the given keys */\nexport function Index(type, key, options) {\n    // computed-type\n    if (IsRef(type) || IsRef(key)) {\n        const error = `Index types using Ref parameters require both Type and Key to be of TSchema`;\n        if (!IsSchema(type) || !IsSchema(key))\n            throw new TypeBoxError(error);\n        return Computed('Index', [type, key]);\n    }\n    // mapped-types\n    if (IsMappedResult(key))\n        return IndexFromMappedResult(type, key, options);\n    if (IsMappedKey(key))\n        return IndexFromMappedKey(type, key, options);\n    // prettier-ignore\n    return CreateType(IsSchema(key)\n        ? FromSchema(type, IndexPropertyKeys(key))\n        : FromSchema(type, key), options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { OptionalKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { UnionCreate } from './union-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\n// prettier-ignore\nfunction IsUnionOptional(types) {\n    return types.some(type => IsOptional(type));\n}\n// prettier-ignore\nfunction RemoveOptionalFromRest(types) {\n    return types.map(left => IsOptional(left) ? RemoveOptionalFromType(left) : left);\n}\n// prettier-ignore\nfunction RemoveOptionalFromType(T) {\n    return (Discard(T, [OptionalKind]));\n}\n// prettier-ignore\nfunction ResolveUnion(types, options) {\n    const isOptional = IsUnionOptional(types);\n    return (isOptional\n        ? Optional(UnionCreate(RemoveOptionalFromRest(types), options))\n        : UnionCreate(RemoveOptionalFromRest(types), options));\n}\n/** `[Json]` Creates an evaluated Union type */\nexport function UnionEvaluated(T, options) {\n    // prettier-ignore\n    return (T.length === 1 ? CreateType(T[0], options) :\n        T.length === 0 ? Never(options) :\n            ResolveUnion(T, options));\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\nexport function UnionCreate(T, options) {\n    return CreateType({ [Kind]: 'Union', anyOf: T }, options);\n}\n", "import { Never } from '../never/index.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { UnionCreate } from './union-create.mjs';\n/** `[Json]` Creates a Union type */\nexport function Union(types, options) {\n    // prettier-ignore\n    return (types.length === 0 ? Never(options) :\n        types.length === 1 ? CreateType(types[0], options) :\n            UnionCreate(types, options));\n}\n", "import { TemplateLiteralGenerate } from '../template-literal/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsLiteral, IsNumber, IsInteger } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromTemplateLiteral(templateLiteral) {\n    const keys = TemplateLiteralGenerate(templateLiteral);\n    return keys.map(key => key.toString());\n}\n// prettier-ignore\nfunction FromUnion(types) {\n    const result = [];\n    for (const type of types)\n        result.push(...IndexPropertyKeys(type));\n    return result;\n}\n// prettier-ignore\nfunction FromLiteral(literalValue) {\n    return ([literalValue.toString()] // TS 5.4 observes TLiteralValue as not having a toString()\n    );\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema */\n// prettier-ignore\nexport function IndexPropertyKeys(type) {\n    return [...new Set((IsTemplateLiteral(type) ? FromTemplateLiteral(type) :\n            IsUnion(type) ? FromUnion(type.anyOf) :\n                IsLiteral(type) ? FromLiteral(type.const) :\n                    IsNumber(type) ? ['[number]'] :\n                        IsInteger(type) ? ['[number]'] :\n                            []))];\n}\n", "import { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralFiniteError\n// ------------------------------------------------------------------\nexport class TemplateLiteralFiniteError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralFiniteCheck\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsNumberExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === '0' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === '[1-9][0-9]*');\n}\n// prettier-ignore\nfunction IsBooleanExpression(expression) {\n    return (expression.type === 'or' &&\n        expression.expr.length === 2 &&\n        expression.expr[0].type === 'const' &&\n        expression.expr[0].const === 'true' &&\n        expression.expr[1].type === 'const' &&\n        expression.expr[1].const === 'false');\n}\n// prettier-ignore\nfunction IsStringExpression(expression) {\n    return expression.type === 'const' && expression.const === '.*';\n}\n// ------------------------------------------------------------------\n// IsTemplateLiteralExpressionFinite\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IsTemplateLiteralExpressionFinite(expression) {\n    return (IsNumberExpression(expression) || IsStringExpression(expression) ? false :\n        IsBooleanExpression(expression) ? true :\n            (expression.type === 'and') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                (expression.type === 'or') ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) :\n                    (expression.type === 'const') ? true :\n                        (() => { throw new TemplateLiteralFiniteError(`Unknown expression type`); })());\n}\n/** Returns true if this TemplateLiteral resolves to a finite set of values */\nexport function IsTemplateLiteralFinite(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    return IsTemplateLiteralExpressionFinite(expression);\n}\n", "import { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralParserError\n// ------------------------------------------------------------------\nexport class TemplateLiteralParserError extends TypeBoxError {\n}\n// -------------------------------------------------------------------\n// Unescape\n//\n// Unescape for these control characters specifically. Note that this\n// function is only called on non union group content, and where we\n// still want to allow the user to embed control characters in that\n// content. For review.\n// -------------------------------------------------------------------\n// prettier-ignore\nfunction Unescape(pattern) {\n    return pattern\n        .replace(/\\\\\\$/g, '$')\n        .replace(/\\\\\\*/g, '*')\n        .replace(/\\\\\\^/g, '^')\n        .replace(/\\\\\\|/g, '|')\n        .replace(/\\\\\\(/g, '(')\n        .replace(/\\\\\\)/g, ')');\n}\n// -------------------------------------------------------------------\n// Control Characters\n// -------------------------------------------------------------------\nfunction IsNonEscaped(pattern, index, char) {\n    return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;\n}\nfunction IsOpenParen(pattern, index) {\n    return IsNonEscaped(pattern, index, '(');\n}\nfunction IsCloseParen(pattern, index) {\n    return IsNonEscaped(pattern, index, ')');\n}\nfunction IsSeparator(pattern, index) {\n    return IsNonEscaped(pattern, index, '|');\n}\n// -------------------------------------------------------------------\n// Control Groups\n// -------------------------------------------------------------------\nfunction IsGroup(pattern) {\n    if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))\n        return false;\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (count === 0 && index !== pattern.length - 1)\n            return false;\n    }\n    return true;\n}\n// prettier-ignore\nfunction InGroup(pattern) {\n    return pattern.slice(1, pattern.length - 1);\n}\n// prettier-ignore\nfunction IsPrecedenceOr(pattern) {\n    let count = 0;\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0)\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction IsPrecedenceAnd(pattern) {\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            return true;\n    }\n    return false;\n}\n// prettier-ignore\nfunction Or(pattern) {\n    let [count, start] = [0, 0];\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index))\n            count += 1;\n        if (IsCloseParen(pattern, index))\n            count -= 1;\n        if (IsSeparator(pattern, index) && count === 0) {\n            const range = pattern.slice(start, index);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            start = index + 1;\n        }\n    }\n    const range = pattern.slice(start);\n    if (range.length > 0)\n        expressions.push(TemplateLiteralParse(range));\n    if (expressions.length === 0)\n        return { type: 'const', const: '' };\n    if (expressions.length === 1)\n        return expressions[0];\n    return { type: 'or', expr: expressions };\n}\n// prettier-ignore\nfunction And(pattern) {\n    function Group(value, index) {\n        if (!IsOpenParen(value, index))\n            throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);\n        let count = 0;\n        for (let scan = index; scan < value.length; scan++) {\n            if (IsOpenParen(value, scan))\n                count += 1;\n            if (IsCloseParen(value, scan))\n                count -= 1;\n            if (count === 0)\n                return [index, scan];\n        }\n        throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);\n    }\n    function Range(pattern, index) {\n        for (let scan = index; scan < pattern.length; scan++) {\n            if (IsOpenParen(pattern, scan))\n                return [index, scan];\n        }\n        return [index, pattern.length];\n    }\n    const expressions = [];\n    for (let index = 0; index < pattern.length; index++) {\n        if (IsOpenParen(pattern, index)) {\n            const [start, end] = Group(pattern, index);\n            const range = pattern.slice(start, end + 1);\n            expressions.push(TemplateLiteralParse(range));\n            index = end;\n        }\n        else {\n            const [start, end] = Range(pattern, index);\n            const range = pattern.slice(start, end);\n            if (range.length > 0)\n                expressions.push(TemplateLiteralParse(range));\n            index = end - 1;\n        }\n    }\n    return ((expressions.length === 0) ? { type: 'const', const: '' } :\n        (expressions.length === 1) ? expressions[0] :\n            { type: 'and', expr: expressions });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParse\n// ------------------------------------------------------------------\n/** Parses a pattern and returns an expression tree */\nexport function TemplateLiteralParse(pattern) {\n    // prettier-ignore\n    return (IsGroup(pattern) ? TemplateLiteralParse(InGroup(pattern)) :\n        IsPrecedenceOr(pattern) ? Or(pattern) :\n            IsPrecedenceAnd(pattern) ? And(pattern) :\n                { type: 'const', const: Unescape(pattern) });\n}\n// ------------------------------------------------------------------\n// TemplateLiteralParseExact\n// ------------------------------------------------------------------\n/** Parses a pattern and strips forward and trailing ^ and $ */\nexport function TemplateLiteralParseExact(pattern) {\n    return TemplateLiteralParse(pattern.slice(1, pattern.length - 1));\n}\n", "import { IsTemplateLiteralExpressionFinite } from './finite.mjs';\nimport { TemplateLiteralParseExact } from './parse.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralGenerateError\n// ------------------------------------------------------------------\nexport class TemplateLiteralGenerateError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralExpressionGenerate\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* GenerateReduce(buffer) {\n    if (buffer.length === 1)\n        return yield* buffer[0];\n    for (const left of buffer[0]) {\n        for (const right of GenerateReduce(buffer.slice(1))) {\n            yield `${left}${right}`;\n        }\n    }\n}\n// prettier-ignore\nfunction* GenerateAnd(expression) {\n    return yield* GenerateReduce(expression.expr.map((expr) => [...TemplateLiteralExpressionGenerate(expr)]));\n}\n// prettier-ignore\nfunction* GenerateOr(expression) {\n    for (const expr of expression.expr)\n        yield* TemplateLiteralExpressionGenerate(expr);\n}\n// prettier-ignore\nfunction* GenerateConst(expression) {\n    return yield expression.const;\n}\nexport function* TemplateLiteralExpressionGenerate(expression) {\n    return expression.type === 'and'\n        ? yield* GenerateAnd(expression)\n        : expression.type === 'or'\n            ? yield* GenerateOr(expression)\n            : expression.type === 'const'\n                ? yield* GenerateConst(expression)\n                : (() => {\n                    throw new TemplateLiteralGenerateError('Unknown expression');\n                })();\n}\n/** Generates a tuple of strings from the given TemplateLiteral. Returns an empty tuple if infinite. */\nexport function TemplateLiteralGenerate(schema) {\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    // prettier-ignore\n    return (IsTemplateLiteralExpressionFinite(expression)\n        ? [...TemplateLiteralExpressionGenerate(expression)]\n        : []);\n}\n", "import { Literal } from '../literal/index.mjs';\nimport { Boolean } from '../boolean/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\n// ------------------------------------------------------------------\n// SyntaxParsers\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction* FromUnion(syntax) {\n    const trim = syntax.trim().replace(/\"|'/g, '');\n    return (trim === 'boolean' ? yield Boolean() :\n        trim === 'number' ? yield Number() :\n            trim === 'bigint' ? yield BigInt() :\n                trim === 'string' ? yield String() :\n                    yield (() => {\n                        const literals = trim.split('|').map((literal) => Literal(literal.trim()));\n                        return (literals.length === 0 ? Never() :\n                            literals.length === 1 ? literals[0] :\n                                UnionEvaluated(literals));\n                    })());\n}\n// prettier-ignore\nfunction* FromTerminal(syntax) {\n    if (syntax[1] !== '{') {\n        const L = Literal('$');\n        const R = FromSyntax(syntax.slice(1));\n        return yield* [L, ...R];\n    }\n    for (let i = 2; i < syntax.length; i++) {\n        if (syntax[i] === '}') {\n            const L = FromUnion(syntax.slice(2, i));\n            const R = FromSyntax(syntax.slice(i + 1));\n            return yield* [...L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n// prettier-ignore\nfunction* FromSyntax(syntax) {\n    for (let i = 0; i < syntax.length; i++) {\n        if (syntax[i] === '$') {\n            const L = Literal(syntax.slice(0, i));\n            const R = FromTerminal(syntax.slice(i));\n            return yield* [L, ...R];\n        }\n    }\n    yield Literal(syntax);\n}\n/** Parses TemplateLiteralSyntax and returns a tuple of TemplateLiteralKinds */\nexport function TemplateLiteralSyntax(syntax) {\n    return [...FromSyntax(syntax)];\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Literal type */\nexport function Literal(value, options) {\n    return CreateType({\n        [Kind]: 'Literal',\n        const: value,\n        type: typeof value,\n    }, options);\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/index.mjs';\n/** `[Json]` Creates a Boolean type */\nexport function Boolean(options) {\n    return CreateType({ [Kind]: 'Boolean', type: 'boolean' }, options);\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/index.mjs';\n/** `[JavaScript]` Creates a BigInt type */\nexport function BigInt(options) {\n    return CreateType({ [Kind]: 'BigInt', type: 'bigint' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Number type */\nexport function Number(options) {\n    return CreateType({ [Kind]: 'Number', type: 'number' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a String type */\nexport function String(options) {\n    return CreateType({ [Kind]: 'String', type: 'string' }, options);\n}\n", "import { PatternNumber, PatternString, PatternBoolean } from '../patterns/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTemplateLiteral, IsUnion, IsNumber, IsInteger, IsBigInt, IsString, IsLiteral, IsBoolean } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TemplateLiteralPatternError\n// ------------------------------------------------------------------\nexport class TemplateLiteralPatternError extends TypeBoxError {\n}\n// ------------------------------------------------------------------\n// TemplateLiteralPattern\n// ------------------------------------------------------------------\nfunction Escape(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n// prettier-ignore\nfunction Visit(schema, acc) {\n    return (IsTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) :\n        IsUnion(schema) ? `(${schema.anyOf.map((schema) => Visit(schema, acc)).join('|')})` :\n            IsNumber(schema) ? `${acc}${PatternNumber}` :\n                IsInteger(schema) ? `${acc}${PatternNumber}` :\n                    IsBigInt(schema) ? `${acc}${PatternNumber}` :\n                        IsString(schema) ? `${acc}${PatternString}` :\n                            IsLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` :\n                                IsBoolean(schema) ? `${acc}${PatternBoolean}` :\n                                    (() => { throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[Kind]}'`); })());\n}\nexport function TemplateLiteralPattern(kinds) {\n    return `^${kinds.map((schema) => Visit(schema, '')).join('')}\\$`;\n}\n", "import { UnionEvaluated } from '../union/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { TemplateLiteralGenerate } from './generate.mjs';\n/** Returns a Union from the given TemplateLiteral */\nexport function TemplateLiteralToUnion(schema) {\n    const R = TemplateLiteralGenerate(schema);\n    const L = R.map((S) => Literal(S));\n    return UnionEvaluated(L);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { TemplateLiteralSyntax } from './syntax.mjs';\nimport { TemplateLiteralPattern } from './pattern.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a TemplateLiteral type */\n// prettier-ignore\nexport function TemplateLiteral(unresolved, options) {\n    const pattern = IsString(unresolved)\n        ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved))\n        : TemplateLiteralPattern(unresolved);\n    return CreateType({ [Kind]: 'TemplateLiteral', type: 'string', pattern }, options);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { IndexPropertyKeys } from './indexed-property-keys.mjs';\nimport { Index } from './index.mjs';\n// prettier-ignore\nfunction FromProperties(type, properties, options) {\n    const result = {};\n    for (const K2 of Object.getOwnPropertyNames(properties)) {\n        result[K2] = Index(type, IndexPropertyKeys(properties[K2]), options);\n    }\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(type, mappedResult, options) {\n    return FromProperties(type, mappedResult.properties, options);\n}\n// prettier-ignore\nexport function IndexFromMappedResult(type, mappedResult, options) {\n    const properties = FromMappedResult(type, mappedResult, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates an Iterator type */\nexport function Iterator(items, options) {\n    return CreateType({ [Kind]: 'Iterator', type: 'Iterator', items }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsOptional } from '../guard/kind.mjs';\nfunction RequiredKeys(properties) {\n    const keys = [];\n    for (let key in properties) {\n        if (!IsOptional(properties[key]))\n            keys.push(key);\n    }\n    return keys;\n}\n/** `[Json]` Creates an Object type */\nfunction _Object(properties, options) {\n    const required = RequiredKeys(properties);\n    const schematic = required.length > 0 ? { [Kind]: 'Object', type: 'object', properties, required } : { [Kind]: 'Object', type: 'object', properties };\n    return CreateType(schematic, options);\n}\n/** `[Json]` Creates an Object type */\nexport var Object = _Object;\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Promise type */\nexport function Promise(item, options) {\n    return CreateType({ [Kind]: 'Promise', type: 'Promise', item }, options);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Readonly } from './readonly.mjs';\n// prettier-ignore\nfunction FromProperties(K, F) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Readonly(K[K2], F);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, F) {\n    return FromProperties(R.properties, F);\n}\n// prettier-ignore\nexport function ReadonlyFromMappedResult(R, F) {\n    const P = FromMappedResult(R, F);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { ReadonlyKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { ReadonlyFromMappedResult } from './readonly-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveReadonly(schema) {\n    return CreateType(Discard(schema, [ReadonlyKind]));\n}\nfunction AddReadonly(schema) {\n    return CreateType({ ...schema, [ReadonlyKind]: 'Readonly' });\n}\n// prettier-ignore\nfunction ReadonlyWithFlag(schema, F) {\n    return (F === false\n        ? RemoveReadonly(schema)\n        : AddReadonly(schema));\n}\n/** `[Json]` Creates a Readonly property */\nexport function Readonly(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? ReadonlyFromMappedResult(schema, F) : ReadonlyWithFlag(schema, F);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Tuple type */\nexport function Tuple(types, options) {\n    // prettier-ignore\n    return CreateType(types.length > 0 ?\n        { [Kind]: 'Tuple', type: 'array', items: types, additionalItems: false, minItems: types.length, maxItems: types.length } :\n        { [Kind]: 'Tuple', type: 'array', minItems: types.length, maxItems: types.length }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { OptionalKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { OptionalFromMappedResult } from './optional-from-mapped-result.mjs';\nimport { IsMappedResult } from '../guard/kind.mjs';\nfunction RemoveOptional(schema) {\n    return CreateType(Discard(schema, [OptionalKind]));\n}\nfunction AddOptional(schema) {\n    return CreateType({ ...schema, [OptionalKind]: 'Optional' });\n}\n// prettier-ignore\nfunction OptionalWithFlag(schema, F) {\n    return (F === false\n        ? RemoveOptional(schema)\n        : AddOptional(schema));\n}\n/** `[Json]` Creates a Optional property */\nexport function Optional(schema, enable) {\n    const F = enable ?? true;\n    return IsMappedResult(schema) ? OptionalFromMappedResult(schema, F) : OptionalWithFlag(schema, F);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsObject, IsSchema } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// IntersectCreate\n// ------------------------------------------------------------------\n// prettier-ignore\nexport function IntersectCreate(T, options = {}) {\n    const allObjects = T.every((schema) => IsObject(schema));\n    const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties)\n        ? { unevaluatedProperties: options.unevaluatedProperties }\n        : {};\n    return CreateType((options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects\n        ? { ...clonedUnevaluatedProperties, [Kind]: 'Intersect', type: 'object', allOf: T }\n        : { ...clonedUnevaluatedProperties, [Kind]: 'Intersect', allOf: T }), options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport { IntersectCreate } from './intersect-create.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n/** `[Json]` Creates an evaluated Intersect type */\nexport function Intersect(types, options) {\n    if (types.length === 1)\n        return CreateType(types[0], options);\n    if (types.length === 0)\n        return Never(options);\n    if (types.some((schema) => IsTransform(schema)))\n        throw new Error('Cannot intersect transform types');\n    return IntersectCreate(types, options);\n}\n", "import { TypeBoxError } from '../error/index.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Ref type. The referenced type must contain a $id */\nexport function Ref(...args) {\n    const [$ref, options] = typeof args[0] === 'string' ? [args[0], args[1]] : [args[0].$id, args[1]];\n    if (typeof $ref !== 'string')\n        throw new TypeBoxError('Ref: $ref must be a string');\n    return CreateType({ [Kind]: 'Ref', $ref }, options);\n}\n", "import { IntersectEvaluated } from '../intersect/index.mjs';\nimport { IndexFromPropertyKeys } from '../indexed/index.mjs';\nimport { KeyOfPropertyKeys } from '../keyof/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { SetDistinct } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsNever } from '../guard/kind.mjs';\n// prettier-ignore\nfunction CompositeKeys(T) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...KeyOfPropertyKeys(L));\n    return SetDistinct(Acc);\n}\n// prettier-ignore\nfunction FilterNever(T) {\n    return T.filter(L => !IsNever(L));\n}\n// prettier-ignore\nfunction CompositeProperty(T, K) {\n    const Acc = [];\n    for (const L of T)\n        Acc.push(...IndexFromPropertyKeys(L, [K]));\n    return FilterNever(Acc);\n}\n// prettier-ignore\nfunction CompositeProperties(T, K) {\n    const Acc = {};\n    for (const L of K) {\n        Acc[L] = IntersectEvaluated(CompositeProperty(T, L));\n    }\n    return Acc;\n}\n// prettier-ignore\nexport function Composite(T, options) {\n    const K = CompositeKeys(T);\n    const P = CompositeProperties(T, K);\n    const R = Object(P, options);\n    return R;\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { KeyOf } from './keyof.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(properties, options) {\n    const result = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(properties))\n        result[K2] = KeyOf(properties[K2], Clone(options));\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(mappedResult, options) {\n    return FromProperties(mappedResult.properties, options);\n}\n// prettier-ignore\nexport function KeyOfFromMappedResult(mappedResult, options) {\n    const properties = FromMappedResult(mappedResult, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\nimport { UnionEvaluated } from '../union/index.mjs';\nimport { KeyOfFromMappedResult } from './keyof-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsRef, IsComputed } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('KeyOf', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('KeyOf', [Ref($ref)]);\n}\n// prettier-ignore\nfunction KeyOfFromType(type, options) {\n    const propertyKeys = KeyOfPropertyKeys(type);\n    const propertyKeyTypes = KeyOfPropertyKeysToRest(propertyKeys);\n    const result = UnionEvaluated(propertyKeyTypes);\n    return CreateType(result, options);\n}\n// prettier-ignore\nexport function KeyOfPropertyKeysToRest(propertyKeys) {\n    return propertyKeys.map(L => L === '[number]' ? Number() : Literal(L));\n}\n/** `[Json]` Creates a KeyOf type */\nexport function KeyOf(type, options) {\n    return (IsComputed(type) ? FromComputed(type.target, type.parameters) : IsRef(type) ? FromRef(type.$ref) : IsMappedResult(type) ? KeyOfFromMappedResult(type, options) : KeyOfFromType(type, options));\n}\n", "import { SetUnionMany, SetIntersectMany } from '../sets/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple, IsArray, IsObject, IsRecord } from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromRest(types) {\n    const result = [];\n    for (const L of types)\n        result.push(KeyOfPropertyKeys(L));\n    return result;\n}\n// prettier-ignore\nfunction FromIntersect(types) {\n    const propertyKeysArray = FromRest(types);\n    const propertyKeys = SetUnionMany(propertyKeysArray);\n    return propertyKeys;\n}\n// prettier-ignore\nfunction FromUnion(types) {\n    const propertyKeysArray = FromRest(types);\n    const propertyKeys = SetIntersectMany(propertyKeysArray);\n    return propertyKeys;\n}\n// prettier-ignore\nfunction FromTuple(types) {\n    return types.map((_, indexer) => indexer.toString());\n}\n// prettier-ignore\nfunction FromArray(_) {\n    return (['[number]']);\n}\n// prettier-ignore\nfunction FromProperties(T) {\n    return (globalThis.Object.getOwnPropertyNames(T));\n}\n// ------------------------------------------------------------------\n// FromPatternProperties\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPatternProperties(patternProperties) {\n    if (!includePatternProperties)\n        return [];\n    const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);\n    return patternPropertyKeys.map(key => {\n        return (key[0] === '^' && key[key.length - 1] === '$')\n            ? key.slice(1, key.length - 1)\n            : key;\n    });\n}\n/** Returns a tuple of PropertyKeys derived from the given TSchema. */\n// prettier-ignore\nexport function KeyOfPropertyKeys(type) {\n    return (IsIntersect(type) ? FromIntersect(type.allOf) :\n        IsUnion(type) ? FromUnion(type.anyOf) :\n            IsTuple(type) ? FromTuple(type.items ?? []) :\n                IsArray(type) ? FromArray(type.items) :\n                    IsObject(type) ? FromProperties(type.properties) :\n                        IsRecord(type) ? FromPatternProperties(type.patternProperties) :\n                            []);\n}\n// ----------------------------------------------------------------\n// KeyOfPattern\n// ----------------------------------------------------------------\nlet includePatternProperties = false;\n/** Returns a regular expression pattern derived from the given TSchema */\nexport function KeyOfPattern(schema) {\n    includePatternProperties = true;\n    const keys = KeyOfPropertyKeys(schema);\n    includePatternProperties = false;\n    const pattern = keys.map((key) => `(${key})`);\n    return `^(${pattern.join('|')})$`;\n}\n", "import { IndexFromPropertyKeys } from '../indexed/indexed.mjs';\nimport { KeyOfPropertyKeys } from './keyof-property-keys.mjs';\n/**\n * `[Utility]` Resolves an array of keys and schemas from the given schema. This method is faster\n * than obtaining the keys and resolving each individually via indexing. This method was written\n * accellerate Intersect and Union encoding.\n */\nexport function KeyOfPropertyEntries(schema) {\n    const keys = KeyOfPropertyKeys(schema);\n    const schemas = IndexFromPropertyKeys(schema, keys);\n    return keys.map((_, index) => [keys[index], schemas[index]]);\n}\n", "import { Any } from '../any/index.mjs';\nimport { BigInt } from '../bigint/index.mjs';\nimport { Date } from '../date/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Null } from '../null/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Symbol } from '../symbol/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Undefined } from '../undefined/index.mjs';\nimport { Uint8Array } from '../uint8array/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { CreateType } from '../create/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsNumber, IsBigInt, IsUint8Array, IsDate, IsIterator, IsObject, IsAsyncIterator, IsFunction, IsUndefined, IsNull, IsSymbol, IsBoolean, IsString } from '../guard/value.mjs';\n// prettier-ignore\nfunction FromArray(T) {\n    return T.map(L => FromValue(L, false));\n}\n// prettier-ignore\nfunction FromProperties(value) {\n    const Acc = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(value))\n        Acc[K] = Readonly(FromValue(value[K], false));\n    return Acc;\n}\nfunction ConditionalReadonly(T, root) {\n    return (root === true ? T : Readonly(T));\n}\n// prettier-ignore\nfunction FromValue(value, root) {\n    return (IsAsyncIterator(value) ? ConditionalReadonly(Any(), root) :\n        IsIterator(value) ? ConditionalReadonly(Any(), root) :\n            IsArray(value) ? Readonly(Tuple(FromArray(value))) :\n                IsUint8Array(value) ? Uint8Array() :\n                    IsDate(value) ? Date() :\n                        IsObject(value) ? ConditionalReadonly(Object(FromProperties(value)), root) :\n                            IsFunction(value) ? ConditionalReadonly(FunctionType([], Unknown()), root) :\n                                IsUndefined(value) ? Undefined() :\n                                    IsNull(value) ? Null() :\n                                        IsSymbol(value) ? Symbol() :\n                                            IsBigInt(value) ? BigInt() :\n                                                IsNumber(value) ? Literal(value) :\n                                                    IsBoolean(value) ? Literal(value) :\n                                                        IsString(value) ? Literal(value) :\n                                                            Object({}));\n}\n/** `[JavaScript]` Creates a readonly const type from the given value. */\nexport function Const(T, options) {\n    return CreateType(FromValue(T, true), options);\n}\n", "import { Kind } from '../symbols/index.mjs';\nimport { CreateType } from '../create/type.mjs';\n/** `[JavaScript]` Creates a Date type */\nexport function Date(options) {\n    return CreateType({ [Kind]: 'Date', type: 'Date' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Null type */\nexport function Null(options) {\n    return CreateType({ [Kind]: 'Null', type: 'null' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Symbol type */\nexport function Symbol(options) {\n    return CreateType({ [Kind]: 'Symbol', type: 'symbol' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Undefined type */\nexport function Undefined(options) {\n    return CreateType({ [Kind]: 'Undefined', type: 'undefined' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Uint8Array type */\nexport function Uint8Array(options) {\n    return CreateType({ [Kind]: 'Uint8Array', type: 'Uint8Array' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Unknown type */\nexport function Unknown(options) {\n    return CreateType({ [Kind]: 'Unknown' }, options);\n}\n", "import { Tuple } from '../tuple/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\nexport function ConstructorParameters(schema, options) {\n    return (KindGuard.IsConstructor(schema) ? Tuple(schema.parameters, options) : Never(options));\n}\n", "import { Literal } from '../literal/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n/** `[Json]` Creates a Enum type */\nexport function Enum(item, options) {\n    if (IsUndefined(item))\n        throw new Error('Enum undefined or empty');\n    const values1 = globalThis.Object.getOwnPropertyNames(item)\n        .filter((key) => isNaN(key))\n        .map((key) => item[key]);\n    const values2 = [...new Set(values1)];\n    const anyOf = values2.map((value) => Literal(value));\n    return Union(anyOf, { ...options, [Hint]: 'Enum' });\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Exclude } from './exclude.mjs';\n// prettier-ignore\nfunction FromProperties(P, U) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Exclude(P[K2], U);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExcludeFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { ExcludeFromMappedResult } from './exclude-from-mapped-result.mjs';\nimport { ExcludeFromTemplateLiteral } from './exclude-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExcludeRest(L, R) {\n    const excluded = L.filter((inner) => ExtendsCheck(inner, R) === ExtendsResult.False);\n    return excluded.length === 1 ? excluded[0] : Union(excluded);\n}\n/** `[Json]` Constructs a type by excluding from unionType all union members that are assignable to excludedMembers */\nexport function Exclude(L, R, options = {}) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CreateType(ExcludeFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CreateType(ExcludeFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CreateType(IsUnion(L) ? ExcludeRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? Never() : L, options);\n}\n", "import { Any } from '../any/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nimport { PatternNumberExact, PatternStringExact } from '../patterns/index.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { TypeBoxError } from '../error/index.mjs';\nimport { TypeGuard, ValueGuard } from '../guard/index.mjs';\nexport class ExtendsResolverError extends TypeBoxError {\n}\nexport var ExtendsResult;\n(function (ExtendsResult) {\n    ExtendsResult[ExtendsResult[\"Union\"] = 0] = \"Union\";\n    ExtendsResult[ExtendsResult[\"True\"] = 1] = \"True\";\n    ExtendsResult[ExtendsResult[\"False\"] = 2] = \"False\";\n})(ExtendsResult || (ExtendsResult = {}));\n// ------------------------------------------------------------------\n// IntoBooleanResult\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IntoBooleanResult(result) {\n    return result === ExtendsResult.False ? result : ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Throw\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Throw(message) {\n    throw new ExtendsResolverError(message);\n}\n// ------------------------------------------------------------------\n// StructuralRight\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsStructuralRight(right) {\n    return (TypeGuard.IsNever(right) ||\n        TypeGuard.IsIntersect(right) ||\n        TypeGuard.IsUnion(right) ||\n        TypeGuard.IsUnknown(right) ||\n        TypeGuard.IsAny(right));\n}\n// prettier-ignore\nfunction StructuralRight(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                    TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                        Throw('StructuralRight'));\n}\n// ------------------------------------------------------------------\n// Any\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAnyRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromAny(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        (TypeGuard.IsUnion(right) && right.anyOf.some((schema) => TypeGuard.IsAny(schema) || TypeGuard.IsUnknown(schema))) ? ExtendsResult.True :\n            TypeGuard.IsUnion(right) ? ExtendsResult.Union :\n                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                    TypeGuard.IsAny(right) ? ExtendsResult.True :\n                        ExtendsResult.Union);\n}\n// ------------------------------------------------------------------\n// Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromArrayRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union :\n            TypeGuard.IsNever(left) ? ExtendsResult.True :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromArray(left, right) {\n    return (TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            !TypeGuard.IsArray(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// AsyncIterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromAsyncIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsAsyncIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// BigInt\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBigInt(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBigInt(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Boolean\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromBooleanRight(left, right) {\n    return (TypeGuard.IsLiteralBoolean(left) ? ExtendsResult.True :\n        TypeGuard.IsBoolean(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromBoolean(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsBoolean(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Constructor\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromConstructor(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsConstructor(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Date\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromDate(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsDate(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Function\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromFunction(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsFunction(right) ? ExtendsResult.False :\n                left.parameters.length > right.parameters.length ? ExtendsResult.False :\n                    (!left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === ExtendsResult.True)) ? ExtendsResult.False :\n                        IntoBooleanResult(Visit(left.returns, right.returns)));\n}\n// ------------------------------------------------------------------\n// Integer\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntegerRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsNumber(left.const) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromInteger(left, right) {\n    return (TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Intersect\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIntersectRight(left, right) {\n    return right.allOf.every((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromIntersect(left, right) {\n    return left.allOf.some((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Iterator\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromIterator(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        !TypeGuard.IsIterator(right) ? ExtendsResult.False :\n            IntoBooleanResult(Visit(left.items, right.items)));\n}\n// ------------------------------------------------------------------\n// Literal\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromLiteral(left, right) {\n    return (TypeGuard.IsLiteral(right) && right.const === left.const ? ExtendsResult.True :\n        IsStructuralRight(right) ? StructuralRight(left, right) :\n            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Never\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNeverRight(left, right) {\n    return ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromNever(left, right) {\n    return ExtendsResult.True;\n}\n// ------------------------------------------------------------------\n// Not\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction UnwrapTNot(schema) {\n    let [current, depth] = [schema, 0];\n    while (true) {\n        if (!TypeGuard.IsNot(current))\n            break;\n        current = current.not;\n        depth += 1;\n    }\n    return depth % 2 === 0 ? current : Unknown();\n}\n// prettier-ignore\nfunction FromNot(left, right) {\n    // TypeScript has no concept of negated types, and attempts to correctly check the negated\n    // type at runtime would put TypeBox at odds with TypeScripts ability to statically infer\n    // the type. Instead we unwrap to either unknown or T and continue evaluating.\n    // prettier-ignore\n    return (TypeGuard.IsNot(left) ? Visit(UnwrapTNot(left), right) :\n        TypeGuard.IsNot(right) ? Visit(left, UnwrapTNot(right)) :\n            Throw('Invalid fallthrough for Not'));\n}\n// ------------------------------------------------------------------\n// Null\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNull(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsNull(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Number\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromNumberRight(left, right) {\n    return (TypeGuard.IsLiteralNumber(left) ? ExtendsResult.True :\n        TypeGuard.IsNumber(left) || TypeGuard.IsInteger(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromNumber(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsInteger(right) || TypeGuard.IsNumber(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Object\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsObjectPropertyCount(schema, count) {\n    return Object.getOwnPropertyNames(schema.properties).length === count;\n}\n// prettier-ignore\nfunction IsObjectStringLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectSymbolLike(schema) {\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'description' in schema.properties && TypeGuard.IsUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && ((TypeGuard.IsString(schema.properties.description.anyOf[0]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[1])) || (TypeGuard.IsString(schema.properties.description.anyOf[1]) &&\n        TypeGuard.IsUndefined(schema.properties.description.anyOf[0]))));\n}\n// prettier-ignore\nfunction IsObjectNumberLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBooleanLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectBigIntLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectDateLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectUint8ArrayLike(schema) {\n    return IsObjectArrayLike(schema);\n}\n// prettier-ignore\nfunction IsObjectFunctionLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectConstructorLike(schema) {\n    return IsObjectPropertyCount(schema, 0);\n}\n// prettier-ignore\nfunction IsObjectArrayLike(schema) {\n    const length = Number();\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'length' in schema.properties && IntoBooleanResult(Visit(schema.properties['length'], length)) === ExtendsResult.True);\n}\n// prettier-ignore\nfunction IsObjectPromiseLike(schema) {\n    const then = FunctionType([Any()], Any());\n    return IsObjectPropertyCount(schema, 0) || (IsObjectPropertyCount(schema, 1) && 'then' in schema.properties && IntoBooleanResult(Visit(schema.properties['then'], then)) === ExtendsResult.True);\n}\n// ------------------------------------------------------------------\n// Property\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Property(left, right) {\n    return (Visit(left, right) === ExtendsResult.False ? ExtendsResult.False :\n        TypeGuard.IsOptional(left) && !TypeGuard.IsOptional(right) ? ExtendsResult.False :\n            ExtendsResult.True);\n}\n// prettier-ignore\nfunction FromObjectRight(left, right) {\n    return (TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n        TypeGuard.IsAny(left) ? ExtendsResult.Union : (TypeGuard.IsNever(left) ||\n            (TypeGuard.IsLiteralString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsLiteralNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsLiteralBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsBigInt(left) && IsObjectBigIntLike(right)) ||\n            (TypeGuard.IsString(left) && IsObjectStringLike(right)) ||\n            (TypeGuard.IsSymbol(left) && IsObjectSymbolLike(right)) ||\n            (TypeGuard.IsNumber(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsInteger(left) && IsObjectNumberLike(right)) ||\n            (TypeGuard.IsBoolean(left) && IsObjectBooleanLike(right)) ||\n            (TypeGuard.IsUint8Array(left) && IsObjectUint8ArrayLike(right)) ||\n            (TypeGuard.IsDate(left) && IsObjectDateLike(right)) ||\n            (TypeGuard.IsConstructor(left) && IsObjectConstructorLike(right)) ||\n            (TypeGuard.IsFunction(left) && IsObjectFunctionLike(right))) ? ExtendsResult.True :\n            (TypeGuard.IsRecord(left) && TypeGuard.IsString(RecordKey(left))) ? (() => {\n                // When expressing a Record with literal key values, the Record is converted into a Object with\n                // the Hint assigned as `Record`. This is used to invert the extends logic.\n                return right[Hint] === 'Record' ? ExtendsResult.True : ExtendsResult.False;\n            })() :\n                (TypeGuard.IsRecord(left) && TypeGuard.IsNumber(RecordKey(left))) ? (() => {\n                    return IsObjectPropertyCount(right, 0) ? ExtendsResult.True : ExtendsResult.False;\n                })() :\n                    ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromObject(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n            !TypeGuard.IsObject(right) ? ExtendsResult.False :\n                (() => {\n                    for (const key of Object.getOwnPropertyNames(right.properties)) {\n                        if (!(key in left.properties) && !TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.False;\n                        }\n                        if (TypeGuard.IsOptional(right.properties[key])) {\n                            return ExtendsResult.True;\n                        }\n                        if (Property(left.properties[key], right.properties[key]) === ExtendsResult.False) {\n                            return ExtendsResult.False;\n                        }\n                    }\n                    return ExtendsResult.True;\n                })());\n}\n// ------------------------------------------------------------------\n// Promise\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromPromise(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectPromiseLike(right) ? ExtendsResult.True :\n            !TypeGuard.IsPromise(right) ? ExtendsResult.False :\n                IntoBooleanResult(Visit(left.item, right.item)));\n}\n// ------------------------------------------------------------------\n// Record\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordKey(schema) {\n    return (PatternNumberExact in schema.patternProperties ? Number() :\n        PatternStringExact in schema.patternProperties ? String() :\n            Throw('Unknown record key pattern'));\n}\n// prettier-ignore\nfunction RecordValue(schema) {\n    return (PatternNumberExact in schema.patternProperties ? schema.patternProperties[PatternNumberExact] :\n        PatternStringExact in schema.patternProperties ? schema.patternProperties[PatternStringExact] :\n            Throw('Unable to get record value schema'));\n}\n// prettier-ignore\nfunction FromRecordRight(left, right) {\n    const [Key, Value] = [RecordKey(right), RecordValue(right)];\n    return ((TypeGuard.IsLiteralString(left) && TypeGuard.IsNumber(Key) && IntoBooleanResult(Visit(left, Value)) === ExtendsResult.True) ? ExtendsResult.True :\n        TypeGuard.IsUint8Array(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n            TypeGuard.IsString(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                TypeGuard.IsArray(left) && TypeGuard.IsNumber(Key) ? Visit(left, Value) :\n                    TypeGuard.IsObject(left) ? (() => {\n                        for (const key of Object.getOwnPropertyNames(left.properties)) {\n                            if (Property(Value, left.properties[key]) === ExtendsResult.False) {\n                                return ExtendsResult.False;\n                            }\n                        }\n                        return ExtendsResult.True;\n                    })() :\n                        ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromRecord(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            !TypeGuard.IsRecord(right) ? ExtendsResult.False :\n                Visit(RecordValue(left), RecordValue(right)));\n}\n// ------------------------------------------------------------------\n// RegExp\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromRegExp(left, right) {\n    // Note: RegExp types evaluate as strings, not RegExp objects.\n    // Here we remap either into string and continue evaluating.\n    const L = TypeGuard.IsRegExp(left) ? String() : left;\n    const R = TypeGuard.IsRegExp(right) ? String() : right;\n    return Visit(L, R);\n}\n// ------------------------------------------------------------------\n// String\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromStringRight(left, right) {\n    return (TypeGuard.IsLiteral(left) && ValueGuard.IsString(left.const) ? ExtendsResult.True :\n        TypeGuard.IsString(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromString(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsString(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Symbol\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromSymbol(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsSymbol(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// TemplateLiteral\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromTemplateLiteral(left, right) {\n    // TemplateLiteral types are resolved to either unions for finite expressions or string\n    // for infinite expressions. Here we call to TemplateLiteralResolver to resolve for\n    // either type and continue evaluating.\n    return (TypeGuard.IsTemplateLiteral(left) ? Visit(TemplateLiteralToUnion(left), right) :\n        TypeGuard.IsTemplateLiteral(right) ? Visit(left, TemplateLiteralToUnion(right)) :\n            Throw('Invalid fallthrough for TemplateLiteral'));\n}\n// ------------------------------------------------------------------\n// Tuple\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction IsArrayOfTuple(left, right) {\n    return (TypeGuard.IsArray(right) &&\n        left.items !== undefined &&\n        left.items.every((schema) => Visit(schema, right.items) === ExtendsResult.True));\n}\n// prettier-ignore\nfunction FromTupleRight(left, right) {\n    return (TypeGuard.IsNever(left) ? ExtendsResult.True :\n        TypeGuard.IsUnknown(left) ? ExtendsResult.False :\n            TypeGuard.IsAny(left) ? ExtendsResult.Union :\n                ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromTuple(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True :\n            TypeGuard.IsArray(right) && IsArrayOfTuple(left, right) ? ExtendsResult.True :\n                !TypeGuard.IsTuple(right) ? ExtendsResult.False :\n                    (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) || (!ValueGuard.IsUndefined(left.items) && ValueGuard.IsUndefined(right.items)) ? ExtendsResult.False :\n                        (ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items)) ? ExtendsResult.True :\n                            left.items.every((schema, index) => Visit(schema, right.items[index]) === ExtendsResult.True) ? ExtendsResult.True :\n                                ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Uint8Array\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUint8Array(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsUint8Array(right) ? ExtendsResult.True :\n                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Undefined\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUndefined(left, right) {\n    return (IsStructuralRight(right) ? StructuralRight(left, right) :\n        TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n            TypeGuard.IsRecord(right) ? FromRecordRight(left, right) :\n                TypeGuard.IsVoid(right) ? FromVoidRight(left, right) :\n                    TypeGuard.IsUndefined(right) ? ExtendsResult.True :\n                        ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Union\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnionRight(left, right) {\n    return right.anyOf.some((schema) => Visit(left, schema) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// prettier-ignore\nfunction FromUnion(left, right) {\n    return left.anyOf.every((schema) => Visit(schema, right) === ExtendsResult.True)\n        ? ExtendsResult.True\n        : ExtendsResult.False;\n}\n// ------------------------------------------------------------------\n// Unknown\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromUnknownRight(left, right) {\n    return ExtendsResult.True;\n}\n// prettier-ignore\nfunction FromUnknown(left, right) {\n    return (TypeGuard.IsNever(right) ? FromNeverRight(left, right) :\n        TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n            TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsString(right) ? FromStringRight(left, right) :\n                        TypeGuard.IsNumber(right) ? FromNumberRight(left, right) :\n                            TypeGuard.IsInteger(right) ? FromIntegerRight(left, right) :\n                                TypeGuard.IsBoolean(right) ? FromBooleanRight(left, right) :\n                                    TypeGuard.IsArray(right) ? FromArrayRight(left, right) :\n                                        TypeGuard.IsTuple(right) ? FromTupleRight(left, right) :\n                                            TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                                                TypeGuard.IsUnknown(right) ? ExtendsResult.True :\n                                                    ExtendsResult.False);\n}\n// ------------------------------------------------------------------\n// Void\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromVoidRight(left, right) {\n    return (TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n        TypeGuard.IsUndefined(left) ? ExtendsResult.True :\n            ExtendsResult.False);\n}\n// prettier-ignore\nfunction FromVoid(left, right) {\n    return (TypeGuard.IsIntersect(right) ? FromIntersectRight(left, right) :\n        TypeGuard.IsUnion(right) ? FromUnionRight(left, right) :\n            TypeGuard.IsUnknown(right) ? FromUnknownRight(left, right) :\n                TypeGuard.IsAny(right) ? FromAnyRight(left, right) :\n                    TypeGuard.IsObject(right) ? FromObjectRight(left, right) :\n                        TypeGuard.IsVoid(right) ? ExtendsResult.True :\n                            ExtendsResult.False);\n}\n// prettier-ignore\nfunction Visit(left, right) {\n    return (\n    // resolvable\n    (TypeGuard.IsTemplateLiteral(left) || TypeGuard.IsTemplateLiteral(right)) ? FromTemplateLiteral(left, right) :\n        (TypeGuard.IsRegExp(left) || TypeGuard.IsRegExp(right)) ? FromRegExp(left, right) :\n            (TypeGuard.IsNot(left) || TypeGuard.IsNot(right)) ? FromNot(left, right) :\n                // standard\n                TypeGuard.IsAny(left) ? FromAny(left, right) :\n                    TypeGuard.IsArray(left) ? FromArray(left, right) :\n                        TypeGuard.IsBigInt(left) ? FromBigInt(left, right) :\n                            TypeGuard.IsBoolean(left) ? FromBoolean(left, right) :\n                                TypeGuard.IsAsyncIterator(left) ? FromAsyncIterator(left, right) :\n                                    TypeGuard.IsConstructor(left) ? FromConstructor(left, right) :\n                                        TypeGuard.IsDate(left) ? FromDate(left, right) :\n                                            TypeGuard.IsFunction(left) ? FromFunction(left, right) :\n                                                TypeGuard.IsInteger(left) ? FromInteger(left, right) :\n                                                    TypeGuard.IsIntersect(left) ? FromIntersect(left, right) :\n                                                        TypeGuard.IsIterator(left) ? FromIterator(left, right) :\n                                                            TypeGuard.IsLiteral(left) ? FromLiteral(left, right) :\n                                                                TypeGuard.IsNever(left) ? FromNever(left, right) :\n                                                                    TypeGuard.IsNull(left) ? FromNull(left, right) :\n                                                                        TypeGuard.IsNumber(left) ? FromNumber(left, right) :\n                                                                            TypeGuard.IsObject(left) ? FromObject(left, right) :\n                                                                                TypeGuard.IsRecord(left) ? FromRecord(left, right) :\n                                                                                    TypeGuard.IsString(left) ? FromString(left, right) :\n                                                                                        TypeGuard.IsSymbol(left) ? FromSymbol(left, right) :\n                                                                                            TypeGuard.IsTuple(left) ? FromTuple(left, right) :\n                                                                                                TypeGuard.IsPromise(left) ? FromPromise(left, right) :\n                                                                                                    TypeGuard.IsUint8Array(left) ? FromUint8Array(left, right) :\n                                                                                                        TypeGuard.IsUndefined(left) ? FromUndefined(left, right) :\n                                                                                                            TypeGuard.IsUnion(left) ? FromUnion(left, right) :\n                                                                                                                TypeGuard.IsUnknown(left) ? FromUnknown(left, right) :\n                                                                                                                    TypeGuard.IsVoid(left) ? FromVoid(left, right) :\n                                                                                                                        Throw(`Unknown left type operand '${left[Kind]}'`));\n}\nexport function ExtendsCheck(left, right) {\n    return Visit(left, right);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Extends } from './extends.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromPropertyKey(K, U, L, R, options) {\n    return {\n        [K]: Extends(Literal(K), U, L, R, Clone(options))\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(K, U, L, R, options) {\n    return K.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(LK, U, L, R, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(K, U, L, R, options) {\n    return FromPropertyKeys(K.keys, U, L, R, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedKey(T, U, L, R, options) {\n    const P = FromMappedKey(T, U, L, R, options);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Union } from '../union/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from './extends-check.mjs';\nimport { ExtendsFromMappedKey } from './extends-from-mapped-key.mjs';\nimport { ExtendsFromMappedResult } from './extends-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult } from '../guard/kind.mjs';\n// prettier-ignore\nfunction ExtendsResolve(left, right, trueType, falseType) {\n    const R = ExtendsCheck(left, right);\n    return (R === ExtendsResult.Union ? Union([trueType, falseType]) :\n        R === ExtendsResult.True ? trueType :\n            falseType);\n}\n/** `[Json]` Creates a Conditional type */\nexport function Extends(L, R, T, F, options) {\n    // prettier-ignore\n    return (IsMappedResult(L) ? ExtendsFromMappedResult(L, R, T, F, options) :\n        IsMappedKey(L) ? CreateType(ExtendsFromMappedKey(L, R, T, F, options)) :\n            CreateType(ExtendsResolve(L, R, T, F), options));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Extends } from './extends.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(P, Right, True, False, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extends(P[K2], Right, True, False, Clone(options));\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(Left, Right, True, False, options) {\n    return FromProperties(Left.properties, Right, True, False, options);\n}\n// prettier-ignore\nexport function ExtendsFromMappedResult(Left, Right, True, False, options) {\n    const P = FromMappedResult(Left, Right, True, False, options);\n    return MappedResult(P);\n}\n", "import { Kind } from '../symbols/index.mjs';\n/** Fast undefined check used for properties of type undefined */\nfunction Intersect(schema) {\n    return schema.allOf.every((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Union(schema) {\n    return schema.anyOf.some((schema) => ExtendsUndefinedCheck(schema));\n}\nfunction Not(schema) {\n    return !ExtendsUndefinedCheck(schema.not);\n}\n/** Fast undefined check used for properties of type undefined */\n// prettier-ignore\nexport function ExtendsUndefinedCheck(schema) {\n    return (schema[Kind] === 'Intersect' ? Intersect(schema) :\n        schema[Kind] === 'Union' ? Union(schema) :\n            schema[Kind] === 'Not' ? Not(schema) :\n                schema[Kind] === 'Undefined' ? true :\n                    false);\n}\n", "import { Exclude } from './exclude.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExcludeFromTemplateLiteral(L, R) {\n    return Exclude(TemplateLiteralToUnion(L), R);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Extract } from './extract.mjs';\n// prettier-ignore\nfunction FromProperties(P, T) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Extract(P[K2], T);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, T) {\n    return FromProperties(R.properties, T);\n}\n// prettier-ignore\nexport function ExtractFromMappedResult(R, T) {\n    const P = FromMappedResult(R, T);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { ExtendsCheck, ExtendsResult } from '../extends/index.mjs';\nimport { ExtractFromMappedResult } from './extract-from-mapped-result.mjs';\nimport { ExtractFromTemplateLiteral } from './extract-from-template-literal.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedResult, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\nfunction ExtractRest(L, R) {\n    const extracted = L.filter((inner) => ExtendsCheck(inner, R) !== ExtendsResult.False);\n    return extracted.length === 1 ? extracted[0] : Union(extracted);\n}\n/** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\nexport function Extract(L, R, options) {\n    // overloads\n    if (IsTemplateLiteral(L))\n        return CreateType(ExtractFromTemplateLiteral(L, R), options);\n    if (IsMappedResult(L))\n        return CreateType(ExtractFromMappedResult(L, R), options);\n    // prettier-ignore\n    return CreateType(IsUnion(L) ? ExtractRest(L.anyOf, R) :\n        ExtendsCheck(L, R) !== ExtendsResult.False ? L : Never(), options);\n}\n", "import { Extract } from './extract.mjs';\nimport { TemplateLiteralToUnion } from '../template-literal/index.mjs';\nexport function ExtractFromTemplateLiteral(L, R) {\n    return Extract(TemplateLiteralToUnion(L), R);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\nexport function InstanceType(schema, options) {\n    return (KindGuard.IsConstructor(schema) ? CreateType(schema.returns, options) : Never(options));\n}\n", "import { CloneType } from '../clone/type.mjs';\nimport { Unknown } from '../unknown/index.mjs';\nimport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nimport { Readonly } from '../readonly/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Record, RecordKey, RecordValue } from '../record/index.mjs';\nimport * as ValueGuard from '../guard/value.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromConstructor(args, type) {\n    type.parameters = FromTypes(args, type.parameters);\n    type.returns = FromType(args, type.returns);\n    return type;\n}\n// prettier-ignore\nfunction FromFunction(args, type) {\n    type.parameters = FromTypes(args, type.parameters);\n    type.returns = FromType(args, type.returns);\n    return type;\n}\n// prettier-ignore\nfunction FromIntersect(args, type) {\n    type.allOf = FromTypes(args, type.allOf);\n    return type;\n}\n// prettier-ignore\nfunction FromUnion(args, type) {\n    type.anyOf = FromTypes(args, type.anyOf);\n    return type;\n}\n// prettier-ignore\nfunction FromTuple(args, type) {\n    if (ValueGuard.IsUndefined(type.items))\n        return type;\n    type.items = FromTypes(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromArray(args, type) {\n    type.items = FromType(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromAsyncIterator(args, type) {\n    type.items = FromType(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromIterator(args, type) {\n    type.items = FromType(args, type.items);\n    return type;\n}\n// prettier-ignore\nfunction FromPromise(args, type) {\n    type.item = FromType(args, type.item);\n    return type;\n}\n// prettier-ignore\nfunction FromObject(args, type) {\n    const mappedProperties = FromProperties(args, type.properties);\n    return { ...type, ...Object(mappedProperties) }; // retain options\n}\n// prettier-ignore\nfunction FromRecord(args, type) {\n    const mappedKey = FromType(args, RecordKey(type));\n    const mappedValue = FromType(args, RecordValue(type));\n    const result = Record(mappedKey, mappedValue);\n    return { ...type, ...result }; // retain options\n}\n// prettier-ignore\nfunction FromArgument(args, argument) {\n    return argument.index in args ? args[argument.index] : Unknown();\n}\n// prettier-ignore\nfunction FromProperty(args, type) {\n    const isReadonly = KindGuard.IsReadonly(type);\n    const isOptional = KindGuard.IsOptional(type);\n    const mapped = FromType(args, type);\n    return (isReadonly && isOptional ? ReadonlyOptional(mapped) :\n        isReadonly && !isOptional ? Readonly(mapped) :\n            !isReadonly && isOptional ? Optional(mapped) :\n                mapped);\n}\n// prettier-ignore\nfunction FromProperties(args, properties) {\n    return globalThis.Object.getOwnPropertyNames(properties).reduce((result, key) => {\n        return { ...result, [key]: FromProperty(args, properties[key]) };\n    }, {});\n}\n// prettier-ignore\nexport function FromTypes(args, types) {\n    return types.map(type => FromType(args, type));\n}\n// prettier-ignore\nfunction FromType(args, type) {\n    return (KindGuard.IsConstructor(type) ? FromConstructor(args, type) :\n        KindGuard.IsFunction(type) ? FromFunction(args, type) :\n            KindGuard.IsIntersect(type) ? FromIntersect(args, type) :\n                KindGuard.IsUnion(type) ? FromUnion(args, type) :\n                    KindGuard.IsTuple(type) ? FromTuple(args, type) :\n                        KindGuard.IsArray(type) ? FromArray(args, type) :\n                            KindGuard.IsAsyncIterator(type) ? FromAsyncIterator(args, type) :\n                                KindGuard.IsIterator(type) ? FromIterator(args, type) :\n                                    KindGuard.IsPromise(type) ? FromPromise(args, type) :\n                                        KindGuard.IsObject(type) ? FromObject(args, type) :\n                                            KindGuard.IsRecord(type) ? FromRecord(args, type) :\n                                                KindGuard.IsArgument(type) ? FromArgument(args, type) :\n                                                    type);\n}\n/** `[JavaScript]` Instantiates a type with the given parameters */\n// prettier-ignore\nexport function Instantiate(type, args) {\n    return FromType(args, CloneType(type));\n}\n", "import { Readonly } from '../readonly/index.mjs';\nimport { Optional } from '../optional/index.mjs';\n/** `[Json]` Creates a Readonly and Optional property */\nexport function ReadonlyOptional(schema) {\n    return Readonly(Optional(schema));\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Number } from '../number/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { String } from '../string/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { IsTemplateLiteralFinite } from '../template-literal/index.mjs';\nimport { PatternStringExact, PatternNumberExact, PatternNeverExact } from '../patterns/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsInteger, IsLiteral, IsAny, IsBoolean, IsNever, IsNumber, IsString, IsRegExp, IsTemplateLiteral, IsUnion } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// RecordCreateFromPattern\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromPattern(pattern, T, options) {\n    return CreateType({ [Kind]: 'Record', type: 'object', patternProperties: { [pattern]: T } }, options);\n}\n// ------------------------------------------------------------------\n// RecordCreateFromKeys\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromKeys(K, T, options) {\n    const result = {};\n    for (const K2 of K)\n        result[K2] = T;\n    return Object(result, { ...options, [Hint]: 'Record' });\n}\n// prettier-ignore\nfunction FromTemplateLiteralKey(K, T, options) {\n    return (IsTemplateLiteralFinite(K)\n        ? RecordCreateFromKeys(IndexPropertyKeys(K), T, options)\n        : RecordCreateFromPattern(K.pattern, T, options));\n}\n// prettier-ignore\nfunction FromUnionKey(key, type, options) {\n    return RecordCreateFromKeys(IndexPropertyKeys(Union(key)), type, options);\n}\n// prettier-ignore\nfunction FromLiteralKey(key, type, options) {\n    return RecordCreateFromKeys([key.toString()], type, options);\n}\n// prettier-ignore\nfunction FromRegExpKey(key, type, options) {\n    return RecordCreateFromPattern(key.source, type, options);\n}\n// prettier-ignore\nfunction FromStringKey(key, type, options) {\n    const pattern = IsUndefined(key.pattern) ? PatternStringExact : key.pattern;\n    return RecordCreateFromPattern(pattern, type, options);\n}\n// prettier-ignore\nfunction FromAnyKey(_, type, options) {\n    return RecordCreateFromPattern(PatternStringExact, type, options);\n}\n// prettier-ignore\nfunction FromNeverKey(_key, type, options) {\n    return RecordCreateFromPattern(PatternNeverExact, type, options);\n}\n// prettier-ignore\nfunction FromBooleanKey(_key, type, options) {\n    return Object({ true: type, false: type }, options);\n}\n// prettier-ignore\nfunction FromIntegerKey(_key, type, options) {\n    return RecordCreateFromPattern(PatternNumberExact, type, options);\n}\n// prettier-ignore\nfunction FromNumberKey(_, type, options) {\n    return RecordCreateFromPattern(PatternNumberExact, type, options);\n}\n// ------------------------------------------------------------------\n// TRecordOrObject\n// ------------------------------------------------------------------\n/** `[Json]` Creates a Record type */\nexport function Record(key, type, options = {}) {\n    // prettier-ignore\n    return (IsUnion(key) ? FromUnionKey(key.anyOf, type, options) :\n        IsTemplateLiteral(key) ? FromTemplateLiteralKey(key, type, options) :\n            IsLiteral(key) ? FromLiteralKey(key.const, type, options) :\n                IsBoolean(key) ? FromBooleanKey(key, type, options) :\n                    IsInteger(key) ? FromIntegerKey(key, type, options) :\n                        IsNumber(key) ? FromNumberKey(key, type, options) :\n                            IsRegExp(key) ? FromRegExpKey(key, type, options) :\n                                IsString(key) ? FromStringKey(key, type, options) :\n                                    IsAny(key) ? FromAnyKey(key, type, options) :\n                                        IsNever(key) ? FromNeverKey(key, type, options) :\n                                            Never(options));\n}\n// ------------------------------------------------------------------\n// Record Utilities\n// ------------------------------------------------------------------\n/** Gets the Records Pattern */\nexport function RecordPattern(record) {\n    return globalThis.Object.getOwnPropertyNames(record.patternProperties)[0];\n}\n/** Gets the Records Key Type */\n// prettier-ignore\nexport function RecordKey(type) {\n    const pattern = RecordPattern(type);\n    return (pattern === PatternStringExact ? String() :\n        pattern === PatternNumberExact ? Number() :\n            String({ pattern }));\n}\n/** Gets a Record Value Type */\n// prettier-ignore\nexport function RecordValue(type) {\n    return type.patternProperties[RecordPattern(type)];\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates an Integer type */\nexport function Integer(options) {\n    return CreateType({ [Kind]: 'Integer', type: 'integer' }, options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Capitalize LiteralString types */\nexport function Capitalize(T, options = {}) {\n    return Intrinsic(T, 'Capitalize', options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { TemplateLiteral, TemplateLiteralParseExact, IsTemplateLiteralExpressionFinite, TemplateLiteralExpressionGenerate } from '../template-literal/index.mjs';\nimport { IntrinsicFromMappedKey } from './intrinsic-from-mapped-key.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsTemplateLiteral, IsUnion, IsLiteral } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// Apply\n// ------------------------------------------------------------------\nfunction ApplyUncapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toLowerCase(), rest].join('');\n}\nfunction ApplyCapitalize(value) {\n    const [first, rest] = [value.slice(0, 1), value.slice(1)];\n    return [first.toUpperCase(), rest].join('');\n}\nfunction ApplyUppercase(value) {\n    return value.toUpperCase();\n}\nfunction ApplyLowercase(value) {\n    return value.toLowerCase();\n}\nfunction FromTemplateLiteral(schema, mode, options) {\n    // note: template literals require special runtime handling as they are encoded in string patterns.\n    // This diverges from the mapped type which would otherwise map on the template literal kind.\n    const expression = TemplateLiteralParseExact(schema.pattern);\n    const finite = IsTemplateLiteralExpressionFinite(expression);\n    if (!finite)\n        return { ...schema, pattern: FromLiteralValue(schema.pattern, mode) };\n    const strings = [...TemplateLiteralExpressionGenerate(expression)];\n    const literals = strings.map((value) => Literal(value));\n    const mapped = FromRest(literals, mode);\n    const union = Union(mapped);\n    return TemplateLiteral([union], options);\n}\n// prettier-ignore\nfunction FromLiteralValue(value, mode) {\n    return (typeof value === 'string' ? (mode === 'Uncapitalize' ? ApplyUncapitalize(value) :\n        mode === 'Capitalize' ? ApplyCapitalize(value) :\n            mode === 'Uppercase' ? ApplyUppercase(value) :\n                mode === 'Lowercase' ? ApplyLowercase(value) :\n                    value) : value.toString());\n}\n// prettier-ignore\nfunction FromRest(T, M) {\n    return T.map(L => Intrinsic(L, M));\n}\n/** Applies an intrinsic string manipulation to the given type. */\nexport function Intrinsic(schema, mode, options = {}) {\n    // prettier-ignore\n    return (\n    // Intrinsic-Mapped-Inference\n    IsMappedKey(schema) ? IntrinsicFromMappedKey(schema, mode, options) :\n        // Standard-Inference\n        IsTemplateLiteral(schema) ? FromTemplateLiteral(schema, mode, options) :\n            IsUnion(schema) ? Union(FromRest(schema.anyOf, mode), options) :\n                IsLiteral(schema) ? Literal(FromLiteralValue(schema.const, mode), options) :\n                    // Default Type\n                    CreateType(schema, options));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Intrinsic } from './intrinsic.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction MappedIntrinsicPropertyKey(K, M, options) {\n    return {\n        [K]: Intrinsic(Literal(K), M, Clone(options))\n    };\n}\n// prettier-ignore\nfunction MappedIntrinsicPropertyKeys(K, M, options) {\n    const result = K.reduce((Acc, L) => {\n        return { ...Acc, ...MappedIntrinsicPropertyKey(L, M, options) };\n    }, {});\n    return result;\n}\n// prettier-ignore\nfunction MappedIntrinsicProperties(T, M, options) {\n    return MappedIntrinsicPropertyKeys(T['keys'], M, options);\n}\n// prettier-ignore\nexport function IntrinsicFromMappedKey(T, M, options) {\n    const P = MappedIntrinsicProperties(T, M, options);\n    return MappedResult(P);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Lowercase LiteralString types */\nexport function Lowercase(T, options = {}) {\n    return Intrinsic(T, 'Lowercase', options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uncapitalize LiteralString types */\nexport function Uncapitalize(T, options = {}) {\n    return Intrinsic(T, 'Uncapitalize', options);\n}\n", "import { Intrinsic } from './intrinsic.mjs';\n/** `[Json]` Intrinsic function to Uppercase LiteralString types */\nexport function Uppercase(T, options = {}) {\n    return Intrinsic(T, 'Uppercase', options);\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { Kind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// Module Infrastructure Types\n// ------------------------------------------------------------------\nimport { ComputeModuleProperties } from './compute.mjs';\n// ------------------------------------------------------------------\n// Module\n// ------------------------------------------------------------------\n// prettier-ignore\nexport class TModule {\n    constructor($defs) {\n        const computed = ComputeModuleProperties($defs);\n        const identified = this.WithIdentifiers(computed);\n        this.$defs = identified;\n    }\n    /** `[Json]` Imports a Type by Key. */\n    Import(key, options) {\n        const $defs = { ...this.$defs, [key]: CreateType(this.$defs[key], options) };\n        return CreateType({ [Kind]: 'Import', $defs, $ref: key });\n    }\n    // prettier-ignore\n    WithIdentifiers($defs) {\n        return globalThis.Object.getOwnPropertyNames($defs).reduce((result, key) => {\n            return { ...result, [key]: { ...$defs[key], $id: key } };\n        }, {});\n    }\n}\n/** `[Json]` Creates a Type Definition Module. */\nexport function Module(properties) {\n    return new TModule(properties);\n}\n", "import { CreateType } from '../create/index.mjs';\nimport { CloneType } from '../clone/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { Array } from '../array/index.mjs';\nimport { Awaited } from '../awaited/index.mjs';\nimport { AsyncIterator } from '../async-iterator/index.mjs';\nimport { Constructor } from '../constructor/index.mjs';\nimport { Index } from '../indexed/index.mjs';\nimport { Function as FunctionType } from '../function/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Iterator } from '../iterator/index.mjs';\nimport { KeyOf } from '../keyof/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Omit } from '../omit/index.mjs';\nimport { Pick } from '../pick/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport { Partial } from '../partial/index.mjs';\nimport { RecordValue, RecordPattern } from '../record/index.mjs';\nimport { Required } from '../required/index.mjs';\nimport { Tuple } from '../tuple/index.mjs';\nimport { Union } from '../union/index.mjs';\n// ------------------------------------------------------------------\n// Symbols\n// ------------------------------------------------------------------\nimport { TransformKind, OptionalKind, ReadonlyKind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction DereferenceParameters(moduleProperties, types) {\n    return types.map((type) => {\n        return KindGuard.IsRef(type)\n            ? Dereference(moduleProperties, type.$ref)\n            : FromType(moduleProperties, type);\n    });\n}\n// prettier-ignore\nfunction Dereference(moduleProperties, ref) {\n    return (ref in moduleProperties\n        ? KindGuard.IsRef(moduleProperties[ref])\n            ? Dereference(moduleProperties, moduleProperties[ref].$ref)\n            : FromType(moduleProperties, moduleProperties[ref])\n        : Never());\n}\n// prettier-ignore\nfunction FromAwaited(parameters) {\n    return Awaited(parameters[0]);\n}\n// prettier-ignore\nfunction FromIndex(parameters) {\n    return Index(parameters[0], parameters[1]);\n}\n// prettier-ignore\nfunction FromKeyOf(parameters) {\n    return KeyOf(parameters[0]);\n}\n// prettier-ignore\nfunction FromPartial(parameters) {\n    return Partial(parameters[0]);\n}\n// prettier-ignore\nfunction FromOmit(parameters) {\n    return Omit(parameters[0], parameters[1]);\n}\n// prettier-ignore\nfunction FromPick(parameters) {\n    return Pick(parameters[0], parameters[1]);\n}\n// prettier-ignore\nfunction FromRequired(parameters) {\n    return Required(parameters[0]);\n}\n// prettier-ignore\nfunction FromComputed(moduleProperties, target, parameters) {\n    const dereferenced = DereferenceParameters(moduleProperties, parameters);\n    return (target === 'Awaited' ? FromAwaited(dereferenced) :\n        target === 'Index' ? FromIndex(dereferenced) :\n            target === 'KeyOf' ? FromKeyOf(dereferenced) :\n                target === 'Partial' ? FromPartial(dereferenced) :\n                    target === 'Omit' ? FromOmit(dereferenced) :\n                        target === 'Pick' ? FromPick(dereferenced) :\n                            target === 'Required' ? FromRequired(dereferenced) :\n                                Never());\n}\nfunction FromArray(moduleProperties, type) {\n    return Array(FromType(moduleProperties, type));\n}\nfunction FromAsyncIterator(moduleProperties, type) {\n    return AsyncIterator(FromType(moduleProperties, type));\n}\n// prettier-ignore\nfunction FromConstructor(moduleProperties, parameters, instanceType) {\n    return Constructor(FromTypes(moduleProperties, parameters), FromType(moduleProperties, instanceType));\n}\n// prettier-ignore\nfunction FromFunction(moduleProperties, parameters, returnType) {\n    return FunctionType(FromTypes(moduleProperties, parameters), FromType(moduleProperties, returnType));\n}\nfunction FromIntersect(moduleProperties, types) {\n    return Intersect(FromTypes(moduleProperties, types));\n}\nfunction FromIterator(moduleProperties, type) {\n    return Iterator(FromType(moduleProperties, type));\n}\nfunction FromObject(moduleProperties, properties) {\n    return Object(globalThis.Object.keys(properties).reduce((result, key) => {\n        return { ...result, [key]: FromType(moduleProperties, properties[key]) };\n    }, {}));\n}\n// prettier-ignore\nfunction FromRecord(moduleProperties, type) {\n    const [value, pattern] = [FromType(moduleProperties, RecordValue(type)), RecordPattern(type)];\n    const result = CloneType(type);\n    result.patternProperties[pattern] = value;\n    return result;\n}\n// prettier-ignore\nfunction FromTransform(moduleProperties, transform) {\n    return (KindGuard.IsRef(transform))\n        ? { ...Dereference(moduleProperties, transform.$ref), [TransformKind]: transform[TransformKind] }\n        : transform;\n}\nfunction FromTuple(moduleProperties, types) {\n    return Tuple(FromTypes(moduleProperties, types));\n}\nfunction FromUnion(moduleProperties, types) {\n    return Union(FromTypes(moduleProperties, types));\n}\nfunction FromTypes(moduleProperties, types) {\n    return types.map((type) => FromType(moduleProperties, type));\n}\n// prettier-ignore\nexport function FromType(moduleProperties, type) {\n    return (\n    // Modifiers\n    KindGuard.IsOptional(type) ? CreateType(FromType(moduleProperties, Discard(type, [OptionalKind])), type) :\n        KindGuard.IsReadonly(type) ? CreateType(FromType(moduleProperties, Discard(type, [ReadonlyKind])), type) :\n            // Transform\n            KindGuard.IsTransform(type) ? CreateType(FromTransform(moduleProperties, type), type) :\n                // Types\n                KindGuard.IsArray(type) ? CreateType(FromArray(moduleProperties, type.items), type) :\n                    KindGuard.IsAsyncIterator(type) ? CreateType(FromAsyncIterator(moduleProperties, type.items), type) :\n                        KindGuard.IsComputed(type) ? CreateType(FromComputed(moduleProperties, type.target, type.parameters)) :\n                            KindGuard.IsConstructor(type) ? CreateType(FromConstructor(moduleProperties, type.parameters, type.returns), type) :\n                                KindGuard.IsFunction(type) ? CreateType(FromFunction(moduleProperties, type.parameters, type.returns), type) :\n                                    KindGuard.IsIntersect(type) ? CreateType(FromIntersect(moduleProperties, type.allOf), type) :\n                                        KindGuard.IsIterator(type) ? CreateType(FromIterator(moduleProperties, type.items), type) :\n                                            KindGuard.IsObject(type) ? CreateType(FromObject(moduleProperties, type.properties), type) :\n                                                KindGuard.IsRecord(type) ? CreateType(FromRecord(moduleProperties, type)) :\n                                                    KindGuard.IsTuple(type) ? CreateType(FromTuple(moduleProperties, type.items || []), type) :\n                                                        KindGuard.IsUnion(type) ? CreateType(FromUnion(moduleProperties, type.anyOf), type) :\n                                                            type);\n}\n// prettier-ignore\nexport function ComputeType(moduleProperties, key) {\n    return (key in moduleProperties\n        ? FromType(moduleProperties, moduleProperties[key])\n        : Never());\n}\n// prettier-ignore\nexport function ComputeModuleProperties(moduleProperties) {\n    return globalThis.Object.getOwnPropertyNames(moduleProperties).reduce((result, key) => {\n        return { ...result, [key]: ComputeType(moduleProperties, key) };\n    }, {});\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromPropertyKey(type, key, options) {\n    return { [key]: Omit(type, [key], Clone(options)) };\n}\n// prettier-ignore\nfunction FromPropertyKeys(type, propertyKeys, options) {\n    return propertyKeys.reduce((Acc, LK) => {\n        return { ...Acc, ...FromPropertyKey(type, LK, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(type, mappedKey, options) {\n    return FromPropertyKeys(type, mappedKey.keys, options);\n}\n// prettier-ignore\nexport function OmitFromMappedKey(type, mappedKey, options) {\n    const properties = FromMappedKey(type, mappedKey, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Discard } from '../discard/discard.mjs';\nimport { TransformKind } from '../symbols/symbols.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Object } from '../object/index.mjs';\n// ------------------------------------------------------------------\n// Mapped\n// ------------------------------------------------------------------\nimport { OmitFromMappedKey } from './omit-from-mapped-key.mjs';\nimport { OmitFromMappedResult } from './omit-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsIntersect, IsUnion, IsObject, IsSchema, IsMappedResult, IsLiteralValue, IsRef } from '../guard/kind.mjs';\nimport { IsArray as IsArrayValue } from '../guard/value.mjs';\n// prettier-ignore\nfunction FromIntersect(types, propertyKeys) {\n    return types.map((type) => OmitResolve(type, propertyKeys));\n}\n// prettier-ignore\nfunction FromUnion(types, propertyKeys) {\n    return types.map((type) => OmitResolve(type, propertyKeys));\n}\n// ------------------------------------------------------------------\n// FromProperty\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction FromProperty(properties, key) {\n    const { [key]: _, ...R } = properties;\n    return R;\n}\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys) {\n    return propertyKeys.reduce((T, K2) => FromProperty(T, K2), properties);\n}\n// prettier-ignore\nfunction FromObject(properties, propertyKeys) {\n    const options = Discard(properties, [TransformKind, '$id', 'required', 'properties']);\n    const omittedProperties = FromProperties(properties['properties'], propertyKeys);\n    return Object(omittedProperties, options);\n}\n// prettier-ignore\nfunction UnionFromPropertyKeys(propertyKeys) {\n    const result = propertyKeys.reduce((result, key) => IsLiteralValue(key) ? [...result, Literal(key)] : result, []);\n    return Union(result);\n}\n// prettier-ignore\nfunction OmitResolve(properties, propertyKeys) {\n    return (IsIntersect(properties) ? Intersect(FromIntersect(properties.allOf, propertyKeys)) :\n        IsUnion(properties) ? Union(FromUnion(properties.anyOf, propertyKeys)) :\n            IsObject(properties) ? FromObject(properties, propertyKeys) :\n                Object({}));\n}\n/** `[Json]` Constructs a type whose keys are picked from the given type */\n// prettier-ignore\nexport function Omit(type, key, options) {\n    const typeKey = IsArrayValue(key) ? UnionFromPropertyKeys(key) : key;\n    const propertyKeys = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const isTypeRef = IsRef(type);\n    const isKeyRef = IsRef(key);\n    return (IsMappedResult(type) ? OmitFromMappedResult(type, propertyKeys, options) :\n        IsMappedKey(key) ? OmitFromMappedKey(type, key, options) :\n            (isTypeRef && isKeyRef) ? Computed('Omit', [type, typeKey], options) :\n                (!isTypeRef && isKeyRef) ? Computed('Omit', [type, typeKey], options) :\n                    (isTypeRef && !isKeyRef) ? Computed('Omit', [type, typeKey], options) :\n                        CreateType({ ...OmitResolve(type, propertyKeys), ...options }));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Omit } from './omit.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys, options) {\n    const result = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(properties))\n        result[K2] = Omit(properties[K2], propertyKeys, Clone(options));\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(mappedResult, propertyKeys, options) {\n    return FromProperties(mappedResult.properties, propertyKeys, options);\n}\n// prettier-ignore\nexport function OmitFromMappedResult(mappedResult, propertyKeys, options) {\n    const properties = FromMappedResult(mappedResult, propertyKeys, options);\n    return MappedResult(properties);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromPropertyKey(type, key, options) {\n    return {\n        [key]: Pick(type, [key], Clone(options))\n    };\n}\n// prettier-ignore\nfunction FromPropertyKeys(type, propertyKeys, options) {\n    return propertyKeys.reduce((result, leftKey) => {\n        return { ...result, ...FromPropertyKey(type, leftKey, options) };\n    }, {});\n}\n// prettier-ignore\nfunction FromMappedKey(type, mappedKey, options) {\n    return FromPropertyKeys(type, mappedKey.keys, options);\n}\n// prettier-ignore\nexport function PickFromMappedKey(type, mappedKey, options) {\n    const properties = FromMappedKey(type, mappedKey, options);\n    return MappedResult(properties);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Discard } from '../discard/discard.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Literal } from '../literal/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { IndexPropertyKeys } from '../indexed/index.mjs';\nimport { TransformKind } from '../symbols/symbols.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nimport { IsMappedKey, IsMappedResult, IsIntersect, IsUnion, IsObject, IsSchema, IsLiteralValue, IsRef } from '../guard/kind.mjs';\nimport { IsArray as IsArrayValue } from '../guard/value.mjs';\n// ------------------------------------------------------------------\n// Infrastructure\n// ------------------------------------------------------------------\nimport { PickFromMappedKey } from './pick-from-mapped-key.mjs';\nimport { PickFromMappedResult } from './pick-from-mapped-result.mjs';\nfunction FromIntersect(types, propertyKeys) {\n    return types.map((type) => PickResolve(type, propertyKeys));\n}\n// prettier-ignore\nfunction FromUnion(types, propertyKeys) {\n    return types.map((type) => PickResolve(type, propertyKeys));\n}\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys) {\n    const result = {};\n    for (const K2 of propertyKeys)\n        if (K2 in properties)\n            result[K2] = properties[K2];\n    return result;\n}\n// prettier-ignore\nfunction FromObject(T, K) {\n    const options = Discard(T, [TransformKind, '$id', 'required', 'properties']);\n    const properties = FromProperties(T['properties'], K);\n    return Object(properties, options);\n}\n// prettier-ignore\nfunction UnionFromPropertyKeys(propertyKeys) {\n    const result = propertyKeys.reduce((result, key) => IsLiteralValue(key) ? [...result, Literal(key)] : result, []);\n    return Union(result);\n}\n// prettier-ignore\nfunction PickResolve(properties, propertyKeys) {\n    return (IsIntersect(properties) ? Intersect(FromIntersect(properties.allOf, propertyKeys)) :\n        IsUnion(properties) ? Union(FromUnion(properties.anyOf, propertyKeys)) :\n            IsObject(properties) ? FromObject(properties, propertyKeys) :\n                Object({}));\n}\n/** `[Json]` Constructs a type whose keys are picked from the given type */\n// prettier-ignore\nexport function Pick(type, key, options) {\n    const typeKey = IsArrayValue(key) ? UnionFromPropertyKeys(key) : key;\n    const propertyKeys = IsSchema(key) ? IndexPropertyKeys(key) : key;\n    const isTypeRef = IsRef(type);\n    const isKeyRef = IsRef(key);\n    return (IsMappedResult(type) ? PickFromMappedResult(type, propertyKeys, options) :\n        IsMappedKey(key) ? PickFromMappedKey(type, key, options) :\n            (isTypeRef && isKeyRef) ? Computed('Pick', [type, typeKey], options) :\n                (!isTypeRef && isKeyRef) ? Computed('Pick', [type, typeKey], options) :\n                    (isTypeRef && !isKeyRef) ? Computed('Pick', [type, typeKey], options) :\n                        CreateType({ ...PickResolve(type, propertyKeys), ...options }));\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Pick } from './pick.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(properties, propertyKeys, options) {\n    const result = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(properties))\n        result[K2] = Pick(properties[K2], propertyKeys, Clone(options));\n    return result;\n}\n// prettier-ignore\nfunction FromMappedResult(mappedResult, propertyKeys, options) {\n    return FromProperties(mappedResult.properties, propertyKeys, options);\n}\n// prettier-ignore\nexport function PickFromMappedResult(mappedResult, propertyKeys, options) {\n    const properties = FromMappedResult(mappedResult, propertyKeys, options);\n    return MappedResult(properties);\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Partial } from './partial.mjs';\nimport { Clone } from '../clone/value.mjs';\n// prettier-ignore\nfunction FromProperties(K, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(K))\n        Acc[K2] = Partial(K[K2], Clone(options));\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function PartialFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Optional } from '../optional/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { TransformKind } from '../symbols/index.mjs';\nimport { PartialFromMappedResult } from './partial-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('Partial', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('Partial', [Ref($ref)]);\n}\n// prettier-ignore\nfunction FromProperties(properties) {\n    const partialProperties = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(properties))\n        partialProperties[K] = Optional(properties[K]);\n    return partialProperties;\n}\n// prettier-ignore\nfunction FromObject(type) {\n    const options = Discard(type, [TransformKind, '$id', 'required', 'properties']);\n    const properties = FromProperties(type['properties']);\n    return Object(properties, options);\n}\n// prettier-ignore\nfunction FromRest(types) {\n    return types.map(type => PartialResolve(type));\n}\n// ------------------------------------------------------------------\n// PartialResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PartialResolve(type) {\n    return (\n    // Mappable\n    KindGuard.IsComputed(type) ? FromComputed(type.target, type.parameters) :\n        KindGuard.IsRef(type) ? FromRef(type.$ref) :\n            KindGuard.IsIntersect(type) ? Intersect(FromRest(type.allOf)) :\n                KindGuard.IsUnion(type) ? Union(FromRest(type.anyOf)) :\n                    KindGuard.IsObject(type) ? FromObject(type) :\n                        // Intrinsic\n                        KindGuard.IsBigInt(type) ? type :\n                            KindGuard.IsBoolean(type) ? type :\n                                KindGuard.IsInteger(type) ? type :\n                                    KindGuard.IsLiteral(type) ? type :\n                                        KindGuard.IsNull(type) ? type :\n                                            KindGuard.IsNumber(type) ? type :\n                                                KindGuard.IsString(type) ? type :\n                                                    KindGuard.IsSymbol(type) ? type :\n                                                        KindGuard.IsUndefined(type) ? type :\n                                                            // Passthrough\n                                                            Object({}));\n}\n/** `[Json]` Constructs a type where all properties are optional */\nexport function Partial(type, options) {\n    if (KindGuard.IsMappedResult(type)) {\n        return PartialFromMappedResult(type, options);\n    }\n    else {\n        // special: mapping types require overridable options\n        return CreateType({ ...PartialResolve(type), ...options });\n    }\n}\n", "import { MappedResult } from '../mapped/index.mjs';\nimport { Required } from './required.mjs';\n// prettier-ignore\nfunction FromProperties(P, options) {\n    const Acc = {};\n    for (const K2 of globalThis.Object.getOwnPropertyNames(P))\n        Acc[K2] = Required(P[K2], options);\n    return Acc;\n}\n// prettier-ignore\nfunction FromMappedResult(R, options) {\n    return FromProperties(R.properties, options);\n}\n// prettier-ignore\nexport function RequiredFromMappedResult(R, options) {\n    const P = FromMappedResult(R, options);\n    return MappedResult(P);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Computed } from '../computed/index.mjs';\nimport { Object } from '../object/index.mjs';\nimport { Intersect } from '../intersect/index.mjs';\nimport { Union } from '../union/index.mjs';\nimport { Ref } from '../ref/index.mjs';\nimport { OptionalKind, TransformKind } from '../symbols/index.mjs';\nimport { Discard } from '../discard/index.mjs';\nimport { RequiredFromMappedResult } from './required-from-mapped-result.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport * as KindGuard from '../guard/kind.mjs';\n// prettier-ignore\nfunction FromComputed(target, parameters) {\n    return Computed('Required', [Computed(target, parameters)]);\n}\n// prettier-ignore\nfunction FromRef($ref) {\n    return Computed('Required', [Ref($ref)]);\n}\n// prettier-ignore\nfunction FromProperties(properties) {\n    const requiredProperties = {};\n    for (const K of globalThis.Object.getOwnPropertyNames(properties))\n        requiredProperties[K] = Discard(properties[K], [OptionalKind]);\n    return requiredProperties;\n}\n// prettier-ignore\nfunction FromObject(type) {\n    const options = Discard(type, [TransformKind, '$id', 'required', 'properties']);\n    const properties = FromProperties(type['properties']);\n    return Object(properties, options);\n}\n// prettier-ignore\nfunction FromRest(types) {\n    return types.map(type => RequiredResolve(type));\n}\n// ------------------------------------------------------------------\n// RequiredResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RequiredResolve(type) {\n    return (\n    // Mappable\n    KindGuard.IsComputed(type) ? FromComputed(type.target, type.parameters) :\n        KindGuard.IsRef(type) ? FromRef(type.$ref) :\n            KindGuard.IsIntersect(type) ? Intersect(FromRest(type.allOf)) :\n                KindGuard.IsUnion(type) ? Union(FromRest(type.anyOf)) :\n                    KindGuard.IsObject(type) ? FromObject(type) :\n                        // Intrinsic\n                        KindGuard.IsBigInt(type) ? type :\n                            KindGuard.IsBoolean(type) ? type :\n                                KindGuard.IsInteger(type) ? type :\n                                    KindGuard.IsLiteral(type) ? type :\n                                        KindGuard.IsNull(type) ? type :\n                                            KindGuard.IsNumber(type) ? type :\n                                                KindGuard.IsString(type) ? type :\n                                                    KindGuard.IsSymbol(type) ? type :\n                                                        KindGuard.IsUndefined(type) ? type :\n                                                            // Passthrough\n                                                            Object({}));\n}\n/** `[Json]` Constructs a type where all properties are required */\nexport function Required(type, options) {\n    if (KindGuard.IsMappedResult(type)) {\n        return RequiredFromMappedResult(type, options);\n    }\n    else {\n        // special: mapping types require overridable options\n        return CreateType({ ...RequiredResolve(type), ...options });\n    }\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Not type */\nexport function Not(type, options) {\n    return CreateType({ [Kind]: 'Not', not: type }, options);\n}\n", "import { Tuple } from '../tuple/index.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the Parameters from the given Function type */\nexport function Parameters(schema, options) {\n    return (KindGuard.IsFunction(schema) ? Tuple(schema.parameters, options) : Never());\n}\n", "import { CloneType } from '../clone/type.mjs';\nimport { CreateType } from '../create/type.mjs';\nimport { IsUndefined } from '../guard/value.mjs';\nimport { Kind, Hint } from '../symbols/index.mjs';\n// Auto Tracked For Recursive Types without ID's\nlet Ordinal = 0;\n/** `[Json]` Creates a Recursive type */\nexport function Recursive(callback, options = {}) {\n    if (IsUndefined(options.$id))\n        options.$id = `T${Ordinal++}`;\n    const thisType = CloneType(callback({ [Kind]: 'This', $ref: `${options.$id}` }));\n    thisType.$id = options.$id;\n    // prettier-ignore\n    return CreateType({ [Hint]: 'Recursive', ...thisType }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { IsString } from '../guard/value.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a RegExp type */\nexport function RegExp(unresolved, options) {\n    const expr = IsString(unresolved) ? new globalThis.RegExp(unresolved) : unresolved;\n    return CreateType({ [Kind]: 'RegExp', type: 'RegExp', source: expr.source, flags: expr.flags }, options);\n}\n", "// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsIntersect, IsUnion, IsTuple } from '../guard/kind.mjs';\n// prettier-ignore\nfunction RestResolve(T) {\n    return (IsIntersect(T) ? T.allOf :\n        IsUnion(T) ? T.anyOf :\n            IsTuple(T) ? T.items ?? [] :\n                []);\n}\n/** `[Json]` Extracts interior Rest elements from Tuple, Intersect and Union types */\nexport function Rest(T) {\n    return RestResolve(T);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Never } from '../never/index.mjs';\nimport * as KindGuard from '../guard/kind.mjs';\n/** `[JavaScript]` Extracts the ReturnType from the given Function type */\nexport function ReturnType(schema, options) {\n    return (KindGuard.IsFunction(schema) ? CreateType(schema.returns, options) : Never(options));\n}\n", "import { TransformKind } from '../symbols/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsTransform } from '../guard/kind.mjs';\n// ------------------------------------------------------------------\n// TransformBuilders\n// ------------------------------------------------------------------\nexport class TransformDecodeBuilder {\n    constructor(schema) {\n        this.schema = schema;\n    }\n    Decode(decode) {\n        return new TransformEncodeBuilder(this.schema, decode);\n    }\n}\n// prettier-ignore\nexport class TransformEncodeBuilder {\n    constructor(schema, decode) {\n        this.schema = schema;\n        this.decode = decode;\n    }\n    EncodeTransform(encode, schema) {\n        const Encode = (value) => schema[TransformKind].Encode(encode(value));\n        const Decode = (value) => this.decode(schema[TransformKind].Decode(value));\n        const Codec = { Encode: Encode, Decode: Decode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    EncodeSchema(encode, schema) {\n        const Codec = { Decode: this.decode, Encode: encode };\n        return { ...schema, [TransformKind]: Codec };\n    }\n    Encode(encode) {\n        return (IsTransform(this.schema) ? this.EncodeTransform(encode, this.schema) : this.EncodeSchema(encode, this.schema));\n    }\n}\n/** `[Json]` Creates a Transform type */\nexport function Transform(schema) {\n    return new TransformDecodeBuilder(schema);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[Json]` Creates a Unsafe type that will infers as the generic argument T */\nexport function Unsafe(options = {}) {\n    return CreateType({ [Kind]: options[Kind] ?? 'Unsafe' }, options);\n}\n", "import { CreateType } from '../create/type.mjs';\nimport { Kind } from '../symbols/index.mjs';\n/** `[JavaScript]` Creates a Void type */\nexport function Void(options) {\n    return CreateType({ [Kind]: 'Void', type: 'void' }, options);\n}\n", "// ------------------------------------------------------------------\n// JsonTypeBuilder\n// ------------------------------------------------------------------\nexport { JsonTypeBuilder } from './json.mjs';\n// ------------------------------------------------------------------\n// JavaScriptTypeBuilder\n// ------------------------------------------------------------------\nimport * as TypeBuilder from './type.mjs';\nimport { JavaScriptTypeBuilder } from './javascript.mjs';\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nconst Type = TypeBuilder;\nexport { JavaScriptTypeBuilder };\nexport { Type };\n", "// ------------------------------------------------------------------\n// Type: Module\n// ------------------------------------------------------------------\nexport { Any } from '../any/index.mjs';\nexport { Argument } from '../argument/index.mjs';\nexport { Array } from '../array/index.mjs';\nexport { AsyncIterator } from '../async-iterator/index.mjs';\nexport { Awaited } from '../awaited/index.mjs';\nexport { BigInt } from '../bigint/index.mjs';\nexport { Boolean } from '../boolean/index.mjs';\nexport { Composite } from '../composite/index.mjs';\nexport { Const } from '../const/index.mjs';\nexport { Constructor } from '../constructor/index.mjs';\nexport { ConstructorParameters } from '../constructor-parameters/index.mjs';\nexport { Date } from '../date/index.mjs';\nexport { Enum } from '../enum/index.mjs';\nexport { Exclude } from '../exclude/index.mjs';\nexport { Extends } from '../extends/index.mjs';\nexport { Extract } from '../extract/index.mjs';\nexport { Function } from '../function/index.mjs';\nexport { Index } from '../indexed/index.mjs';\nexport { InstanceType } from '../instance-type/index.mjs';\nexport { Instantiate } from '../instantiate/index.mjs';\nexport { Integer } from '../integer/index.mjs';\nexport { Intersect } from '../intersect/index.mjs';\nexport { Capitalize, Uncapitalize, Lowercase, Uppercase } from '../intrinsic/index.mjs';\nexport { Iterator } from '../iterator/index.mjs';\nexport { KeyOf } from '../keyof/index.mjs';\nexport { Literal } from '../literal/index.mjs';\nexport { Mapped } from '../mapped/index.mjs';\nexport { Module } from '../module/index.mjs';\nexport { Never } from '../never/index.mjs';\nexport { Not } from '../not/index.mjs';\nexport { Null } from '../null/index.mjs';\nexport { Number } from '../number/index.mjs';\nexport { Object } from '../object/index.mjs';\nexport { Omit } from '../omit/index.mjs';\nexport { Optional } from '../optional/index.mjs';\nexport { Parameters } from '../parameters/index.mjs';\nexport { Partial } from '../partial/index.mjs';\nexport { Pick } from '../pick/index.mjs';\nexport { Promise } from '../promise/index.mjs';\nexport { Readonly } from '../readonly/index.mjs';\nexport { ReadonlyOptional } from '../readonly-optional/index.mjs';\nexport { Record } from '../record/index.mjs';\nexport { Recursive } from '../recursive/index.mjs';\nexport { Ref } from '../ref/index.mjs';\nexport { RegExp } from '../regexp/index.mjs';\nexport { Required } from '../required/index.mjs';\nexport { Rest } from '../rest/index.mjs';\nexport { ReturnType } from '../return-type/index.mjs';\nexport { String } from '../string/index.mjs';\nexport { Symbol } from '../symbol/index.mjs';\nexport { TemplateLiteral } from '../template-literal/index.mjs';\nexport { Transform } from '../transform/index.mjs';\nexport { Tuple } from '../tuple/index.mjs';\nexport { Uint8Array } from '../uint8array/index.mjs';\nexport { Undefined } from '../undefined/index.mjs';\nexport { Union } from '../union/index.mjs';\nexport { Unknown } from '../unknown/index.mjs';\nexport { Unsafe } from '../unsafe/index.mjs';\nexport { Void } from '../void/index.mjs';\n", "import { Type, Kind } from \"@sinclair/typebox\";\nimport {\n  compile,\n  createType,\n  loadFileType,\n  tryParse,\n  validateFile\n} from \"./utils.mjs\";\nimport { ELYSIA_FORM_DATA, form } from \"../utils.mjs\";\nimport { ValidationError } from \"../error.mjs\";\nimport { parseDateTimeEmptySpace } from \"./format.mjs\";\nconst t = Object.assign({}, Type);\ncreateType(\n  \"UnionEnum\",\n  (schema, value) => (typeof value == \"number\" || typeof value == \"string\" || value === null) && schema.enum.includes(value)\n), createType(\n  \"ArrayBuffer\",\n  (schema, value) => value instanceof ArrayBuffer\n);\nconst internalFiles = createType(\n  \"Files\",\n  (options, value) => {\n    if (options.minItems && options.minItems > 1 && !Array.isArray(value))\n      return !1;\n    if (!Array.isArray(value)) return validateFile(options, value);\n    if (options.minItems && value.length < options.minItems || options.maxItems && value.length > options.maxItems) return !1;\n    for (let i = 0; i < value.length; i++)\n      if (!validateFile(options, value[i])) return !1;\n    return !0;\n  }\n), internalFormData = createType(\n  \"ElysiaForm\",\n  ({ compiler, ...schema }, value) => {\n    if (!(value instanceof FormData)) return !1;\n    if (compiler) {\n      if (!(ELYSIA_FORM_DATA in value))\n        throw new ValidationError(\"property\", schema, value);\n      if (!compiler.Check(value[ELYSIA_FORM_DATA]))\n        throw compiler.Error(value[ELYSIA_FORM_DATA]);\n    }\n    return !0;\n  }\n), ElysiaType = {\n  // @ts-ignore\n  String: (property) => Type.String(property),\n  Numeric: (property) => {\n    const schema = Type.Number(property), compiler = compile(schema);\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            format: \"numeric\",\n            default: 0\n          }),\n          t.Number(property)\n        ],\n        property\n      )\n    ).Decode((value) => {\n      const number = +value;\n      if (isNaN(number)) return value;\n      if (property && !compiler.Check(number))\n        throw compiler.Error(number);\n      return number;\n    }).Encode((value) => value);\n  },\n  Integer: (property) => {\n    const schema = Type.Integer(property), compiler = compile(schema);\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            format: \"integer\",\n            default: 0\n          }),\n          Type.Integer(property)\n        ],\n        property\n      )\n    ).Decode((value) => {\n      const number = +value;\n      if (!compiler.Check(number)) throw compiler.Error(number);\n      return number;\n    }).Encode((value) => value);\n  },\n  Date: (property) => {\n    const schema = Type.Date(property), compiler = compile(schema), _default = property?.default ? new Date(property.default) : void 0;\n    return t.Transform(\n      t.Union(\n        [\n          Type.Date(property),\n          t.String({\n            format: \"date-time\",\n            default: _default?.toISOString()\n          }),\n          t.String({\n            format: \"date\",\n            default: _default?.toISOString()\n          }),\n          t.Number({ default: _default?.getTime() })\n        ],\n        property\n      )\n    ).Decode((value) => {\n      if (typeof value == \"number\") {\n        const date2 = new Date(value);\n        if (!compiler.Check(date2)) throw compiler.Error(date2);\n        return date2;\n      }\n      if (value instanceof Date) return value;\n      const date = new Date(parseDateTimeEmptySpace(value));\n      if (!date || isNaN(date.getTime()))\n        throw new ValidationError(\"property\", schema, date);\n      if (!compiler.Check(date)) throw compiler.Error(date);\n      return date;\n    }).Encode((value) => {\n      if (value instanceof Date) return value.toISOString();\n      if (typeof value == \"string\") {\n        if (isNaN(\n          new Date(parseDateTimeEmptySpace(value)).getTime()\n        ))\n          throw new ValidationError(\"property\", schema, value);\n        return value;\n      }\n      if (!compiler.Check(value)) throw compiler.Error(value);\n      return value;\n    });\n  },\n  BooleanString: (property) => {\n    const schema = Type.Boolean(property), compiler = compile(schema);\n    return t.Transform(\n      t.Union(\n        [\n          t.Boolean(property),\n          t.String({\n            format: \"boolean\",\n            default: !1\n          })\n        ],\n        property\n      )\n    ).Decode((value) => {\n      if (typeof value == \"string\") return value === \"true\";\n      if (value !== void 0 && !compiler.Check(value))\n        throw compiler.Error(value);\n      return value;\n    }).Encode((value) => value);\n  },\n  ObjectString: (properties, options) => {\n    const schema = t.Object(properties, options), compiler = compile(schema);\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            format: \"ObjectString\",\n            default: \"{}\"\n          }),\n          schema\n        ],\n        {\n          elysiaMeta: \"ObjectString\"\n        }\n      )\n    ).Decode((value) => {\n      if (typeof value == \"string\") {\n        if (value.charCodeAt(0) !== 123)\n          throw new ValidationError(\"property\", schema, value);\n        if (!compiler.Check(value = tryParse(value, schema)))\n          throw compiler.Error(value);\n        return compiler.Decode(value);\n      }\n      return value;\n    }).Encode((value) => {\n      let original;\n      if (typeof value == \"string\" && (value = tryParse(original = value, schema)), !compiler.Check(value)) throw compiler.Error(value);\n      return original ?? JSON.stringify(value);\n    });\n  },\n  ArrayString: (children = t.String(), options) => {\n    const schema = t.Array(children, options), compiler = compile(schema), decode = (value, isProperty = !1) => {\n      if (value.charCodeAt(0) === 91) {\n        if (!compiler.Check(value = tryParse(value, schema)))\n          throw compiler.Error(value);\n        return compiler.Decode(value);\n      }\n      if (isProperty) return value;\n      throw new ValidationError(\"property\", schema, value);\n    };\n    return t.Transform(\n      t.Union([\n        t.String({\n          format: \"ArrayString\",\n          default: options?.default\n        }),\n        schema\n      ])\n    ).Decode((value) => {\n      if (Array.isArray(value)) {\n        let values = [];\n        for (let i = 0; i < value.length; i++) {\n          const v = value[i];\n          if (typeof v == \"string\") {\n            const t2 = decode(v, !0);\n            Array.isArray(t2) ? values = values.concat(t2) : values.push(t2);\n            continue;\n          }\n          values.push(v);\n        }\n        return values;\n      }\n      return typeof value == \"string\" ? decode(value) : value;\n    }).Encode((value) => {\n      let original;\n      if (typeof value == \"string\" && (value = tryParse(original = value, schema)), !compiler.Check(value))\n        throw new ValidationError(\"property\", schema, value);\n      return original ?? JSON.stringify(value);\n    });\n  },\n  ArrayQuery: (children = t.String(), options) => {\n    const schema = t.Array(children, options), compiler = compile(schema), decode = (value) => value.indexOf(\",\") !== -1 ? compiler.Decode(value.split(\",\")) : [value];\n    return t.Transform(\n      t.Union(\n        [\n          t.String({\n            default: options?.default\n          }),\n          schema\n        ],\n        {\n          elysiaMeta: \"ArrayQuery\"\n        }\n      )\n    ).Decode((value) => {\n      if (Array.isArray(value)) {\n        let values = [];\n        for (let i = 0; i < value.length; i++) {\n          const v = value[i];\n          if (typeof v == \"string\") {\n            const t2 = decode(v);\n            Array.isArray(t2) ? values = values.concat(t2) : values.push(t2);\n            continue;\n          }\n          values.push(v);\n        }\n        return values;\n      }\n      return typeof value == \"string\" ? decode(value) : value;\n    }).Encode((value) => {\n      let original;\n      if (typeof value == \"string\" && (value = tryParse(original = value, schema)), !compiler.Check(value))\n        throw new ValidationError(\"property\", schema, value);\n      return original ?? JSON.stringify(value);\n    });\n  },\n  File: createType(\n    \"File\",\n    validateFile\n  ),\n  Files: (options = {}) => t.Transform(internalFiles(options)).Decode((value) => Array.isArray(value) ? value : [value]).Encode((value) => value),\n  Nullable: (schema, options) => t.Union([schema, t.Null()], {\n    ...options,\n    nullable: !0\n  }),\n  /**\n   * Allow Optional, Nullable and Undefined\n   */\n  MaybeEmpty: (schema, options) => t.Union([schema, t.Null(), t.Undefined()], options),\n  Cookie: (properties, {\n    domain,\n    expires,\n    httpOnly,\n    maxAge,\n    path,\n    priority,\n    sameSite,\n    secure,\n    secrets,\n    sign,\n    ...options\n  } = {}) => {\n    const v = t.Object(properties, options);\n    return v.config = {\n      domain,\n      expires,\n      httpOnly,\n      maxAge,\n      path,\n      priority,\n      sameSite,\n      secure,\n      secrets,\n      sign\n    }, v;\n  },\n  UnionEnum: (values, options = {}) => {\n    const type = values.every((value) => typeof value == \"string\") ? { type: \"string\" } : values.every((value) => typeof value == \"number\") ? { type: \"number\" } : values.every((value) => value === null) ? { type: \"null\" } : {};\n    if (values.some((x) => typeof x == \"object\" && x !== null))\n      throw new Error(\"This type does not support objects or arrays\");\n    return {\n      // default is need for generating error message\n      default: values[0],\n      ...options,\n      [Kind]: \"UnionEnum\",\n      ...type,\n      enum: values\n    };\n  },\n  NoValidate: (v, enabled = !0) => (v.noValidate = enabled, v),\n  Form: (v, options = {}) => {\n    const schema = t.Object(v, {\n      default: form({}),\n      ...options\n    }), compiler = compile(schema);\n    return t.Union([\n      schema,\n      // @ts-expect-error\n      internalFormData({\n        compiler\n      })\n    ]);\n  },\n  ArrayBuffer(options = {}) {\n    return {\n      // default is need for generating error message\n      default: [1, 2, 3],\n      ...options,\n      [Kind]: \"ArrayBuffer\"\n    };\n  },\n  Uint8Array: (options) => {\n    const schema = Type.Uint8Array(options), compiler = compile(schema);\n    return t.Transform(t.Union([t.ArrayBuffer(), Type.Uint8Array(options)])).Decode((value) => {\n      if (value instanceof ArrayBuffer) {\n        if (!compiler.Check(value = new Uint8Array(value)))\n          throw compiler.Error(value);\n        return value;\n      }\n      return value;\n    }).Encode((value) => value);\n  }\n};\nt.BooleanString = ElysiaType.BooleanString, t.ObjectString = ElysiaType.ObjectString, t.ArrayString = ElysiaType.ArrayString, t.ArrayQuery = ElysiaType.ArrayQuery, t.Numeric = ElysiaType.Numeric, t.Integer = ElysiaType.Integer, t.File = (arg) => (arg?.type && loadFileType(), ElysiaType.File({\n  default: \"File\",\n  ...arg,\n  extension: arg?.type,\n  type: \"string\",\n  format: \"binary\"\n})), t.Files = (arg) => (arg?.type && loadFileType(), ElysiaType.Files({\n  ...arg,\n  elysiaMeta: \"Files\",\n  default: \"Files\",\n  extension: arg?.type,\n  type: \"array\",\n  items: {\n    ...arg,\n    default: \"Files\",\n    type: \"string\",\n    format: \"binary\"\n  }\n})), t.Nullable = ElysiaType.Nullable, t.MaybeEmpty = ElysiaType.MaybeEmpty, t.Cookie = ElysiaType.Cookie, t.Date = ElysiaType.Date, t.UnionEnum = ElysiaType.UnionEnum, t.NoValidate = ElysiaType.NoValidate, t.Form = ElysiaType.Form, t.ArrayBuffer = ElysiaType.ArrayBuffer, t.Uint8Array = ElysiaType.Uint8Array;\nimport {\n  TypeSystemPolicy,\n  TypeSystem,\n  TypeSystemDuplicateFormat,\n  TypeSystemDuplicateTypeKind\n} from \"@sinclair/typebox/system\";\nimport { TypeRegistry, FormatRegistry } from \"@sinclair/typebox\";\nimport { TypeCompiler, TypeCheck } from \"@sinclair/typebox/compiler\";\nexport {\n  ElysiaType,\n  FormatRegistry,\n  TypeCheck,\n  TypeCompiler,\n  TypeRegistry,\n  TypeSystem,\n  TypeSystemDuplicateFormat,\n  TypeSystemDuplicateTypeKind,\n  TypeSystemPolicy,\n  t\n};\n", "import {\n  Kind,\n  TypeRegistry,\n  Unsafe\n} from \"@sinclair/typebox\";\nimport { Value } from \"@sinclair/typebox/value\";\nimport { TypeCompiler } from \"@sinclair/typebox/compiler\";\nimport { ElysiaFile } from \"../universal/file.mjs\";\nimport { InvalidFileType, ValidationError } from \"../error.mjs\";\nconst tryParse = (v, schema) => {\n  try {\n    return JSON.parse(v);\n  } catch {\n    throw new ValidationError(\"property\", schema, v);\n  }\n};\nfunction createType(kind, func) {\n  return TypeRegistry.Has(kind) || TypeRegistry.Set(kind, func), (options = {}) => Unsafe({ ...options, [Kind]: kind });\n}\nconst compile = (schema) => {\n  try {\n    const compiler = TypeCompiler.Compile(schema);\n    return compiler.Create = () => Value.Create(schema), compiler.Error = (v) => (\n      // @ts-ignore\n      new ValidationError(\"property\", schema, v, compiler.Errors(v))\n    ), compiler;\n  } catch {\n    return {\n      Check: (v) => Value.Check(schema, v),\n      CheckThrow: (v) => {\n        if (!Value.Check(schema, v))\n          throw new ValidationError(\n            \"property\",\n            schema,\n            v,\n            // @ts-ignore\n            Value.Errors(schema, v)\n          );\n      },\n      Decode: (v) => Value.Decode(schema, v),\n      Create: () => Value.Create(schema),\n      Error: (v) => new ValidationError(\n        \"property\",\n        schema,\n        v,\n        // @ts-ignore\n        Value.Errors(schema, v)\n      )\n    };\n  }\n}, parseFileUnit = (size) => {\n  if (typeof size == \"string\")\n    switch (size.slice(-1)) {\n      case \"k\":\n        return +size.slice(0, size.length - 1) * 1024;\n      case \"m\":\n        return +size.slice(0, size.length - 1) * 1048576;\n      default:\n        return +size;\n    }\n  return size;\n}, checkFileExtension = (type, extension) => type.startsWith(extension) ? !0 : extension.charCodeAt(extension.length - 1) === 42 && extension.charCodeAt(extension.length - 2) === 47 && type.startsWith(extension.slice(0, -1));\nlet _fileTypeFromBlobWarn = !1;\nconst warnIfFileTypeIsNotInstalled = () => {\n  _fileTypeFromBlobWarn || (console.warn(\n    \"[Elysia] Attempt to validate file type without 'file-type'. This may lead to security risks. We recommend installing 'file-type' to properly validate file extension.\"\n  ), _fileTypeFromBlobWarn = !0);\n}, loadFileType = async () => import(\"file-type\").then((x) => (_fileTypeFromBlob = x.fileTypeFromBlob, _fileTypeFromBlob)).catch(warnIfFileTypeIsNotInstalled);\nlet _fileTypeFromBlob;\nconst fileTypeFromBlob = (file) => _fileTypeFromBlob ? _fileTypeFromBlob(file) : loadFileType().then((mod) => {\n  if (mod) return mod(file);\n}), fileType = async (file, extension, name = file?.name ?? \"\") => {\n  if (Array.isArray(file))\n    return await Promise.all(file.map((f) => fileType(f, extension, name))), !0;\n  if (!file) return !1;\n  const result = await fileTypeFromBlob(file);\n  if (!result) throw new InvalidFileType(name, extension);\n  if (typeof extension == \"string\" && !checkFileExtension(result.mime, extension))\n    throw new InvalidFileType(name, extension);\n  for (let i = 0; i < extension.length; i++)\n    if (checkFileExtension(result.mime, extension[i])) return !0;\n  throw new InvalidFileType(name, extension);\n}, validateFile = (options, value) => {\n  if (value instanceof ElysiaFile) return !0;\n  if (!(value instanceof Blob) || options.minSize && value.size < parseFileUnit(options.minSize) || options.maxSize && value.size > parseFileUnit(options.maxSize))\n    return !1;\n  if (options.extension) {\n    if (typeof options.extension == \"string\")\n      return checkFileExtension(value.type, options.extension);\n    for (let i = 0; i < options.extension.length; i++)\n      if (checkFileExtension(value.type, options.extension[i]))\n        return !0;\n    return !1;\n  }\n  return !0;\n}, validationDetail = (message) => (error) => ({\n  ...error,\n  message\n});\nexport {\n  checkFileExtension,\n  compile,\n  createType,\n  fileType,\n  fileTypeFromBlob,\n  loadFileType,\n  parseFileUnit,\n  tryParse,\n  validateFile,\n  validationDetail\n};\n", "// ------------------------------------------------------------------\n// Errors (re-export)\n// ------------------------------------------------------------------\nexport { ValueErrorType, ValueErrorIterator } from '../errors/index.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nexport * from './guard/index.mjs';\n// ------------------------------------------------------------------\n// Operators\n// ------------------------------------------------------------------\nexport * from './assert/index.mjs';\nexport * from './cast/index.mjs';\nexport * from './check/index.mjs';\nexport * from './clean/index.mjs';\nexport * from './clone/index.mjs';\nexport * from './convert/index.mjs';\nexport * from './create/index.mjs';\nexport * from './decode/index.mjs';\nexport * from './default/index.mjs';\nexport * from './delta/index.mjs';\nexport * from './encode/index.mjs';\nexport * from './equal/index.mjs';\nexport * from './hash/index.mjs';\nexport * from './mutate/index.mjs';\nexport * from './parse/index.mjs';\nexport * from './pointer/index.mjs';\nexport * from './transform/index.mjs';\n// ------------------------------------------------------------------\n// Namespace\n// ------------------------------------------------------------------\nexport { Value } from './value/index.mjs';\n", "import { TypeSystemPolicy } from '../system/index.mjs';\nimport { KeyOfPattern } from '../type/keyof/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { ExtendsUndefinedCheck } from '../type/extends/extends-undefined.mjs';\nimport { GetErrorFunction } from './function.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\nimport { Deref } from '../value/deref/index.mjs';\nimport { Hash } from '../value/hash/index.mjs';\nimport { Check } from '../value/check/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { Never } from '../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../value/guard/index.mjs';\n// ------------------------------------------------------------------\n// ValueErrorType\n// ------------------------------------------------------------------\nexport var ValueErrorType;\n(function (ValueErrorType) {\n    ValueErrorType[ValueErrorType[\"ArrayContains\"] = 0] = \"ArrayContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxContains\"] = 1] = \"ArrayMaxContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMaxItems\"] = 2] = \"ArrayMaxItems\";\n    ValueErrorType[ValueErrorType[\"ArrayMinContains\"] = 3] = \"ArrayMinContains\";\n    ValueErrorType[ValueErrorType[\"ArrayMinItems\"] = 4] = \"ArrayMinItems\";\n    ValueErrorType[ValueErrorType[\"ArrayUniqueItems\"] = 5] = \"ArrayUniqueItems\";\n    ValueErrorType[ValueErrorType[\"Array\"] = 6] = \"Array\";\n    ValueErrorType[ValueErrorType[\"AsyncIterator\"] = 7] = \"AsyncIterator\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMaximum\"] = 8] = \"BigIntExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntExclusiveMinimum\"] = 9] = \"BigIntExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMaximum\"] = 10] = \"BigIntMaximum\";\n    ValueErrorType[ValueErrorType[\"BigIntMinimum\"] = 11] = \"BigIntMinimum\";\n    ValueErrorType[ValueErrorType[\"BigIntMultipleOf\"] = 12] = \"BigIntMultipleOf\";\n    ValueErrorType[ValueErrorType[\"BigInt\"] = 13] = \"BigInt\";\n    ValueErrorType[ValueErrorType[\"Boolean\"] = 14] = \"Boolean\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMaximumTimestamp\"] = 15] = \"DateExclusiveMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateExclusiveMinimumTimestamp\"] = 16] = \"DateExclusiveMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMaximumTimestamp\"] = 17] = \"DateMaximumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMinimumTimestamp\"] = 18] = \"DateMinimumTimestamp\";\n    ValueErrorType[ValueErrorType[\"DateMultipleOfTimestamp\"] = 19] = \"DateMultipleOfTimestamp\";\n    ValueErrorType[ValueErrorType[\"Date\"] = 20] = \"Date\";\n    ValueErrorType[ValueErrorType[\"Function\"] = 21] = \"Function\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMaximum\"] = 22] = \"IntegerExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerExclusiveMinimum\"] = 23] = \"IntegerExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMaximum\"] = 24] = \"IntegerMaximum\";\n    ValueErrorType[ValueErrorType[\"IntegerMinimum\"] = 25] = \"IntegerMinimum\";\n    ValueErrorType[ValueErrorType[\"IntegerMultipleOf\"] = 26] = \"IntegerMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Integer\"] = 27] = \"Integer\";\n    ValueErrorType[ValueErrorType[\"IntersectUnevaluatedProperties\"] = 28] = \"IntersectUnevaluatedProperties\";\n    ValueErrorType[ValueErrorType[\"Intersect\"] = 29] = \"Intersect\";\n    ValueErrorType[ValueErrorType[\"Iterator\"] = 30] = \"Iterator\";\n    ValueErrorType[ValueErrorType[\"Kind\"] = 31] = \"Kind\";\n    ValueErrorType[ValueErrorType[\"Literal\"] = 32] = \"Literal\";\n    ValueErrorType[ValueErrorType[\"Never\"] = 33] = \"Never\";\n    ValueErrorType[ValueErrorType[\"Not\"] = 34] = \"Not\";\n    ValueErrorType[ValueErrorType[\"Null\"] = 35] = \"Null\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMaximum\"] = 36] = \"NumberExclusiveMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberExclusiveMinimum\"] = 37] = \"NumberExclusiveMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMaximum\"] = 38] = \"NumberMaximum\";\n    ValueErrorType[ValueErrorType[\"NumberMinimum\"] = 39] = \"NumberMinimum\";\n    ValueErrorType[ValueErrorType[\"NumberMultipleOf\"] = 40] = \"NumberMultipleOf\";\n    ValueErrorType[ValueErrorType[\"Number\"] = 41] = \"Number\";\n    ValueErrorType[ValueErrorType[\"ObjectAdditionalProperties\"] = 42] = \"ObjectAdditionalProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMaxProperties\"] = 43] = \"ObjectMaxProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectMinProperties\"] = 44] = \"ObjectMinProperties\";\n    ValueErrorType[ValueErrorType[\"ObjectRequiredProperty\"] = 45] = \"ObjectRequiredProperty\";\n    ValueErrorType[ValueErrorType[\"Object\"] = 46] = \"Object\";\n    ValueErrorType[ValueErrorType[\"Promise\"] = 47] = \"Promise\";\n    ValueErrorType[ValueErrorType[\"RegExp\"] = 48] = \"RegExp\";\n    ValueErrorType[ValueErrorType[\"StringFormatUnknown\"] = 49] = \"StringFormatUnknown\";\n    ValueErrorType[ValueErrorType[\"StringFormat\"] = 50] = \"StringFormat\";\n    ValueErrorType[ValueErrorType[\"StringMaxLength\"] = 51] = \"StringMaxLength\";\n    ValueErrorType[ValueErrorType[\"StringMinLength\"] = 52] = \"StringMinLength\";\n    ValueErrorType[ValueErrorType[\"StringPattern\"] = 53] = \"StringPattern\";\n    ValueErrorType[ValueErrorType[\"String\"] = 54] = \"String\";\n    ValueErrorType[ValueErrorType[\"Symbol\"] = 55] = \"Symbol\";\n    ValueErrorType[ValueErrorType[\"TupleLength\"] = 56] = \"TupleLength\";\n    ValueErrorType[ValueErrorType[\"Tuple\"] = 57] = \"Tuple\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMaxByteLength\"] = 58] = \"Uint8ArrayMaxByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8ArrayMinByteLength\"] = 59] = \"Uint8ArrayMinByteLength\";\n    ValueErrorType[ValueErrorType[\"Uint8Array\"] = 60] = \"Uint8Array\";\n    ValueErrorType[ValueErrorType[\"Undefined\"] = 61] = \"Undefined\";\n    ValueErrorType[ValueErrorType[\"Union\"] = 62] = \"Union\";\n    ValueErrorType[ValueErrorType[\"Void\"] = 63] = \"Void\";\n})(ValueErrorType || (ValueErrorType = {}));\n// ------------------------------------------------------------------\n// ValueErrors\n// ------------------------------------------------------------------\nexport class ValueErrorsUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// EscapeKey\n// ------------------------------------------------------------------\nfunction EscapeKey(key) {\n    return key.replace(/~/g, '~0').replace(/\\//g, '~1'); // RFC6901 Path\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// ValueErrorIterator\n// ------------------------------------------------------------------\nexport class ValueErrorIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator;\n    }\n    /** Returns the first value error or undefined if no errors */\n    First() {\n        const next = this.iterator.next();\n        return next.done ? undefined : next.value;\n    }\n}\n// --------------------------------------------------------------------------\n// Create\n// --------------------------------------------------------------------------\nfunction Create(errorType, schema, path, value, errors = []) {\n    return {\n        type: errorType,\n        schema,\n        path,\n        value,\n        message: GetErrorFunction()({ errorType, path, schema, value, errors }),\n        errors,\n    };\n}\n// --------------------------------------------------------------------------\n// Types\n// --------------------------------------------------------------------------\nfunction* FromAny(schema, references, path, value) { }\nfunction* FromArgument(schema, references, path, value) { }\nfunction* FromArray(schema, references, path, value) {\n    if (!IsArray(value)) {\n        return yield Create(ValueErrorType.Array, schema, path, value);\n    }\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        yield Create(ValueErrorType.ArrayMinItems, schema, path, value);\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);\n    }\n    for (let i = 0; i < value.length; i++) {\n        yield* Visit(schema.items, references, `${path}/${i}`, value[i]);\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {\n        return;\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value, index) => (Visit(containsSchema, references, `${path}${index}`, value).next().done === true ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        yield Create(ValueErrorType.ArrayContains, schema, path, value);\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        yield Create(ValueErrorType.ArrayMinContains, schema, path, value);\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);\n    }\n}\nfunction* FromAsyncIterator(schema, references, path, value) {\n    if (!IsAsyncIterator(value))\n        yield Create(ValueErrorType.AsyncIterator, schema, path, value);\n}\nfunction* FromBigInt(schema, references, path, value) {\n    if (!IsBigInt(value))\n        return yield Create(ValueErrorType.BigInt, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.BigIntMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.BigIntMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);\n    }\n}\nfunction* FromBoolean(schema, references, path, value) {\n    if (!IsBoolean(value))\n        yield Create(ValueErrorType.Boolean, schema, path, value);\n}\nfunction* FromConstructor(schema, references, path, value) {\n    yield* Visit(schema.returns, references, path, value.prototype);\n}\nfunction* FromDate(schema, references, path, value) {\n    if (!IsDate(value))\n        return yield Create(ValueErrorType.Date, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);\n    }\n}\nfunction* FromFunction(schema, references, path, value) {\n    if (!IsFunction(value))\n        yield Create(ValueErrorType.Function, schema, path, value);\n}\nfunction* FromImport(schema, references, path, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    yield* Visit(target, [...references, ...definitions], path, value);\n}\nfunction* FromInteger(schema, references, path, value) {\n    if (!IsInteger(value))\n        return yield Create(ValueErrorType.Integer, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.IntegerMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.IntegerMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);\n    }\n}\nfunction* FromIntersect(schema, references, path, value) {\n    let hasError = false;\n    for (const inner of schema.allOf) {\n        for (const error of Visit(inner, references, path, value)) {\n            hasError = true;\n            yield error;\n        }\n    }\n    if (hasError) {\n        return yield Create(ValueErrorType.Intersect, schema, path, value);\n    }\n    if (schema.unevaluatedProperties === false) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);\n            }\n        }\n    }\n    if (typeof schema.unevaluatedProperties === 'object') {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        for (const valueKey of Object.getOwnPropertyNames(value)) {\n            if (!keyCheck.test(valueKey)) {\n                const next = Visit(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();\n                if (!next.done)\n                    yield next.value; // yield interior\n            }\n        }\n    }\n}\nfunction* FromIterator(schema, references, path, value) {\n    if (!IsIterator(value))\n        yield Create(ValueErrorType.Iterator, schema, path, value);\n}\nfunction* FromLiteral(schema, references, path, value) {\n    if (!(value === schema.const))\n        yield Create(ValueErrorType.Literal, schema, path, value);\n}\nfunction* FromNever(schema, references, path, value) {\n    yield Create(ValueErrorType.Never, schema, path, value);\n}\nfunction* FromNot(schema, references, path, value) {\n    if (Visit(schema.not, references, path, value).next().done === true)\n        yield Create(ValueErrorType.Not, schema, path, value);\n}\nfunction* FromNull(schema, references, path, value) {\n    if (!IsNull(value))\n        yield Create(ValueErrorType.Null, schema, path, value);\n}\nfunction* FromNumber(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return yield Create(ValueErrorType.Number, schema, path, value);\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        yield Create(ValueErrorType.NumberMaximum, schema, path, value);\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        yield Create(ValueErrorType.NumberMinimum, schema, path, value);\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);\n    }\n}\nfunction* FromObject(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const requiredKeys = Array.isArray(schema.required) ? schema.required : [];\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    const unknownKeys = Object.getOwnPropertyNames(value);\n    for (const requiredKey of requiredKeys) {\n        if (unknownKeys.includes(requiredKey))\n            continue;\n        yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);\n    }\n    if (schema.additionalProperties === false) {\n        for (const valueKey of unknownKeys) {\n            if (!knownKeys.includes(valueKey)) {\n                yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n            }\n        }\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const valueKey of unknownKeys) {\n            if (knownKeys.includes(valueKey))\n                continue;\n            yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);\n        }\n    }\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            if (ExtendsUndefinedCheck(schema) && !(knownKey in value)) {\n                yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {\n                yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);\n            }\n        }\n    }\n}\nfunction* FromPromise(schema, references, path, value) {\n    if (!IsPromise(value))\n        yield Create(ValueErrorType.Promise, schema, path, value);\n}\nfunction* FromRecord(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value))\n        return yield Create(ValueErrorType.Object, schema, path, value);\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    for (const [propertyKey, propertyValue] of Object.entries(value)) {\n        if (regex.test(propertyKey))\n            yield* Visit(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n    }\n    if (typeof schema.additionalProperties === 'object') {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (!regex.test(propertyKey))\n                yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n    if (schema.additionalProperties === false) {\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\n            if (regex.test(propertyKey))\n                continue;\n            return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);\n        }\n    }\n}\nfunction* FromRef(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromRegExp(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    const regex = new RegExp(schema.source, schema.flags);\n    if (!regex.test(value)) {\n        return yield Create(ValueErrorType.RegExp, schema, path, value);\n    }\n}\nfunction* FromString(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {\n        yield Create(ValueErrorType.StringMinLength, schema, path, value);\n    }\n    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {\n        yield Create(ValueErrorType.StringMaxLength, schema, path, value);\n    }\n    if (IsString(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value)) {\n            yield Create(ValueErrorType.StringPattern, schema, path, value);\n        }\n    }\n    if (IsString(schema.format)) {\n        if (!FormatRegistry.Has(schema.format)) {\n            yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);\n        }\n        else {\n            const format = FormatRegistry.Get(schema.format);\n            if (!format(value)) {\n                yield Create(ValueErrorType.StringFormat, schema, path, value);\n            }\n        }\n    }\n}\nfunction* FromSymbol(schema, references, path, value) {\n    if (!IsSymbol(value))\n        yield Create(ValueErrorType.Symbol, schema, path, value);\n}\nfunction* FromTemplateLiteral(schema, references, path, value) {\n    if (!IsString(value))\n        return yield Create(ValueErrorType.String, schema, path, value);\n    const regex = new RegExp(schema.pattern);\n    if (!regex.test(value)) {\n        yield Create(ValueErrorType.StringPattern, schema, path, value);\n    }\n}\nfunction* FromThis(schema, references, path, value) {\n    yield* Visit(Deref(schema, references), references, path, value);\n}\nfunction* FromTuple(schema, references, path, value) {\n    if (!IsArray(value))\n        return yield Create(ValueErrorType.Tuple, schema, path, value);\n    if (schema.items === undefined && !(value.length === 0)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!(value.length === schema.maxItems)) {\n        return yield Create(ValueErrorType.TupleLength, schema, path, value);\n    }\n    if (!schema.items) {\n        return;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        yield* Visit(schema.items[i], references, `${path}/${i}`, value[i]);\n    }\n}\nfunction* FromUndefined(schema, references, path, value) {\n    if (!IsUndefined(value))\n        yield Create(ValueErrorType.Undefined, schema, path, value);\n}\nfunction* FromUnion(schema, references, path, value) {\n    if (Check(schema, references, value))\n        return;\n    const errors = schema.anyOf.map((variant) => new ValueErrorIterator(Visit(variant, references, path, value)));\n    yield Create(ValueErrorType.Union, schema, path, value, errors);\n}\nfunction* FromUint8Array(schema, references, path, value) {\n    if (!IsUint8Array(value))\n        return yield Create(ValueErrorType.Uint8Array, schema, path, value);\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);\n    }\n}\nfunction* FromUnknown(schema, references, path, value) { }\nfunction* FromVoid(schema, references, path, value) {\n    if (!TypeSystemPolicy.IsVoidLike(value))\n        yield Create(ValueErrorType.Void, schema, path, value);\n}\nfunction* FromKind(schema, references, path, value) {\n    const check = TypeRegistry.Get(schema[Kind]);\n    if (!check(schema, value))\n        yield Create(ValueErrorType.Kind, schema, path, value);\n}\nfunction* Visit(schema, references, path, value) {\n    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return yield* FromAny(schema_, references_, path, value);\n        case 'Argument':\n            return yield* FromArgument(schema_, references_, path, value);\n        case 'Array':\n            return yield* FromArray(schema_, references_, path, value);\n        case 'AsyncIterator':\n            return yield* FromAsyncIterator(schema_, references_, path, value);\n        case 'BigInt':\n            return yield* FromBigInt(schema_, references_, path, value);\n        case 'Boolean':\n            return yield* FromBoolean(schema_, references_, path, value);\n        case 'Constructor':\n            return yield* FromConstructor(schema_, references_, path, value);\n        case 'Date':\n            return yield* FromDate(schema_, references_, path, value);\n        case 'Function':\n            return yield* FromFunction(schema_, references_, path, value);\n        case 'Import':\n            return yield* FromImport(schema_, references_, path, value);\n        case 'Integer':\n            return yield* FromInteger(schema_, references_, path, value);\n        case 'Intersect':\n            return yield* FromIntersect(schema_, references_, path, value);\n        case 'Iterator':\n            return yield* FromIterator(schema_, references_, path, value);\n        case 'Literal':\n            return yield* FromLiteral(schema_, references_, path, value);\n        case 'Never':\n            return yield* FromNever(schema_, references_, path, value);\n        case 'Not':\n            return yield* FromNot(schema_, references_, path, value);\n        case 'Null':\n            return yield* FromNull(schema_, references_, path, value);\n        case 'Number':\n            return yield* FromNumber(schema_, references_, path, value);\n        case 'Object':\n            return yield* FromObject(schema_, references_, path, value);\n        case 'Promise':\n            return yield* FromPromise(schema_, references_, path, value);\n        case 'Record':\n            return yield* FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return yield* FromRef(schema_, references_, path, value);\n        case 'RegExp':\n            return yield* FromRegExp(schema_, references_, path, value);\n        case 'String':\n            return yield* FromString(schema_, references_, path, value);\n        case 'Symbol':\n            return yield* FromSymbol(schema_, references_, path, value);\n        case 'TemplateLiteral':\n            return yield* FromTemplateLiteral(schema_, references_, path, value);\n        case 'This':\n            return yield* FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return yield* FromTuple(schema_, references_, path, value);\n        case 'Undefined':\n            return yield* FromUndefined(schema_, references_, path, value);\n        case 'Union':\n            return yield* FromUnion(schema_, references_, path, value);\n        case 'Uint8Array':\n            return yield* FromUint8Array(schema_, references_, path, value);\n        case 'Unknown':\n            return yield* FromUnknown(schema_, references_, path, value);\n        case 'Void':\n            return yield* FromVoid(schema_, references_, path, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueErrorsUnknownTypeError(schema);\n            return yield* FromKind(schema_, references_, path, value);\n    }\n}\n/** Returns an iterator for each error in this value. */\nexport function Errors(...args) {\n    const iterator = args.length === 3 ? Visit(args[0], args[1], '', args[2]) : Visit(args[0], [], '', args[1]);\n    return new ValueErrorIterator(iterator);\n}\n", "import { Kind } from '../type/symbols/index.mjs';\nimport { ValueErrorType } from './errors.mjs';\n/** Creates an error message using en-US as the default locale */\nexport function DefaultErrorFunction(error) {\n    switch (error.errorType) {\n        case ValueErrorType.ArrayContains:\n            return 'Expected array to contain at least one matching value';\n        case ValueErrorType.ArrayMaxContains:\n            return `Expected array to contain no more than ${error.schema.maxContains} matching values`;\n        case ValueErrorType.ArrayMinContains:\n            return `Expected array to contain at least ${error.schema.minContains} matching values`;\n        case ValueErrorType.ArrayMaxItems:\n            return `Expected array length to be less or equal to ${error.schema.maxItems}`;\n        case ValueErrorType.ArrayMinItems:\n            return `Expected array length to be greater or equal to ${error.schema.minItems}`;\n        case ValueErrorType.ArrayUniqueItems:\n            return 'Expected array elements to be unique';\n        case ValueErrorType.Array:\n            return 'Expected array';\n        case ValueErrorType.AsyncIterator:\n            return 'Expected AsyncIterator';\n        case ValueErrorType.BigIntExclusiveMaximum:\n            return `Expected bigint to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.BigIntExclusiveMinimum:\n            return `Expected bigint to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.BigIntMaximum:\n            return `Expected bigint to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.BigIntMinimum:\n            return `Expected bigint to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.BigIntMultipleOf:\n            return `Expected bigint to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.BigInt:\n            return 'Expected bigint';\n        case ValueErrorType.Boolean:\n            return 'Expected boolean';\n        case ValueErrorType.DateExclusiveMinimumTimestamp:\n            return `Expected Date timestamp to be greater than ${error.schema.exclusiveMinimumTimestamp}`;\n        case ValueErrorType.DateExclusiveMaximumTimestamp:\n            return `Expected Date timestamp to be less than ${error.schema.exclusiveMaximumTimestamp}`;\n        case ValueErrorType.DateMinimumTimestamp:\n            return `Expected Date timestamp to be greater or equal to ${error.schema.minimumTimestamp}`;\n        case ValueErrorType.DateMaximumTimestamp:\n            return `Expected Date timestamp to be less or equal to ${error.schema.maximumTimestamp}`;\n        case ValueErrorType.DateMultipleOfTimestamp:\n            return `Expected Date timestamp to be a multiple of ${error.schema.multipleOfTimestamp}`;\n        case ValueErrorType.Date:\n            return 'Expected Date';\n        case ValueErrorType.Function:\n            return 'Expected function';\n        case ValueErrorType.IntegerExclusiveMaximum:\n            return `Expected integer to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.IntegerExclusiveMinimum:\n            return `Expected integer to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.IntegerMaximum:\n            return `Expected integer to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.IntegerMinimum:\n            return `Expected integer to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.IntegerMultipleOf:\n            return `Expected integer to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Integer:\n            return 'Expected integer';\n        case ValueErrorType.IntersectUnevaluatedProperties:\n            return 'Unexpected property';\n        case ValueErrorType.Intersect:\n            return 'Expected all values to match';\n        case ValueErrorType.Iterator:\n            return 'Expected Iterator';\n        case ValueErrorType.Literal:\n            return `Expected ${typeof error.schema.const === 'string' ? `'${error.schema.const}'` : error.schema.const}`;\n        case ValueErrorType.Never:\n            return 'Never';\n        case ValueErrorType.Not:\n            return 'Value should not match';\n        case ValueErrorType.Null:\n            return 'Expected null';\n        case ValueErrorType.NumberExclusiveMaximum:\n            return `Expected number to be less than ${error.schema.exclusiveMaximum}`;\n        case ValueErrorType.NumberExclusiveMinimum:\n            return `Expected number to be greater than ${error.schema.exclusiveMinimum}`;\n        case ValueErrorType.NumberMaximum:\n            return `Expected number to be less or equal to ${error.schema.maximum}`;\n        case ValueErrorType.NumberMinimum:\n            return `Expected number to be greater or equal to ${error.schema.minimum}`;\n        case ValueErrorType.NumberMultipleOf:\n            return `Expected number to be a multiple of ${error.schema.multipleOf}`;\n        case ValueErrorType.Number:\n            return 'Expected number';\n        case ValueErrorType.Object:\n            return 'Expected object';\n        case ValueErrorType.ObjectAdditionalProperties:\n            return 'Unexpected property';\n        case ValueErrorType.ObjectMaxProperties:\n            return `Expected object to have no more than ${error.schema.maxProperties} properties`;\n        case ValueErrorType.ObjectMinProperties:\n            return `Expected object to have at least ${error.schema.minProperties} properties`;\n        case ValueErrorType.ObjectRequiredProperty:\n            return 'Expected required property';\n        case ValueErrorType.Promise:\n            return 'Expected Promise';\n        case ValueErrorType.RegExp:\n            return 'Expected string to match regular expression';\n        case ValueErrorType.StringFormatUnknown:\n            return `Unknown format '${error.schema.format}'`;\n        case ValueErrorType.StringFormat:\n            return `Expected string to match '${error.schema.format}' format`;\n        case ValueErrorType.StringMaxLength:\n            return `Expected string length less or equal to ${error.schema.maxLength}`;\n        case ValueErrorType.StringMinLength:\n            return `Expected string length greater or equal to ${error.schema.minLength}`;\n        case ValueErrorType.StringPattern:\n            return `Expected string to match '${error.schema.pattern}'`;\n        case ValueErrorType.String:\n            return 'Expected string';\n        case ValueErrorType.Symbol:\n            return 'Expected symbol';\n        case ValueErrorType.TupleLength:\n            return `Expected tuple to have ${error.schema.maxItems || 0} elements`;\n        case ValueErrorType.Tuple:\n            return 'Expected tuple';\n        case ValueErrorType.Uint8ArrayMaxByteLength:\n            return `Expected byte length less or equal to ${error.schema.maxByteLength}`;\n        case ValueErrorType.Uint8ArrayMinByteLength:\n            return `Expected byte length greater or equal to ${error.schema.minByteLength}`;\n        case ValueErrorType.Uint8Array:\n            return 'Expected Uint8Array';\n        case ValueErrorType.Undefined:\n            return 'Expected undefined';\n        case ValueErrorType.Union:\n            return 'Expected union value';\n        case ValueErrorType.Void:\n            return 'Expected void';\n        case ValueErrorType.Kind:\n            return `Expected kind '${error.schema[Kind]}'`;\n        default:\n            return 'Unknown error type';\n    }\n}\n/** Manages error message providers */\nlet errorFunction = DefaultErrorFunction;\n/** Sets the error function used to generate error messages. */\nexport function SetErrorFunction(callback) {\n    errorFunction = callback;\n}\n/** Gets the error function used to generate error messages */\nexport function GetErrorFunction() {\n    return errorFunction;\n}\n", "import { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { IsString } from '../guard/guard.mjs';\nexport class TypeDereferenceError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unable to dereference schema with $id '${schema.$ref}'`);\n        this.schema = schema;\n    }\n}\nfunction Resolve(schema, references) {\n    const target = references.find((target) => target.$id === schema.$ref);\n    if (target === undefined)\n        throw new TypeDereferenceError(schema);\n    return Deref(target, references);\n}\n/** `[Internal]` Pushes a schema onto references if the schema has an $id and does not exist on references */\nexport function Pushref(schema, references) {\n    if (!IsString(schema.$id) || references.some((target) => target.$id === schema.$id))\n        return references;\n    references.push(schema);\n    return references;\n}\n/** `[Internal]` Dereferences a schema from the references array or throws if not found */\nexport function Deref(schema, references) {\n    // prettier-ignore\n    return (schema[Kind] === 'This' || schema[Kind] === 'Ref')\n        ? Resolve(schema, references)\n        : schema;\n}\n", "import { IsArray, IsBoolean, IsBigInt, IsDate, IsNull, IsNumber, IsObject, IsString, IsSymbol, IsUint8Array, IsUndefined } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueHashError extends TypeBoxError {\n    constructor(value) {\n        super(`Unable to hash value`);\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// ByteMarker\n// ------------------------------------------------------------------\nvar ByteMarker;\n(function (ByteMarker) {\n    ByteMarker[ByteMarker[\"Undefined\"] = 0] = \"Undefined\";\n    ByteMarker[ByteMarker[\"Null\"] = 1] = \"Null\";\n    ByteMarker[ByteMarker[\"Boolean\"] = 2] = \"Boolean\";\n    ByteMarker[ByteMarker[\"Number\"] = 3] = \"Number\";\n    ByteMarker[ByteMarker[\"String\"] = 4] = \"String\";\n    ByteMarker[ByteMarker[\"Object\"] = 5] = \"Object\";\n    ByteMarker[ByteMarker[\"Array\"] = 6] = \"Array\";\n    ByteMarker[ByteMarker[\"Date\"] = 7] = \"Date\";\n    ByteMarker[ByteMarker[\"Uint8Array\"] = 8] = \"Uint8Array\";\n    ByteMarker[ByteMarker[\"Symbol\"] = 9] = \"Symbol\";\n    ByteMarker[ByteMarker[\"BigInt\"] = 10] = \"BigInt\";\n})(ByteMarker || (ByteMarker = {}));\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nlet Accumulator = BigInt('14695981039346656037');\nconst [Prime, Size] = [BigInt('1099511628211'), BigInt('18446744073709551616' /* 2 ^ 64 */)];\nconst Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));\nconst F64 = new Float64Array(1);\nconst F64In = new DataView(F64.buffer);\nconst F64Out = new Uint8Array(F64.buffer);\n// ------------------------------------------------------------------\n// NumberToBytes\n// ------------------------------------------------------------------\nfunction* NumberToBytes(value) {\n    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);\n    for (let i = 0; i < byteCount; i++) {\n        yield (value >> (8 * (byteCount - 1 - i))) & 0xff;\n    }\n}\n// ------------------------------------------------------------------\n// Hashing Functions\n// ------------------------------------------------------------------\nfunction ArrayType(value) {\n    FNV1A64(ByteMarker.Array);\n    for (const item of value) {\n        Visit(item);\n    }\n}\nfunction BooleanType(value) {\n    FNV1A64(ByteMarker.Boolean);\n    FNV1A64(value ? 1 : 0);\n}\nfunction BigIntType(value) {\n    FNV1A64(ByteMarker.BigInt);\n    F64In.setBigInt64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction DateType(value) {\n    FNV1A64(ByteMarker.Date);\n    Visit(value.getTime());\n}\nfunction NullType(value) {\n    FNV1A64(ByteMarker.Null);\n}\nfunction NumberType(value) {\n    FNV1A64(ByteMarker.Number);\n    F64In.setFloat64(0, value);\n    for (const byte of F64Out) {\n        FNV1A64(byte);\n    }\n}\nfunction ObjectType(value) {\n    FNV1A64(ByteMarker.Object);\n    for (const key of globalThis.Object.getOwnPropertyNames(value).sort()) {\n        Visit(key);\n        Visit(value[key]);\n    }\n}\nfunction StringType(value) {\n    FNV1A64(ByteMarker.String);\n    for (let i = 0; i < value.length; i++) {\n        for (const byte of NumberToBytes(value.charCodeAt(i))) {\n            FNV1A64(byte);\n        }\n    }\n}\nfunction SymbolType(value) {\n    FNV1A64(ByteMarker.Symbol);\n    Visit(value.description);\n}\nfunction Uint8ArrayType(value) {\n    FNV1A64(ByteMarker.Uint8Array);\n    for (let i = 0; i < value.length; i++) {\n        FNV1A64(value[i]);\n    }\n}\nfunction UndefinedType(value) {\n    return FNV1A64(ByteMarker.Undefined);\n}\nfunction Visit(value) {\n    if (IsArray(value))\n        return ArrayType(value);\n    if (IsBoolean(value))\n        return BooleanType(value);\n    if (IsBigInt(value))\n        return BigIntType(value);\n    if (IsDate(value))\n        return DateType(value);\n    if (IsNull(value))\n        return NullType(value);\n    if (IsNumber(value))\n        return NumberType(value);\n    if (IsObject(value))\n        return ObjectType(value);\n    if (IsString(value))\n        return StringType(value);\n    if (IsSymbol(value))\n        return SymbolType(value);\n    if (IsUint8Array(value))\n        return Uint8ArrayType(value);\n    if (IsUndefined(value))\n        return UndefinedType(value);\n    throw new ValueHashError(value);\n}\nfunction FNV1A64(byte) {\n    Accumulator = Accumulator ^ Bytes[byte];\n    Accumulator = (Accumulator * Prime) % Size;\n}\n// ------------------------------------------------------------------\n// Hash\n// ------------------------------------------------------------------\n/** Creates a FNV1A-64 non cryptographic hash of the given value */\nexport function Hash(value) {\n    Accumulator = BigInt('14695981039346656037');\n    Visit(value);\n    return Accumulator;\n}\n", "import { TypeSystemPolicy } from '../../system/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Hash } from '../hash/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { KeyOfPattern } from '../../type/keyof/index.mjs';\nimport { ExtendsUndefinedCheck } from '../../type/extends/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../../type/registry/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Never } from '../../type/never/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsUint8Array, IsDate, IsPromise, IsFunction, IsAsyncIterator, IsIterator, IsBoolean, IsNumber, IsBigInt, IsString, IsSymbol, IsInteger, IsNull, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCheckUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super(`Unknown type`);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// TypeGuards\n// ------------------------------------------------------------------\nfunction IsAnyOrUnknown(schema) {\n    return schema[Kind] === 'Any' || schema[Kind] === 'Unknown';\n}\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nfunction IsDefined(value) {\n    return value !== undefined;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromAny(schema, references, value) {\n    return true;\n}\nfunction FromArgument(schema, references, value) {\n    return true;\n}\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return false;\n    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {\n        return false;\n    }\n    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {\n        return false;\n    }\n    if (!value.every((value) => Visit(schema.items, references, value))) {\n        return false;\n    }\n    // prettier-ignore\n    if (schema.uniqueItems === true && !((function () { const set = new Set(); for (const element of value) {\n        const hashed = Hash(element);\n        if (set.has(hashed)) {\n            return false;\n        }\n        else {\n            set.add(hashed);\n        }\n    } return true; })())) {\n        return false;\n    }\n    // contains\n    if (!(IsDefined(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains))) {\n        return true; // exit\n    }\n    const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();\n    const containsCount = value.reduce((acc, value) => (Visit(containsSchema, references, value) ? acc + 1 : acc), 0);\n    if (containsCount === 0) {\n        return false;\n    }\n    if (IsNumber(schema.minContains) && containsCount < schema.minContains) {\n        return false;\n    }\n    if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {\n        return false;\n    }\n    return true;\n}\nfunction FromAsyncIterator(schema, references, value) {\n    return IsAsyncIterator(value);\n}\nfunction FromBigInt(schema, references, value) {\n    if (!IsBigInt(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {\n        return false;\n    }\n    return true;\n}\nfunction FromBoolean(schema, references, value) {\n    return IsBoolean(value);\n}\nfunction FromConstructor(schema, references, value) {\n    return Visit(schema.returns, references, value.prototype);\n}\nfunction FromDate(schema, references, value) {\n    if (!IsDate(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromFunction(schema, references, value) {\n    return IsFunction(value);\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromInteger(schema, references, value) {\n    if (!IsInteger(value)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromIntersect(schema, references, value) {\n    const check1 = schema.allOf.every((schema) => Visit(schema, references, value));\n    if (schema.unevaluatedProperties === false) {\n        const keyPattern = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyPattern.test(key));\n        return check1 && check2;\n    }\n    else if (IsSchema(schema.unevaluatedProperties)) {\n        const keyCheck = new RegExp(KeyOfPattern(schema));\n        const check2 = Object.getOwnPropertyNames(value).every((key) => keyCheck.test(key) || Visit(schema.unevaluatedProperties, references, value[key]));\n        return check1 && check2;\n    }\n    else {\n        return check1;\n    }\n}\nfunction FromIterator(schema, references, value) {\n    return IsIterator(value);\n}\nfunction FromLiteral(schema, references, value) {\n    return value === schema.const;\n}\nfunction FromNever(schema, references, value) {\n    return false;\n}\nfunction FromNot(schema, references, value) {\n    return !Visit(schema.not, references, value);\n}\nfunction FromNull(schema, references, value) {\n    return IsNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    if (!TypeSystemPolicy.IsNumberLike(value))\n        return false;\n    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {\n        return false;\n    }\n    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {\n        return false;\n    }\n    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {\n        return false;\n    }\n    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {\n        return false;\n    }\n    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {\n        return false;\n    }\n    return true;\n}\nfunction FromObject(schema, references, value) {\n    if (!TypeSystemPolicy.IsObjectLike(value))\n        return false;\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const knownKeys = Object.getOwnPropertyNames(schema.properties);\n    for (const knownKey of knownKeys) {\n        const property = schema.properties[knownKey];\n        if (schema.required && schema.required.includes(knownKey)) {\n            if (!Visit(property, references, value[knownKey])) {\n                return false;\n            }\n            if ((ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property)) && !(knownKey in value)) {\n                return false;\n            }\n        }\n        else {\n            if (TypeSystemPolicy.IsExactOptionalProperty(value, knownKey) && !Visit(property, references, value[knownKey])) {\n                return false;\n            }\n        }\n    }\n    if (schema.additionalProperties === false) {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        // optimization: value is valid if schemaKey length matches the valueKey length\n        if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {\n            return true;\n        }\n        else {\n            return valueKeys.every((valueKey) => knownKeys.includes(valueKey));\n        }\n    }\n    else if (typeof schema.additionalProperties === 'object') {\n        const valueKeys = Object.getOwnPropertyNames(value);\n        return valueKeys.every((key) => knownKeys.includes(key) || Visit(schema.additionalProperties, references, value[key]));\n    }\n    else {\n        return true;\n    }\n}\nfunction FromPromise(schema, references, value) {\n    return IsPromise(value);\n}\nfunction FromRecord(schema, references, value) {\n    if (!TypeSystemPolicy.IsRecordLike(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {\n        return false;\n    }\n    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {\n        return false;\n    }\n    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n    const regex = new RegExp(patternKey);\n    // prettier-ignore\n    const check1 = Object.entries(value).every(([key, value]) => {\n        return (regex.test(key)) ? Visit(patternSchema, references, value) : true;\n    });\n    // prettier-ignore\n    const check2 = typeof schema.additionalProperties === 'object' ? Object.entries(value).every(([key, value]) => {\n        return (!regex.test(key)) ? Visit(schema.additionalProperties, references, value) : true;\n    }) : true;\n    const check3 = schema.additionalProperties === false\n        ? Object.getOwnPropertyNames(value).every((key) => {\n            return regex.test(key);\n        })\n        : true;\n    return check1 && check2 && check3;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromRegExp(schema, references, value) {\n    const regex = new RegExp(schema.source, schema.flags);\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    return regex.test(value);\n}\nfunction FromString(schema, references, value) {\n    if (!IsString(value)) {\n        return false;\n    }\n    if (IsDefined(schema.minLength)) {\n        if (!(value.length >= schema.minLength))\n            return false;\n    }\n    if (IsDefined(schema.maxLength)) {\n        if (!(value.length <= schema.maxLength))\n            return false;\n    }\n    if (IsDefined(schema.pattern)) {\n        const regex = new RegExp(schema.pattern);\n        if (!regex.test(value))\n            return false;\n    }\n    if (IsDefined(schema.format)) {\n        if (!FormatRegistry.Has(schema.format))\n            return false;\n        const func = FormatRegistry.Get(schema.format);\n        return func(value);\n    }\n    return true;\n}\nfunction FromSymbol(schema, references, value) {\n    return IsSymbol(value);\n}\nfunction FromTemplateLiteral(schema, references, value) {\n    return IsString(value) && new RegExp(schema.pattern).test(value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value)) {\n        return false;\n    }\n    if (schema.items === undefined && !(value.length === 0)) {\n        return false;\n    }\n    if (!(value.length === schema.maxItems)) {\n        return false;\n    }\n    if (!schema.items) {\n        return true;\n    }\n    for (let i = 0; i < schema.items.length; i++) {\n        if (!Visit(schema.items[i], references, value[i]))\n            return false;\n    }\n    return true;\n}\nfunction FromUndefined(schema, references, value) {\n    return IsUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    return schema.anyOf.some((inner) => Visit(inner, references, value));\n}\nfunction FromUint8Array(schema, references, value) {\n    if (!IsUint8Array(value)) {\n        return false;\n    }\n    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {\n        return false;\n    }\n    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {\n        return false;\n    }\n    return true;\n}\nfunction FromUnknown(schema, references, value) {\n    return true;\n}\nfunction FromVoid(schema, references, value) {\n    return TypeSystemPolicy.IsVoidLike(value);\n}\nfunction FromKind(schema, references, value) {\n    if (!TypeRegistry.Has(schema[Kind]))\n        return false;\n    const func = TypeRegistry.Get(schema[Kind]);\n    return func(schema, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsDefined(schema.$id) ? Pushref(schema, references) : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_, value);\n        case 'Argument':\n            return FromArgument(schema_, references_, value);\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Function':\n            return FromFunction(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Iterator':\n            return FromIterator(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Not':\n            return FromNot(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Promise':\n            return FromPromise(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'RegExp':\n            return FromRegExp(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_, value);\n        case 'Unknown':\n            return FromUnknown(schema_, references_, value);\n        case 'Void':\n            return FromVoid(schema_, references_, value);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCheckUnknownTypeError(schema_);\n            return FromKind(schema_, references_, value);\n    }\n}\n/** Returns true if the value matches the given type. */\nexport function Check(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AssertError_instances, _AssertError_iterator, _AssertError_Iterator;\nimport { Errors, ValueErrorIterator } from '../../errors/index.mjs';\nimport { TypeBoxError } from '../../type/error/error.mjs';\nimport { Check } from '../check/check.mjs';\n// ------------------------------------------------------------------\n// AssertError\n// ------------------------------------------------------------------\nexport class AssertError extends TypeBoxError {\n    constructor(iterator) {\n        const error = iterator.First();\n        super(error === undefined ? 'Invalid Value' : error.message);\n        _AssertError_instances.add(this);\n        _AssertError_iterator.set(this, void 0);\n        __classPrivateFieldSet(this, _AssertError_iterator, iterator, \"f\");\n        this.error = error;\n    }\n    /** Returns an iterator for each error in this value. */\n    Errors() {\n        return new ValueErrorIterator(__classPrivateFieldGet(this, _AssertError_instances, \"m\", _AssertError_Iterator).call(this));\n    }\n}\n_AssertError_iterator = new WeakMap(), _AssertError_instances = new WeakSet(), _AssertError_Iterator = function* _AssertError_Iterator() {\n    if (this.error)\n        yield this.error;\n    yield* __classPrivateFieldGet(this, _AssertError_iterator, \"f\");\n};\n// ------------------------------------------------------------------\n// AssertValue\n// ------------------------------------------------------------------\nfunction AssertValue(schema, references, value) {\n    if (Check(schema, references, value))\n        return;\n    throw new AssertError(Errors(schema, references, value));\n}\n/** Asserts a value matches the given type or throws an `AssertError` if invalid */\nexport function Assert(...args) {\n    return args.length === 3 ? AssertValue(args[0], args[1], args[2]) : AssertValue(args[0], [], args[1]);\n}\n", "import { IsObject, IsArray, IsString, IsNumber, IsNull } from '../guard/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { Create } from '../create/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCastError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// The following logic assigns a score to a schema based on how well\n// it matches a given value. For object types, the score is calculated\n// by evaluating each property of the value against the schema's\n// properties. To avoid bias towards objects with many properties,\n// each property contributes equally to the total score. Properties\n// that exactly match literal values receive the highest possible\n// score, as literals are often used as discriminators in union types.\n// ------------------------------------------------------------------\nfunction ScoreUnion(schema, references, value) {\n    if (schema[Kind] === 'Object' && typeof value === 'object' && !IsNull(value)) {\n        const object = schema;\n        const keys = Object.getOwnPropertyNames(value);\n        const entries = Object.entries(object.properties);\n        return entries.reduce((acc, [key, schema]) => {\n            const literal = schema[Kind] === 'Literal' && schema.const === value[key] ? 100 : 0;\n            const checks = Check(schema, references, value[key]) ? 10 : 0;\n            const exists = keys.includes(key) ? 1 : 0;\n            return acc + (literal + checks + exists);\n        }, 0);\n    }\n    else if (schema[Kind] === 'Union') {\n        const schemas = schema.anyOf.map((schema) => Deref(schema, references));\n        const scores = schemas.map((schema) => ScoreUnion(schema, references, value));\n        return Math.max(...scores);\n    }\n    else {\n        return Check(schema, references, value) ? 1 : 0;\n    }\n}\nfunction SelectUnion(union, references, value) {\n    const schemas = union.anyOf.map((schema) => Deref(schema, references));\n    let [select, best] = [schemas[0], 0];\n    for (const schema of schemas) {\n        const score = ScoreUnion(schema, references, value);\n        if (score > best) {\n            select = schema;\n            best = score;\n        }\n    }\n    return select;\n}\nfunction CastUnion(union, references, value) {\n    if ('default' in union) {\n        return typeof value === 'function' ? union.default : Clone(union.default);\n    }\n    else {\n        const schema = SelectUnion(union, references, value);\n        return Cast(schema, references, value);\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction DefaultClone(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : Create(schema, references);\n}\nfunction Default(schema, references, value) {\n    return Check(schema, references, value) ? value : Create(schema, references);\n}\n// ------------------------------------------------------------------\n// Cast\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    const created = IsArray(value) ? Clone(value) : Create(schema, references);\n    const minimum = IsNumber(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;\n    const maximum = IsNumber(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;\n    const casted = maximum.map((value) => Visit(schema.items, references, value));\n    if (schema.uniqueItems !== true)\n        return casted;\n    const unique = [...new Set(casted)];\n    if (!Check(schema, references, unique))\n        throw new ValueCastError(schema, 'Array cast produced invalid data due to uniqueItems constraint');\n    return unique;\n}\nfunction FromConstructor(schema, references, value) {\n    if (Check(schema, references, value))\n        return Create(schema, references);\n    const required = new Set(schema.returns.required || []);\n    const result = function () { };\n    for (const [key, property] of Object.entries(schema.returns.properties)) {\n        if (!required.has(key) && value.prototype[key] === undefined)\n            continue;\n        result.prototype[key] = Visit(property, references, value.prototype[key]);\n    }\n    return result;\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\n// ------------------------------------------------------------------\n// Intersect\n// ------------------------------------------------------------------\nfunction IntersectAssign(correct, value) {\n    // trust correct on mismatch | value on non-object\n    if ((IsObject(correct) && !IsObject(value)) || (!IsObject(correct) && IsObject(value)))\n        return correct;\n    if (!IsObject(correct) || !IsObject(value))\n        return value;\n    return globalThis.Object.getOwnPropertyNames(correct).reduce((result, key) => {\n        const property = key in value ? IntersectAssign(correct[key], value[key]) : correct[key];\n        return { ...result, [key]: property };\n    }, {});\n}\nfunction FromIntersect(schema, references, value) {\n    if (Check(schema, references, value))\n        return value;\n    const correct = Create(schema, references);\n    const assigned = IntersectAssign(correct, value);\n    return Check(schema, references, assigned) ? assigned : correct;\n}\nfunction FromNever(schema, references, value) {\n    throw new ValueCastError(schema, 'Never types cannot be cast');\n}\nfunction FromObject(schema, references, value) {\n    if (Check(schema, references, value))\n        return value;\n    if (value === null || typeof value !== 'object')\n        return Create(schema, references);\n    const required = new Set(schema.required || []);\n    const result = {};\n    for (const [key, property] of Object.entries(schema.properties)) {\n        if (!required.has(key) && value[key] === undefined)\n            continue;\n        result[key] = Visit(property, references, value[key]);\n    }\n    // additional schema properties\n    if (typeof schema.additionalProperties === 'object') {\n        const propertyNames = Object.getOwnPropertyNames(schema.properties);\n        for (const propertyName of Object.getOwnPropertyNames(value)) {\n            if (propertyNames.includes(propertyName))\n                continue;\n            result[propertyName] = Visit(schema.additionalProperties, references, value[propertyName]);\n        }\n    }\n    return result;\n}\nfunction FromRecord(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (value === null || typeof value !== 'object' || Array.isArray(value) || value instanceof Date)\n        return Create(schema, references);\n    const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const subschema = schema.patternProperties[subschemaPropertyName];\n    const result = {};\n    for (const [propKey, propValue] of Object.entries(value)) {\n        result[propKey] = Visit(subschema, references, propValue);\n    }\n    return result;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (Check(schema, references, value))\n        return Clone(value);\n    if (!IsArray(value))\n        return Create(schema, references);\n    if (schema.items === undefined)\n        return [];\n    return schema.items.map((schema, index) => Visit(schema, references, value[index]));\n}\nfunction FromUnion(schema, references, value) {\n    return Check(schema, references, value) ? Clone(value) : CastUnion(schema, references, value);\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? Pushref(schema, references) : references;\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        // --------------------------------------------------------------\n        // Structural\n        // --------------------------------------------------------------\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Constructor':\n            return FromConstructor(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Never':\n            return FromNever(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        // --------------------------------------------------------------\n        // DefaultClone\n        // --------------------------------------------------------------\n        case 'Date':\n        case 'Symbol':\n        case 'Uint8Array':\n            return DefaultClone(schema, references, value);\n        // --------------------------------------------------------------\n        // Default\n        // --------------------------------------------------------------\n        default:\n            return Default(schema_, references_, value);\n    }\n}\n/** Casts a value into a given type. The return value will retain as much information of the original value as possible. */\nexport function Cast(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { HasPropertyKey } from '../guard/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { TemplateLiteralGenerate, IsTemplateLiteralFinite } from '../../type/template-literal/index.mjs';\nimport { TypeRegistry } from '../../type/registry/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { IsFunction } from '../guard/guard.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueCreateError extends TypeBoxError {\n    constructor(schema, message) {\n        super(message);\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction FromDefault(value) {\n    return IsFunction(value) ? value() : Clone(value);\n}\n// ------------------------------------------------------------------\n// Create\n// ------------------------------------------------------------------\nfunction FromAny(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromArgument(schema, references) {\n    return {};\n}\nfunction FromArray(schema, references) {\n    if (schema.uniqueItems === true && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the uniqueItems constraint requires a default value');\n    }\n    else if ('contains' in schema && !HasPropertyKey(schema, 'default')) {\n        throw new ValueCreateError(schema, 'Array with the contains constraint requires a default value');\n    }\n    else if ('default' in schema) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minItems !== undefined) {\n        return Array.from({ length: schema.minItems }).map((item) => {\n            return Visit(schema.items, references);\n        });\n    }\n    else {\n        return [];\n    }\n}\nfunction FromAsyncIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (async function* () { })();\n    }\n}\nfunction FromBigInt(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return BigInt(0);\n    }\n}\nfunction FromBoolean(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return false;\n    }\n}\nfunction FromConstructor(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const value = Visit(schema.returns, references);\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            return class {\n                constructor() {\n                    for (const [key, val] of Object.entries(value)) {\n                        const self = this;\n                        self[key] = val;\n                    }\n                }\n            };\n        }\n        else {\n            return class {\n            };\n        }\n    }\n}\nfunction FromDate(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimumTimestamp !== undefined) {\n        return new Date(schema.minimumTimestamp);\n    }\n    else {\n        return new Date();\n    }\n}\nfunction FromFunction(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return () => Visit(schema.returns, references);\n    }\n}\nfunction FromImport(schema, references) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions]);\n}\nfunction FromInteger(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromIntersect(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        // --------------------------------------------------------------\n        // Note: The best we can do here is attempt to instance each\n        // sub type and apply through object assign. For non-object\n        // sub types, we just escape the assignment and just return\n        // the value. In the latter case, this is typically going to\n        // be a consequence of an illogical intersection.\n        // --------------------------------------------------------------\n        const value = schema.allOf.reduce((acc, schema) => {\n            const next = Visit(schema, references);\n            return typeof next === 'object' ? { ...acc, ...next } : next;\n        }, {});\n        if (!Check(schema, references, value))\n            throw new ValueCreateError(schema, 'Intersect produced invalid value. Consider using a default value.');\n        return value;\n    }\n}\nfunction FromIterator(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return (function* () { })();\n    }\n}\nfunction FromLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return schema.const;\n    }\n}\nfunction FromNever(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Never types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromNot(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'Not types must have a default value');\n    }\n}\nfunction FromNull(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return null;\n    }\n}\nfunction FromNumber(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minimum !== undefined) {\n        return schema.minimum;\n    }\n    else {\n        return 0;\n    }\n}\nfunction FromObject(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        const required = new Set(schema.required);\n        const Acc = {};\n        for (const [key, subschema] of Object.entries(schema.properties)) {\n            if (!required.has(key))\n                continue;\n            Acc[key] = Visit(subschema, references);\n        }\n        return Acc;\n    }\n}\nfunction FromPromise(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Promise.resolve(Visit(schema.item, references));\n    }\n}\nfunction FromRecord(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromRef(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromRegExp(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new ValueCreateError(schema, 'RegExp types cannot be created. Consider using a default value.');\n    }\n}\nfunction FromString(schema, references) {\n    if (schema.pattern !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with patterns must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else if (schema.format !== undefined) {\n        if (!HasPropertyKey(schema, 'default')) {\n            throw new ValueCreateError(schema, 'String types with formats must specify a default value');\n        }\n        else {\n            return FromDefault(schema.default);\n        }\n    }\n    else {\n        if (HasPropertyKey(schema, 'default')) {\n            return FromDefault(schema.default);\n        }\n        else if (schema.minLength !== undefined) {\n            // prettier-ignore\n            return Array.from({ length: schema.minLength }).map(() => ' ').join('');\n        }\n        else {\n            return '';\n        }\n    }\n}\nfunction FromSymbol(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if ('value' in schema) {\n        return Symbol.for(schema.value);\n    }\n    else {\n        return Symbol();\n    }\n}\nfunction FromTemplateLiteral(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (!IsTemplateLiteralFinite(schema))\n        throw new ValueCreateError(schema, 'Can only create template literals that produce a finite variants. Consider using a default value.');\n    const generated = TemplateLiteralGenerate(schema);\n    return generated[0];\n}\nfunction FromThis(schema, references) {\n    if (recursiveDepth++ > recursiveMaxDepth)\n        throw new ValueCreateError(schema, 'Cannot create recursive type as it appears possibly infinite. Consider using a default.');\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return Visit(Deref(schema, references), references);\n    }\n}\nfunction FromTuple(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    if (schema.items === undefined) {\n        return [];\n    }\n    else {\n        return Array.from({ length: schema.minItems }).map((_, index) => Visit(schema.items[index], references));\n    }\n}\nfunction FromUndefined(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return undefined;\n    }\n}\nfunction FromUnion(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.anyOf.length === 0) {\n        throw new Error('ValueCreate.Union: Cannot create Union with zero variants');\n    }\n    else {\n        return Visit(schema.anyOf[0], references);\n    }\n}\nfunction FromUint8Array(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else if (schema.minByteLength !== undefined) {\n        return new Uint8Array(schema.minByteLength);\n    }\n    else {\n        return new Uint8Array(0);\n    }\n}\nfunction FromUnknown(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return {};\n    }\n}\nfunction FromVoid(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        return void 0;\n    }\n}\nfunction FromKind(schema, references) {\n    if (HasPropertyKey(schema, 'default')) {\n        return FromDefault(schema.default);\n    }\n    else {\n        throw new Error('User defined types must specify a default value');\n    }\n}\nfunction Visit(schema, references) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Any':\n            return FromAny(schema_, references_);\n        case 'Argument':\n            return FromArgument(schema_, references_);\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'BigInt':\n            return FromBigInt(schema_, references_);\n        case 'Boolean':\n            return FromBoolean(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Date':\n            return FromDate(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Import':\n            return FromImport(schema_, references_);\n        case 'Integer':\n            return FromInteger(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Literal':\n            return FromLiteral(schema_, references_);\n        case 'Never':\n            return FromNever(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Null':\n            return FromNull(schema_, references_);\n        case 'Number':\n            return FromNumber(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'RegExp':\n            return FromRegExp(schema_, references_);\n        case 'String':\n            return FromString(schema_, references_);\n        case 'Symbol':\n            return FromSymbol(schema_, references_);\n        case 'TemplateLiteral':\n            return FromTemplateLiteral(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Undefined':\n            return FromUndefined(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        case 'Uint8Array':\n            return FromUint8Array(schema_, references_);\n        case 'Unknown':\n            return FromUnknown(schema_, references_);\n        case 'Void':\n            return FromVoid(schema_, references_);\n        default:\n            if (!TypeRegistry.Has(schema_[Kind]))\n                throw new ValueCreateError(schema_, 'Unknown type');\n            return FromKind(schema_, references_);\n    }\n}\n// ------------------------------------------------------------------\n// State\n// ------------------------------------------------------------------\nconst recursiveMaxDepth = 512;\nlet recursiveDepth = 0;\n/** Creates a value from the given schema */\nexport function Create(...args) {\n    recursiveDepth = 0;\n    return args.length === 2 ? Visit(args[0], args[1]) : Visit(args[0], []);\n}\n", "// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsMap, IsSet, IsObject, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Clonable\n// ------------------------------------------------------------------\nfunction FromObject(value) {\n    const Acc = {};\n    for (const key of Object.getOwnPropertyNames(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    for (const key of Object.getOwnPropertySymbols(value)) {\n        Acc[key] = Clone(value[key]);\n    }\n    return Acc;\n}\nfunction FromArray(value) {\n    return value.map((element) => Clone(element));\n}\nfunction FromTypedArray(value) {\n    return value.slice();\n}\nfunction FromMap(value) {\n    return new Map(Clone([...value.entries()]));\n}\nfunction FromSet(value) {\n    return new Set(Clone([...value.entries()]));\n}\nfunction FromDate(value) {\n    return new Date(value.toISOString());\n}\nfunction FromValue(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Clone\n// ------------------------------------------------------------------\n/** Returns a clone of the given value */\nexport function Clone(value) {\n    if (IsArray(value))\n        return FromArray(value);\n    if (IsDate(value))\n        return FromDate(value);\n    if (IsTypedArray(value))\n        return FromTypedArray(value);\n    if (IsMap(value))\n        return FromMap(value);\n    if (IsSet(value))\n        return FromSet(value);\n    if (IsObject(value))\n        return FromObject(value);\n    if (IsValueType(value))\n        return FromValue(value);\n    throw new Error('ValueClone: Unable to clone value');\n}\n", "import { KeyOfPropertyKeys } from '../../type/keyof/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { HasPropertyKey, IsString, IsObject, IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\n// prettier-ignore\nimport { IsKind } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// IsCheckable\n// ------------------------------------------------------------------\nfunction IsCheckable(schema) {\n    return IsKind(schema) && schema[Kind] !== 'Unsafe';\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    return value.map((value) => Visit(schema.items, references, value));\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromIntersect(schema, references, value) {\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const intersections = schema.allOf.map((schema) => Visit(schema, references, Clone(value)));\n    const composite = intersections.reduce((acc, value) => (IsObject(value) ? { ...acc, ...value } : value), {});\n    if (!IsObject(value) || !IsObject(composite) || !IsKind(unevaluatedProperties))\n        return composite;\n    const knownkeys = KeyOfPropertyKeys(schema);\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (knownkeys.includes(key))\n            continue;\n        if (Check(unevaluatedProperties, references, value[key])) {\n            composite[key] = Visit(unevaluatedProperties, references, value[key]);\n        }\n    }\n    return composite;\n}\nfunction FromObject(schema, references, value) {\n    if (!IsObject(value) || IsArray(value))\n        return value; // Check IsArray for AllowArrayObject configuration\n    const additionalProperties = schema.additionalProperties;\n    for (const key of Object.getOwnPropertyNames(value)) {\n        if (HasPropertyKey(schema.properties, key)) {\n            value[key] = Visit(schema.properties[key], references, value[key]);\n            continue;\n        }\n        if (IsKind(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRecord(schema, references, value) {\n    if (!IsObject(value))\n        return value;\n    const additionalProperties = schema.additionalProperties;\n    const propertyKeys = Object.getOwnPropertyNames(value);\n    const [propertyKey, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const propertyKeyTest = new RegExp(propertyKey);\n    for (const key of propertyKeys) {\n        if (propertyKeyTest.test(key)) {\n            value[key] = Visit(propertySchema, references, value[key]);\n            continue;\n        }\n        if (IsKind(additionalProperties) && Check(additionalProperties, references, value[key])) {\n            value[key] = Visit(additionalProperties, references, value[key]);\n            continue;\n        }\n        delete value[key];\n    }\n    return value;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    if (!IsArray(value))\n        return value;\n    if (IsUndefined(schema.items))\n        return [];\n    const length = Math.min(value.length, schema.items.length);\n    for (let i = 0; i < length; i++) {\n        value[i] = Visit(schema.items[i], references, value[i]);\n    }\n    // prettier-ignore\n    return value.length > length\n        ? value.slice(0, length)\n        : value;\n}\nfunction FromUnion(schema, references, value) {\n    for (const inner of schema.anyOf) {\n        if (IsCheckable(inner) && Check(inner, references, value)) {\n            return Visit(inner, references, value);\n        }\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = IsString(schema.$id) ? Pushref(schema, references) : references;\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return value;\n    }\n}\n/** `[Mutable]` Removes excess properties from a value and returns the result. This function does not check the value and returns an unknown type. You should Check the result before use. Clean is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Clean(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { Clone } from '../clone/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsObject, IsDate, IsUndefined, IsString, IsNumber, IsBoolean, IsBigInt, IsSymbol, HasPropertyKey } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Conversions\n// ------------------------------------------------------------------\nfunction IsStringNumeric(value) {\n    return IsString(value) && !isNaN(value) && !isNaN(parseFloat(value));\n}\nfunction IsValueToString(value) {\n    return IsBigInt(value) || IsBoolean(value) || IsNumber(value);\n}\nfunction IsValueTrue(value) {\n    return value === true || (IsNumber(value) && value === 1) || (IsBigInt(value) && value === BigInt('1')) || (IsString(value) && (value.toLowerCase() === 'true' || value === '1'));\n}\nfunction IsValueFalse(value) {\n    return value === false || (IsNumber(value) && (value === 0 || Object.is(value, -0))) || (IsBigInt(value) && value === BigInt('0')) || (IsString(value) && (value.toLowerCase() === 'false' || value === '0' || value === '-0'));\n}\nfunction IsTimeStringWithTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateTimeStringWithTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i.test(value);\n}\nfunction IsDateTimeStringWithoutTimeZone(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\dt(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)?$/i.test(value);\n}\nfunction IsDateString(value) {\n    return IsString(value) && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value);\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction TryConvertLiteralString(value, target) {\n    const conversion = TryConvertString(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralNumber(value, target) {\n    const conversion = TryConvertNumber(value);\n    return conversion === target ? conversion : value;\n}\nfunction TryConvertLiteralBoolean(value, target) {\n    const conversion = TryConvertBoolean(value);\n    return conversion === target ? conversion : value;\n}\n// prettier-ignore\nfunction TryConvertLiteral(schema, value) {\n    return (IsString(schema.const) ? TryConvertLiteralString(value, schema.const) :\n        IsNumber(schema.const) ? TryConvertLiteralNumber(value, schema.const) :\n            IsBoolean(schema.const) ? TryConvertLiteralBoolean(value, schema.const) :\n                value);\n}\nfunction TryConvertBoolean(value) {\n    return IsValueTrue(value) ? true : IsValueFalse(value) ? false : value;\n}\nfunction TryConvertBigInt(value) {\n    const truncateInteger = (value) => value.split('.')[0];\n    return IsStringNumeric(value) ? BigInt(truncateInteger(value)) : IsNumber(value) ? BigInt(Math.trunc(value)) : IsValueFalse(value) ? BigInt(0) : IsValueTrue(value) ? BigInt(1) : value;\n}\nfunction TryConvertString(value) {\n    return IsSymbol(value) && value.description !== undefined ? value.description.toString() : IsValueToString(value) ? value.toString() : value;\n}\nfunction TryConvertNumber(value) {\n    return IsStringNumeric(value) ? parseFloat(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertInteger(value) {\n    return IsStringNumeric(value) ? parseInt(value) : IsNumber(value) ? Math.trunc(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;\n}\nfunction TryConvertNull(value) {\n    return IsString(value) && value.toLowerCase() === 'null' ? null : value;\n}\nfunction TryConvertUndefined(value) {\n    return IsString(value) && value === 'undefined' ? undefined : value;\n}\n// ------------------------------------------------------------------\n// note: this function may return an invalid dates for the regex\n// tests above. Invalid dates will however be checked during the\n// casting function and will return a epoch date if invalid.\n// Consider better string parsing for the iso dates in future\n// revisions.\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction TryConvertDate(value) {\n    return (IsDate(value) ? value :\n        IsNumber(value) ? new Date(value) :\n            IsValueTrue(value) ? new Date(1) :\n                IsValueFalse(value) ? new Date(0) :\n                    IsStringNumeric(value) ? new Date(parseInt(value)) :\n                        IsTimeStringWithoutTimeZone(value) ? new Date(`1970-01-01T${value}.000Z`) :\n                            IsTimeStringWithTimeZone(value) ? new Date(`1970-01-01T${value}`) :\n                                IsDateTimeStringWithoutTimeZone(value) ? new Date(`${value}.000Z`) :\n                                    IsDateTimeStringWithTimeZone(value) ? new Date(value) :\n                                        IsDateString(value) ? new Date(`${value}T00:00:00.000Z`) :\n                                            value);\n}\n// ------------------------------------------------------------------\n// Default\n// ------------------------------------------------------------------\nfunction Default(value) {\n    return value;\n}\n// ------------------------------------------------------------------\n// Convert\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    const elements = IsArray(value) ? value : [value];\n    return elements.map((element) => Visit(schema.items, references, element));\n}\nfunction FromBigInt(schema, references, value) {\n    return TryConvertBigInt(value);\n}\nfunction FromBoolean(schema, references, value) {\n    return TryConvertBoolean(value);\n}\nfunction FromDate(schema, references, value) {\n    return TryConvertDate(value);\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromInteger(schema, references, value) {\n    return TryConvertInteger(value);\n}\nfunction FromIntersect(schema, references, value) {\n    return schema.allOf.reduce((value, schema) => Visit(schema, references, value), value);\n}\nfunction FromLiteral(schema, references, value) {\n    return TryConvertLiteral(schema, value);\n}\nfunction FromNull(schema, references, value) {\n    return TryConvertNull(value);\n}\nfunction FromNumber(schema, references, value) {\n    return TryConvertNumber(value);\n}\n// prettier-ignore\nfunction FromObject(schema, references, value) {\n    if (!IsObject(value) || IsArray(value))\n        return value;\n    for (const propertyKey of Object.getOwnPropertyNames(schema.properties)) {\n        if (!HasPropertyKey(value, propertyKey))\n            continue;\n        value[propertyKey] = Visit(schema.properties[propertyKey], references, value[propertyKey]);\n    }\n    return value;\n}\nfunction FromRecord(schema, references, value) {\n    const isConvertable = IsObject(value) && !IsArray(value);\n    if (!isConvertable)\n        return value;\n    const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[propertyKey];\n    for (const [propKey, propValue] of Object.entries(value)) {\n        value[propKey] = Visit(property, references, propValue);\n    }\n    return value;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromString(schema, references, value) {\n    return TryConvertString(value);\n}\nfunction FromSymbol(schema, references, value) {\n    return IsString(value) || IsNumber(value) ? Symbol(value) : value;\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, value) {\n    const isConvertable = IsArray(value) && !IsUndefined(schema.items);\n    if (!isConvertable)\n        return value;\n    return value.map((value, index) => {\n        return (index < schema.items.length)\n            ? Visit(schema.items[index], references, value)\n            : value;\n    });\n}\nfunction FromUndefined(schema, references, value) {\n    return TryConvertUndefined(value);\n}\nfunction FromUnion(schema, references, value) {\n    // Check if original value already matches one of the union variants\n    for (const subschema of schema.anyOf) {\n        if (Check(subschema, references, value)) {\n            return value;\n        }\n    }\n    // Attempt conversion for each variant\n    for (const subschema of schema.anyOf) {\n        const converted = Visit(subschema, references, Clone(value));\n        if (!Check(subschema, references, converted))\n            continue;\n        return converted;\n    }\n    return value;\n}\nfunction Visit(schema, references, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'BigInt':\n            return FromBigInt(schema_, references_, value);\n        case 'Boolean':\n            return FromBoolean(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Integer':\n            return FromInteger(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Literal':\n            return FromLiteral(schema_, references_, value);\n        case 'Null':\n            return FromNull(schema_, references_, value);\n        case 'Number':\n            return FromNumber(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'String':\n            return FromString(schema_, references_, value);\n        case 'Symbol':\n            return FromSymbol(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Undefined':\n            return FromUndefined(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return Default(value);\n    }\n}\n/** `[Mutable]` Converts any type mismatched values to their target type if a reasonable conversion is possible. */\n// prettier-ignore\nexport function Convert(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { HasTransform, TransformDecode, TransformDecodeCheckError } from '../transform/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Errors } from '../../errors/index.mjs';\n/** Decodes a value or throws if error */\nexport function Decode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    if (!Check(schema, references, value))\n        throw new TransformDecodeCheckError(schema, value, Errors(schema, references, value).First());\n    return HasTransform(schema, references) ? TransformDecode(schema, references, value) : value;\n}\n", "import { TypeSystemPolicy } from '../../system/policy.mjs';\nimport { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { HasPropertyKey, IsObject, IsArray, IsValueType, IsUndefined as IsUndefinedValue } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema, IsUndefined } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// thrown externally\n// prettier-ignore\nexport class TransformDecodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`Unable to decode value as it does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformDecodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(error instanceof Error ? error.message : 'Unknown error');\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Decode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Decode(value) : value;\n    }\n    catch (error) {\n        throw new TransformDecodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    return (IsArray(value))\n        ? Default(schema, path, value.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value)))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    if (!IsObject(value) || IsValueType(value))\n        return Default(schema, path, value);\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...value };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(unevaluatedProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromImport(schema, references, path, value) {\n    const additional = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    const result = Visit(target, [...references, ...additional], path, value);\n    return Default(schema, path, result);\n}\nfunction FromNot(schema, references, path, value) {\n    return Default(schema, path, Visit(schema.not, references, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    if (!IsObject(value))\n        return Default(schema, path, value);\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...value };\n    for (const key of knownKeys) {\n        if (!HasPropertyKey(knownProperties, key))\n            continue;\n        // if the property value is undefined, but the target is not, nor does it satisfy exact optional \n        // property policy, then we need to continue. This is a special case for optional property handling \n        // where a transforms wrapped in a optional modifiers should not run.\n        if (IsUndefinedValue(knownProperties[key]) && (!IsUndefined(schema.properties[key]) ||\n            TypeSystemPolicy.IsExactOptionalProperty(knownProperties, key)))\n            continue;\n        // decode property\n        knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n    }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    if (!IsObject(value))\n        return Default(schema, path, value);\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...value };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return Default(schema, path, knownProperties);\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const unknownProperties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            unknownProperties[key] = Default(additionalProperties, `${path}/${key}`, unknownProperties[key]);\n        }\n    return Default(schema, path, unknownProperties);\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    return Default(schema, path, Visit(target, references, path, value));\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    return (IsArray(value) && IsArray(schema.items))\n        ? Default(schema, path, schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value[index])))\n        : Default(schema, path, value);\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        // note: ensure interior is decoded first\n        const decoded = Visit(subschema, references, path, value);\n        return Default(schema, path, decoded);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Import':\n            return FromImport(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'Symbol':\n            return Default(schema_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Decodes the value and returns the result. This function requires that\n * the caller `Check` the value before use. Passing unchecked values may result in\n * undefined behavior. Refer to the `Value.Decode()` for implementation details.\n */\nexport function TransformDecode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n", "import { TypeSystemPolicy } from '../../system/policy.mjs';\nimport { Kind, TransformKind } from '../../type/symbols/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { KeyOfPropertyKeys, KeyOfPropertyEntries } from '../../type/keyof/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Check } from '../check/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { HasPropertyKey, IsObject, IsArray, IsValueType, IsUndefined as IsUndefinedValue } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema, IsUndefined } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\n// prettier-ignore\nexport class TransformEncodeCheckError extends TypeBoxError {\n    constructor(schema, value, error) {\n        super(`The encoded value does not match the expected schema`);\n        this.schema = schema;\n        this.value = value;\n        this.error = error;\n    }\n}\n// prettier-ignore\nexport class TransformEncodeError extends TypeBoxError {\n    constructor(schema, path, value, error) {\n        super(`${error instanceof Error ? error.message : 'Unknown error'}`);\n        this.schema = schema;\n        this.path = path;\n        this.value = value;\n        this.error = error;\n    }\n}\n// ------------------------------------------------------------------\n// Encode\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction Default(schema, path, value) {\n    try {\n        return IsTransform(schema) ? schema[TransformKind].Encode(value) : value;\n    }\n    catch (error) {\n        throw new TransformEncodeError(schema, path, value, error);\n    }\n}\n// prettier-ignore\nfunction FromArray(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    return IsArray(defaulted)\n        ? defaulted.map((value, index) => Visit(schema.items, references, `${path}/${index}`, value))\n        : defaulted;\n}\n// prettier-ignore\nfunction FromImport(schema, references, path, value) {\n    const additional = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    const result = Default(schema, path, value);\n    return Visit(target, [...references, ...additional], path, result);\n}\n// prettier-ignore\nfunction FromIntersect(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsObject(value) || IsValueType(value))\n        return defaulted;\n    const knownEntries = KeyOfPropertyEntries(schema);\n    const knownKeys = knownEntries.map(entry => entry[0]);\n    const knownProperties = { ...defaulted };\n    for (const [knownKey, knownSchema] of knownEntries)\n        if (knownKey in knownProperties) {\n            knownProperties[knownKey] = Visit(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);\n        }\n    if (!IsTransform(schema.unevaluatedProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const unevaluatedProperties = schema.unevaluatedProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(unevaluatedProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromNot(schema, references, path, value) {\n    return Default(schema.not, path, Default(schema, path, value));\n}\n// prettier-ignore\nfunction FromObject(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const knownKeys = KeyOfPropertyKeys(schema);\n    const knownProperties = { ...defaulted };\n    for (const key of knownKeys) {\n        if (!HasPropertyKey(knownProperties, key))\n            continue;\n        // if the property value is undefined, but the target is not, nor does it satisfy exact optional \n        // property policy, then we need to continue. This is a special case for optional property handling \n        // where a transforms wrapped in a optional modifiers should not run.\n        if (IsUndefinedValue(knownProperties[key]) && (!IsUndefined(schema.properties[key]) ||\n            TypeSystemPolicy.IsExactOptionalProperty(knownProperties, key)))\n            continue;\n        // encode property\n        knownProperties[key] = Visit(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);\n    }\n    if (!IsSchema(schema.additionalProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.includes(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRecord(schema, references, path, value) {\n    const defaulted = Default(schema, path, value);\n    if (!IsObject(value))\n        return defaulted;\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const knownKeys = new RegExp(pattern);\n    const knownProperties = { ...defaulted };\n    for (const key of Object.getOwnPropertyNames(value))\n        if (knownKeys.test(key)) {\n            knownProperties[key] = Visit(schema.patternProperties[pattern], references, `${path}/${key}`, knownProperties[key]);\n        }\n    if (!IsSchema(schema.additionalProperties)) {\n        return knownProperties;\n    }\n    const unknownKeys = Object.getOwnPropertyNames(knownProperties);\n    const additionalProperties = schema.additionalProperties;\n    const properties = { ...knownProperties };\n    for (const key of unknownKeys)\n        if (!knownKeys.test(key)) {\n            properties[key] = Default(additionalProperties, `${path}/${key}`, properties[key]);\n        }\n    return properties;\n}\n// prettier-ignore\nfunction FromRef(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromThis(schema, references, path, value) {\n    const target = Deref(schema, references);\n    const resolved = Visit(target, references, path, value);\n    return Default(schema, path, resolved);\n}\n// prettier-ignore\nfunction FromTuple(schema, references, path, value) {\n    const value1 = Default(schema, path, value);\n    return IsArray(schema.items) ? schema.items.map((schema, index) => Visit(schema, references, `${path}/${index}`, value1[index])) : [];\n}\n// prettier-ignore\nfunction FromUnion(schema, references, path, value) {\n    // test value against union variants\n    for (const subschema of schema.anyOf) {\n        if (!Check(subschema, references, value))\n            continue;\n        const value1 = Visit(subschema, references, path, value);\n        return Default(schema, path, value1);\n    }\n    // test transformed value against union variants\n    for (const subschema of schema.anyOf) {\n        const value1 = Visit(subschema, references, path, value);\n        if (!Check(schema, references, value1))\n            continue;\n        return Default(schema, path, value1);\n    }\n    return Default(schema, path, value);\n}\n// prettier-ignore\nfunction Visit(schema, references, path, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, path, value);\n        case 'Import':\n            return FromImport(schema_, references_, path, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, path, value);\n        case 'Not':\n            return FromNot(schema_, references_, path, value);\n        case 'Object':\n            return FromObject(schema_, references_, path, value);\n        case 'Record':\n            return FromRecord(schema_, references_, path, value);\n        case 'Ref':\n            return FromRef(schema_, references_, path, value);\n        case 'This':\n            return FromThis(schema_, references_, path, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, path, value);\n        case 'Union':\n            return FromUnion(schema_, references_, path, value);\n        default:\n            return Default(schema_, path, value);\n    }\n}\n/**\n * `[Internal]` Encodes the value and returns the result. This function expects the\n * caller to pass a statically checked value. This function does not check the encoded\n * result, meaning the result should be passed to `Check` before use. Refer to the\n * `Value.Encode()` function for implementation details.\n */\nexport function TransformEncode(schema, references, value) {\n    return Visit(schema, references, '', value);\n}\n", "import { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// KindGuard\n// ------------------------------------------------------------------\nimport { IsTransform, IsSchema } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsUndefined } from '../guard/index.mjs';\n// prettier-ignore\nfunction FromArray(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromAsyncIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromConstructor(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromFunction(schema, references) {\n    return IsTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromIntersect(schema, references) {\n    return IsTransform(schema) || IsTransform(schema.unevaluatedProperties) || schema.allOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction FromImport(schema, references) {\n    const additional = globalThis.Object.getOwnPropertyNames(schema.$defs).reduce((result, key) => [...result, schema.$defs[key]], []);\n    const target = schema.$defs[schema.$ref];\n    return IsTransform(schema) || Visit(target, [...additional, ...references]);\n}\n// prettier-ignore\nfunction FromIterator(schema, references) {\n    return IsTransform(schema) || Visit(schema.items, references);\n}\n// prettier-ignore\nfunction FromNot(schema, references) {\n    return IsTransform(schema) || Visit(schema.not, references);\n}\n// prettier-ignore\nfunction FromObject(schema, references) {\n    return (IsTransform(schema) ||\n        Object.values(schema.properties).some((schema) => Visit(schema, references)) ||\n        (IsSchema(schema.additionalProperties) && Visit(schema.additionalProperties, references)));\n}\n// prettier-ignore\nfunction FromPromise(schema, references) {\n    return IsTransform(schema) || Visit(schema.item, references);\n}\n// prettier-ignore\nfunction FromRecord(schema, references) {\n    const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];\n    const property = schema.patternProperties[pattern];\n    return IsTransform(schema) || Visit(property, references) || (IsSchema(schema.additionalProperties) && IsTransform(schema.additionalProperties));\n}\n// prettier-ignore\nfunction FromRef(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromThis(schema, references) {\n    if (IsTransform(schema))\n        return true;\n    return Visit(Deref(schema, references), references);\n}\n// prettier-ignore\nfunction FromTuple(schema, references) {\n    return IsTransform(schema) || (!IsUndefined(schema.items) && schema.items.some((schema) => Visit(schema, references)));\n}\n// prettier-ignore\nfunction FromUnion(schema, references) {\n    return IsTransform(schema) || schema.anyOf.some((schema) => Visit(schema, references));\n}\n// prettier-ignore\nfunction Visit(schema, references) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    if (schema.$id && visited.has(schema.$id))\n        return false;\n    if (schema.$id)\n        visited.add(schema.$id);\n    switch (schema[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_);\n        case 'AsyncIterator':\n            return FromAsyncIterator(schema_, references_);\n        case 'Constructor':\n            return FromConstructor(schema_, references_);\n        case 'Function':\n            return FromFunction(schema_, references_);\n        case 'Import':\n            return FromImport(schema_, references_);\n        case 'Intersect':\n            return FromIntersect(schema_, references_);\n        case 'Iterator':\n            return FromIterator(schema_, references_);\n        case 'Not':\n            return FromNot(schema_, references_);\n        case 'Object':\n            return FromObject(schema_, references_);\n        case 'Promise':\n            return FromPromise(schema_, references_);\n        case 'Record':\n            return FromRecord(schema_, references_);\n        case 'Ref':\n            return FromRef(schema_, references_);\n        case 'This':\n            return FromThis(schema_, references_);\n        case 'Tuple':\n            return FromTuple(schema_, references_);\n        case 'Union':\n            return FromUnion(schema_, references_);\n        default:\n            return IsTransform(schema);\n    }\n}\nconst visited = new Set();\n/** Returns true if this schema contains a transform codec */\nexport function HasTransform(schema, references) {\n    visited.clear();\n    return Visit(schema, references);\n}\n", "import { Check } from '../check/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Deref, Pushref } from '../deref/index.mjs';\nimport { Kind } from '../../type/symbols/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsDate, IsFunction, IsObject, IsUndefined, HasPropertyKey } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsKind } from '../../type/guard/kind.mjs';\n// ------------------------------------------------------------------\n// ValueOrDefault\n// ------------------------------------------------------------------\nfunction ValueOrDefault(schema, value) {\n    const defaultValue = HasPropertyKey(schema, 'default') ? schema.default : undefined;\n    const clone = IsFunction(defaultValue) ? defaultValue() : Clone(defaultValue);\n    return IsUndefined(value) ? clone : IsObject(value) && IsObject(clone) ? Object.assign(clone, value) : value;\n}\n// ------------------------------------------------------------------\n// HasDefaultProperty\n// ------------------------------------------------------------------\nfunction HasDefaultProperty(schema) {\n    return IsKind(schema) && 'default' in schema;\n}\n// ------------------------------------------------------------------\n// Types\n// ------------------------------------------------------------------\nfunction FromArray(schema, references, value) {\n    // if the value is an array, we attempt to initialize it's elements\n    if (IsArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n            value[i] = Visit(schema.items, references, value[i]);\n        }\n        return value;\n    }\n    // ... otherwise use default initialization\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted))\n        return defaulted;\n    for (let i = 0; i < defaulted.length; i++) {\n        defaulted[i] = Visit(schema.items, references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromDate(schema, references, value) {\n    // special case intercept for dates\n    return IsDate(value) ? value : ValueOrDefault(schema, value);\n}\nfunction FromImport(schema, references, value) {\n    const definitions = globalThis.Object.values(schema.$defs);\n    const target = schema.$defs[schema.$ref];\n    return Visit(target, [...references, ...definitions], value);\n}\nfunction FromIntersect(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    return schema.allOf.reduce((acc, schema) => {\n        const next = Visit(schema, references, defaulted);\n        return IsObject(next) ? { ...acc, ...next } : next;\n    }, {});\n}\nfunction FromObject(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    // return defaulted\n    if (!IsObject(defaulted))\n        return defaulted;\n    const knownPropertyKeys = Object.getOwnPropertyNames(schema.properties);\n    // properties\n    for (const key of knownPropertyKeys) {\n        // note: we need to traverse into the object and test if the return value\n        // yielded a non undefined result. Here we interpret an undefined result as\n        // a non assignable property and continue.\n        const propertyValue = Visit(schema.properties[key], references, defaulted[key]);\n        if (IsUndefined(propertyValue))\n            continue;\n        defaulted[key] = Visit(schema.properties[key], references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!HasDefaultProperty(schema.additionalProperties))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKeys.includes(key))\n            continue;\n        defaulted[key] = Visit(schema.additionalProperties, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRecord(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsObject(defaulted))\n        return defaulted;\n    const additionalPropertiesSchema = schema.additionalProperties;\n    const [propertyKeyPattern, propertySchema] = Object.entries(schema.patternProperties)[0];\n    const knownPropertyKey = new RegExp(propertyKeyPattern);\n    // properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (!(knownPropertyKey.test(key) && HasDefaultProperty(propertySchema)))\n            continue;\n        defaulted[key] = Visit(propertySchema, references, defaulted[key]);\n    }\n    // return if not additional properties\n    if (!HasDefaultProperty(additionalPropertiesSchema))\n        return defaulted;\n    // additional properties\n    for (const key of Object.getOwnPropertyNames(defaulted)) {\n        if (knownPropertyKey.test(key))\n            continue;\n        defaulted[key] = Visit(additionalPropertiesSchema, references, defaulted[key]);\n    }\n    return defaulted;\n}\nfunction FromRef(schema, references, value) {\n    return Visit(Deref(schema, references), references, ValueOrDefault(schema, value));\n}\nfunction FromThis(schema, references, value) {\n    return Visit(Deref(schema, references), references, value);\n}\nfunction FromTuple(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    if (!IsArray(defaulted) || IsUndefined(schema.items))\n        return defaulted;\n    const [items, max] = [schema.items, Math.max(schema.items.length, defaulted.length)];\n    for (let i = 0; i < max; i++) {\n        if (i < items.length)\n            defaulted[i] = Visit(items[i], references, defaulted[i]);\n    }\n    return defaulted;\n}\nfunction FromUnion(schema, references, value) {\n    const defaulted = ValueOrDefault(schema, value);\n    for (const inner of schema.anyOf) {\n        const result = Visit(inner, references, Clone(defaulted));\n        if (Check(inner, references, result)) {\n            return result;\n        }\n    }\n    return defaulted;\n}\nfunction Visit(schema, references, value) {\n    const references_ = Pushref(schema, references);\n    const schema_ = schema;\n    switch (schema_[Kind]) {\n        case 'Array':\n            return FromArray(schema_, references_, value);\n        case 'Date':\n            return FromDate(schema_, references_, value);\n        case 'Import':\n            return FromImport(schema_, references_, value);\n        case 'Intersect':\n            return FromIntersect(schema_, references_, value);\n        case 'Object':\n            return FromObject(schema_, references_, value);\n        case 'Record':\n            return FromRecord(schema_, references_, value);\n        case 'Ref':\n            return FromRef(schema_, references_, value);\n        case 'This':\n            return FromThis(schema_, references_, value);\n        case 'Tuple':\n            return FromTuple(schema_, references_, value);\n        case 'Union':\n            return FromUnion(schema_, references_, value);\n        default:\n            return ValueOrDefault(schema_, value);\n    }\n}\n/** `[Mutable]` Generates missing properties on a value using default schema annotations if available. This function does not check the value and returns an unknown type. You should Check the result before use. Default is a mutable operation. To avoid mutation, Clone the value first. */\nexport function Default(...args) {\n    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);\n}\n", "import { HasPropertyKey, IsStandardObject, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Equal } from '../equal/equal.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\nimport { Literal } from '../../type/literal/index.mjs';\nimport { Object } from '../../type/object/index.mjs';\nimport { String } from '../../type/string/index.mjs';\nimport { Unknown } from '../../type/unknown/index.mjs';\nimport { Union } from '../../type/union/index.mjs';\nexport const Insert = Object({\n    type: Literal('insert'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Update = Object({\n    type: Literal('update'),\n    path: String(),\n    value: Unknown(),\n});\nexport const Delete = Object({\n    type: Literal('delete'),\n    path: String(),\n});\nexport const Edit = Union([Insert, Update, Delete]);\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueDiffError extends TypeBoxError {\n    constructor(value, message) {\n        super(message);\n        this.value = value;\n    }\n}\n// ------------------------------------------------------------------\n// Command Factory\n// ------------------------------------------------------------------\nfunction CreateUpdate(path, value) {\n    return { type: 'update', path, value };\n}\nfunction CreateInsert(path, value) {\n    return { type: 'insert', path, value };\n}\nfunction CreateDelete(path) {\n    return { type: 'delete', path };\n}\n// ------------------------------------------------------------------\n// AssertDiffable\n// ------------------------------------------------------------------\nfunction AssertDiffable(value) {\n    if (globalThis.Object.getOwnPropertySymbols(value).length > 0)\n        throw new ValueDiffError(value, 'Cannot diff objects with symbols');\n}\n// ------------------------------------------------------------------\n// Diffing Generators\n// ------------------------------------------------------------------\nfunction* ObjectType(path, current, next) {\n    AssertDiffable(current);\n    AssertDiffable(next);\n    if (!IsStandardObject(next))\n        return yield CreateUpdate(path, next);\n    const currentKeys = globalThis.Object.getOwnPropertyNames(current);\n    const nextKeys = globalThis.Object.getOwnPropertyNames(next);\n    // ----------------------------------------------------------------\n    // inserts\n    // ----------------------------------------------------------------\n    for (const key of nextKeys) {\n        if (HasPropertyKey(current, key))\n            continue;\n        yield CreateInsert(`${path}/${key}`, next[key]);\n    }\n    // ----------------------------------------------------------------\n    // updates\n    // ----------------------------------------------------------------\n    for (const key of currentKeys) {\n        if (!HasPropertyKey(next, key))\n            continue;\n        if (Equal(current, next))\n            continue;\n        yield* Visit(`${path}/${key}`, current[key], next[key]);\n    }\n    // ----------------------------------------------------------------\n    // deletes\n    // ----------------------------------------------------------------\n    for (const key of currentKeys) {\n        if (HasPropertyKey(next, key))\n            continue;\n        yield CreateDelete(`${path}/${key}`);\n    }\n}\nfunction* ArrayType(path, current, next) {\n    if (!IsArray(next))\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n    for (let i = 0; i < next.length; i++) {\n        if (i < current.length)\n            continue;\n        yield CreateInsert(`${path}/${i}`, next[i]);\n    }\n    for (let i = current.length - 1; i >= 0; i--) {\n        if (i < next.length)\n            continue;\n        yield CreateDelete(`${path}/${i}`);\n    }\n}\nfunction* TypedArrayType(path, current, next) {\n    if (!IsTypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)\n        return yield CreateUpdate(path, next);\n    for (let i = 0; i < Math.min(current.length, next.length); i++) {\n        yield* Visit(`${path}/${i}`, current[i], next[i]);\n    }\n}\nfunction* ValueType(path, current, next) {\n    if (current === next)\n        return;\n    yield CreateUpdate(path, next);\n}\nfunction* Visit(path, current, next) {\n    if (IsStandardObject(current))\n        return yield* ObjectType(path, current, next);\n    if (IsArray(current))\n        return yield* ArrayType(path, current, next);\n    if (IsTypedArray(current))\n        return yield* TypedArrayType(path, current, next);\n    if (IsValueType(current))\n        return yield* ValueType(path, current, next);\n    throw new ValueDiffError(current, 'Unable to diff value');\n}\n// ------------------------------------------------------------------\n// Diff\n// ------------------------------------------------------------------\nexport function Diff(current, next) {\n    return [...Visit('', current, next)];\n}\n// ------------------------------------------------------------------\n// Patch\n// ------------------------------------------------------------------\nfunction IsRootUpdate(edits) {\n    return edits.length > 0 && edits[0].path === '' && edits[0].type === 'update';\n}\nfunction IsIdentity(edits) {\n    return edits.length === 0;\n}\nexport function Patch(current, edits) {\n    if (IsRootUpdate(edits)) {\n        return Clone(edits[0].value);\n    }\n    if (IsIdentity(edits)) {\n        return Clone(current);\n    }\n    const clone = Clone(current);\n    for (const edit of edits) {\n        switch (edit.type) {\n            case 'insert': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'update': {\n                ValuePointer.Set(clone, edit.path, edit.value);\n                break;\n            }\n            case 'delete': {\n                ValuePointer.Delete(clone, edit.path);\n                break;\n            }\n        }\n    }\n    return clone;\n}\n", "export * as ValuePointer from './pointer.mjs';\n", "import { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValuePointerRootSetError extends TypeBoxError {\n    constructor(value, path, update) {\n        super('Cannot set root value');\n        this.value = value;\n        this.path = path;\n        this.update = update;\n    }\n}\nexport class ValuePointerRootDeleteError extends TypeBoxError {\n    constructor(value, path) {\n        super('Cannot delete root value');\n        this.value = value;\n        this.path = path;\n    }\n}\n// ------------------------------------------------------------------\n// ValuePointer\n// ------------------------------------------------------------------\n/** Provides functionality to update values through RFC6901 string pointers */\n// prettier-ignore\nfunction Escape(component) {\n    return component.indexOf('~') === -1 ? component : component.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n/** Formats the given pointer into navigable key components */\n// prettier-ignore\nexport function* Format(pointer) {\n    if (pointer === '')\n        return;\n    let [start, end] = [0, 0];\n    for (let i = 0; i < pointer.length; i++) {\n        const char = pointer.charAt(i);\n        if (char === '/') {\n            if (i === 0) {\n                start = i + 1;\n            }\n            else {\n                end = i;\n                yield Escape(pointer.slice(start, end));\n                start = i + 1;\n            }\n        }\n        else {\n            end = i;\n        }\n    }\n    yield Escape(pointer.slice(start));\n}\n/** Sets the value at the given pointer. If the value at the pointer does not exist it is created */\n// prettier-ignore\nexport function Set(value, pointer, update) {\n    if (pointer === '')\n        throw new ValuePointerRootSetError(value, pointer, update);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            next[component] = {};\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    owner[key] = update;\n}\n/** Deletes a value at the given pointer */\n// prettier-ignore\nexport function Delete(value, pointer) {\n    if (pointer === '')\n        throw new ValuePointerRootDeleteError(value, pointer);\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined || next[component] === null)\n            return;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    if (Array.isArray(owner)) {\n        const index = parseInt(key);\n        owner.splice(index, 1);\n    }\n    else {\n        delete owner[key];\n    }\n}\n/** Returns true if a value exists at the given pointer */\n// prettier-ignore\nexport function Has(value, pointer) {\n    if (pointer === '')\n        return true;\n    let [owner, next, key] = [null, value, ''];\n    for (const component of Format(pointer)) {\n        if (next[component] === undefined)\n            return false;\n        owner = next;\n        next = next[component];\n        key = component;\n    }\n    return Object.getOwnPropertyNames(owner).includes(key);\n}\n/** Gets the value at the given pointer */\n// prettier-ignore\nexport function Get(value, pointer) {\n    if (pointer === '')\n        return value;\n    let current = value;\n    for (const component of Format(pointer)) {\n        if (current[component] === undefined)\n            return undefined;\n        current = current[component];\n    }\n    return current;\n}\n", "import { IsObject, IsDate, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Equality Checks\n// ------------------------------------------------------------------\nfunction ObjectType(left, right) {\n    if (!IsObject(right))\n        return false;\n    const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];\n    const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];\n    if (leftKeys.length !== rightKeys.length)\n        return false;\n    return leftKeys.every((key) => Equal(left[key], right[key]));\n}\nfunction DateType(left, right) {\n    return IsDate(right) && left.getTime() === right.getTime();\n}\nfunction ArrayType(left, right) {\n    if (!IsArray(right) || left.length !== right.length)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction TypedArrayType(left, right) {\n    if (!IsTypedArray(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)\n        return false;\n    return left.every((value, index) => Equal(value, right[index]));\n}\nfunction ValueType(left, right) {\n    return left === right;\n}\n// ------------------------------------------------------------------\n// Equal\n// ------------------------------------------------------------------\n/** Returns true if the left value deep-equals the right */\nexport function Equal(left, right) {\n    if (IsDate(left))\n        return DateType(left, right);\n    if (IsTypedArray(left))\n        return TypedArrayType(left, right);\n    if (IsArray(left))\n        return ArrayType(left, right);\n    if (IsObject(left))\n        return ObjectType(left, right);\n    if (IsValueType(left))\n        return ValueType(left, right);\n    throw new Error('ValueEquals: Unable to compare value');\n}\n", "import { HasTransform, TransformEncode, TransformEncodeCheckError } from '../transform/index.mjs';\nimport { Check } from '../check/index.mjs';\nimport { Errors } from '../../errors/index.mjs';\n/** Encodes a value or throws if error */\nexport function Encode(...args) {\n    const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];\n    const encoded = HasTransform(schema, references) ? TransformEncode(schema, references, value) : value;\n    if (!Check(schema, references, encoded))\n        throw new TransformEncodeCheckError(schema, encoded, Errors(schema, references, encoded).First());\n    return encoded;\n}\n", "import { IsObject, IsArray, IsTypedArray, IsValueType } from '../guard/index.mjs';\nimport { ValuePointer } from '../pointer/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { TypeBoxError } from '../../type/error/index.mjs';\n// ------------------------------------------------------------------\n// IsStandardObject\n// ------------------------------------------------------------------\nfunction IsStandardObject(value) {\n    return IsObject(value) && !IsArray(value);\n}\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class ValueMutateError extends TypeBoxError {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction ObjectType(root, path, current, next) {\n    if (!IsStandardObject(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        const currentKeys = Object.getOwnPropertyNames(current);\n        const nextKeys = Object.getOwnPropertyNames(next);\n        for (const currentKey of currentKeys) {\n            if (!nextKeys.includes(currentKey)) {\n                delete current[currentKey];\n            }\n        }\n        for (const nextKey of nextKeys) {\n            if (!currentKeys.includes(nextKey)) {\n                current[nextKey] = null;\n            }\n        }\n        for (const nextKey of nextKeys) {\n            Visit(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);\n        }\n    }\n}\nfunction ArrayType(root, path, current, next) {\n    if (!IsArray(current)) {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n    else {\n        for (let index = 0; index < next.length; index++) {\n            Visit(root, `${path}/${index}`, current[index], next[index]);\n        }\n        current.splice(next.length);\n    }\n}\nfunction TypedArrayType(root, path, current, next) {\n    if (IsTypedArray(current) && current.length === next.length) {\n        for (let i = 0; i < current.length; i++) {\n            current[i] = next[i];\n        }\n    }\n    else {\n        ValuePointer.Set(root, path, Clone(next));\n    }\n}\nfunction ValueType(root, path, current, next) {\n    if (current === next)\n        return;\n    ValuePointer.Set(root, path, next);\n}\nfunction Visit(root, path, current, next) {\n    if (IsArray(next))\n        return ArrayType(root, path, current, next);\n    if (IsTypedArray(next))\n        return TypedArrayType(root, path, current, next);\n    if (IsStandardObject(next))\n        return ObjectType(root, path, current, next);\n    if (IsValueType(next))\n        return ValueType(root, path, current, next);\n}\n// ------------------------------------------------------------------\n// IsNonMutableValue\n// ------------------------------------------------------------------\nfunction IsNonMutableValue(value) {\n    return IsTypedArray(value) || IsValueType(value);\n}\nfunction IsMismatchedValue(current, next) {\n    // prettier-ignore\n    return ((IsStandardObject(current) && IsArray(next)) ||\n        (IsArray(current) && IsStandardObject(next)));\n}\n// ------------------------------------------------------------------\n// Mutate\n// ------------------------------------------------------------------\n/** `[Mutable]` Performs a deep mutable value assignment while retaining internal references */\nexport function Mutate(current, next) {\n    if (IsNonMutableValue(current) || IsNonMutableValue(next))\n        throw new ValueMutateError('Only object and array types can be mutated at the root level');\n    if (IsMismatchedValue(current, next))\n        throw new ValueMutateError('Cannot assign due type mismatch of assignable values');\n    Visit(current, '', current, next);\n}\n", "import { TypeBoxError } from '../../type/error/index.mjs';\nimport { TransformDecode, TransformEncode, HasTransform } from '../transform/index.mjs';\nimport { Assert } from '../assert/index.mjs';\nimport { Cast } from '../cast/index.mjs';\nimport { Clean } from '../clean/index.mjs';\nimport { Clone } from '../clone/index.mjs';\nimport { Convert } from '../convert/index.mjs';\nimport { Default } from '../default/index.mjs';\n// ------------------------------------------------------------------\n// Guards\n// ------------------------------------------------------------------\nimport { IsArray, IsUndefined } from '../guard/index.mjs';\n// ------------------------------------------------------------------\n// Error\n// ------------------------------------------------------------------\nexport class ParseError extends TypeBoxError {\n    constructor(message) {\n        super(message);\n    }\n}\n// prettier-ignore\nexport var ParseRegistry;\n(function (ParseRegistry) {\n    const registry = new Map([\n        ['Assert', (type, references, value) => { Assert(type, references, value); return value; }],\n        ['Cast', (type, references, value) => Cast(type, references, value)],\n        ['Clean', (type, references, value) => Clean(type, references, value)],\n        ['Clone', (_type, _references, value) => Clone(value)],\n        ['Convert', (type, references, value) => Convert(type, references, value)],\n        ['Decode', (type, references, value) => (HasTransform(type, references) ? TransformDecode(type, references, value) : value)],\n        ['Default', (type, references, value) => Default(type, references, value)],\n        ['Encode', (type, references, value) => (HasTransform(type, references) ? TransformEncode(type, references, value) : value)],\n    ]);\n    // Deletes an entry from the registry\n    function Delete(key) {\n        registry.delete(key);\n    }\n    ParseRegistry.Delete = Delete;\n    // Sets an entry in the registry\n    function Set(key, callback) {\n        registry.set(key, callback);\n    }\n    ParseRegistry.Set = Set;\n    // Gets an entry in the registry\n    function Get(key) {\n        return registry.get(key);\n    }\n    ParseRegistry.Get = Get;\n})(ParseRegistry || (ParseRegistry = {}));\n// ------------------------------------------------------------------\n// Default Parse Pipeline\n// ------------------------------------------------------------------\n// prettier-ignore\nexport const ParseDefault = [\n    'Clone',\n    'Clean',\n    'Default',\n    'Convert',\n    'Assert',\n    'Decode'\n];\n// ------------------------------------------------------------------\n// ParseValue\n// ------------------------------------------------------------------\nfunction ParseValue(operations, type, references, value) {\n    return operations.reduce((value, operationKey) => {\n        const operation = ParseRegistry.Get(operationKey);\n        if (IsUndefined(operation))\n            throw new ParseError(`Unable to find Parse operation '${operationKey}'`);\n        return operation(type, references, value);\n    }, value);\n}\n/** Parses a value */\nexport function Parse(...args) {\n    // prettier-ignore\n    const [operations, schema, references, value] = (args.length === 4 ? [args[0], args[1], args[2], args[3]] :\n        args.length === 3 ? IsArray(args[0]) ? [args[0], args[1], [], args[2]] : [ParseDefault, args[0], args[1], args[2]] :\n            args.length === 2 ? [ParseDefault, args[0], [], args[1]] :\n                (() => { throw new ParseError('Invalid Arguments'); })());\n    return ParseValue(operations, schema, references, value);\n}\n", "export * as Value from './value.mjs';\n", "export { Errors, ValueErrorIterator } from '../../errors/index.mjs';\nexport { Assert } from '../assert/index.mjs';\nexport { Cast } from '../cast/index.mjs';\nexport { Check } from '../check/index.mjs';\nexport { Clean } from '../clean/index.mjs';\nexport { Clone } from '../clone/index.mjs';\nexport { Convert } from '../convert/index.mjs';\nexport { Create } from '../create/index.mjs';\nexport { Decode } from '../decode/index.mjs';\nexport { Default } from '../default/index.mjs';\nexport { Diff, Patch, Edit } from '../delta/index.mjs';\nexport { Encode } from '../encode/index.mjs';\nexport { Equal } from '../equal/index.mjs';\nexport { Hash } from '../hash/index.mjs';\nexport { Mutate } from '../mutate/index.mjs';\nexport { Parse } from '../parse/index.mjs';\n", "import { TransformEncode, TransformDecode, HasTransform, TransformDecodeCheckError, TransformEncodeCheckError } from '../value/transform/index.mjs';\nimport { Errors } from '../errors/index.mjs';\nimport { TypeSystemPolicy } from '../system/index.mjs';\nimport { TypeBoxError } from '../type/error/index.mjs';\nimport { Deref } from '../value/deref/index.mjs';\nimport { Hash } from '../value/hash/index.mjs';\nimport { Kind } from '../type/symbols/index.mjs';\nimport { TypeRegistry, FormatRegistry } from '../type/registry/index.mjs';\nimport { KeyOfPattern } from '../type/keyof/index.mjs';\nimport { ExtendsUndefinedCheck } from '../type/extends/extends-undefined.mjs';\nimport { Never } from '../type/never/index.mjs';\nimport { Ref } from '../type/ref/index.mjs';\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nimport { IsArray, IsString, IsNumber, IsBigInt } from '../value/guard/index.mjs';\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nimport { IsSchema } from '../type/guard/type.mjs';\n// ------------------------------------------------------------------\n// TypeCheck\n// ------------------------------------------------------------------\nexport class TypeCheck {\n    constructor(schema, references, checkFunc, code) {\n        this.schema = schema;\n        this.references = references;\n        this.checkFunc = checkFunc;\n        this.code = code;\n        this.hasTransform = HasTransform(schema, references);\n    }\n    /** Returns the generated assertion code used to validate this type. */\n    Code() {\n        return this.code;\n    }\n    /** Returns the schema type used to validate */\n    Schema() {\n        return this.schema;\n    }\n    /** Returns reference types used to validate */\n    References() {\n        return this.references;\n    }\n    /** Returns an iterator for each error in this value. */\n    Errors(value) {\n        return Errors(this.schema, this.references, value);\n    }\n    /** Returns true if the value matches the compiled type. */\n    Check(value) {\n        return this.checkFunc(value);\n    }\n    /** Decodes a value or throws if error */\n    Decode(value) {\n        if (!this.checkFunc(value))\n            throw new TransformDecodeCheckError(this.schema, value, this.Errors(value).First());\n        return (this.hasTransform ? TransformDecode(this.schema, this.references, value) : value);\n    }\n    /** Encodes a value or throws if error */\n    Encode(value) {\n        const encoded = this.hasTransform ? TransformEncode(this.schema, this.references, value) : value;\n        if (!this.checkFunc(encoded))\n            throw new TransformEncodeCheckError(this.schema, value, this.Errors(value).First());\n        return encoded;\n    }\n}\n// ------------------------------------------------------------------\n// Character\n// ------------------------------------------------------------------\nvar Character;\n(function (Character) {\n    function DollarSign(code) {\n        return code === 36;\n    }\n    Character.DollarSign = DollarSign;\n    function IsUnderscore(code) {\n        return code === 95;\n    }\n    Character.IsUnderscore = IsUnderscore;\n    function IsAlpha(code) {\n        return (code >= 65 && code <= 90) || (code >= 97 && code <= 122);\n    }\n    Character.IsAlpha = IsAlpha;\n    function IsNumeric(code) {\n        return code >= 48 && code <= 57;\n    }\n    Character.IsNumeric = IsNumeric;\n})(Character || (Character = {}));\n// ------------------------------------------------------------------\n// MemberExpression\n// ------------------------------------------------------------------\nvar MemberExpression;\n(function (MemberExpression) {\n    function IsFirstCharacterNumeric(value) {\n        if (value.length === 0)\n            return false;\n        return Character.IsNumeric(value.charCodeAt(0));\n    }\n    function IsAccessor(value) {\n        if (IsFirstCharacterNumeric(value))\n            return false;\n        for (let i = 0; i < value.length; i++) {\n            const code = value.charCodeAt(i);\n            const check = Character.IsAlpha(code) || Character.IsNumeric(code) || Character.DollarSign(code) || Character.IsUnderscore(code);\n            if (!check)\n                return false;\n        }\n        return true;\n    }\n    function EscapeHyphen(key) {\n        return key.replace(/'/g, \"\\\\'\");\n    }\n    function Encode(object, key) {\n        return IsAccessor(key) ? `${object}.${key}` : `${object}['${EscapeHyphen(key)}']`;\n    }\n    MemberExpression.Encode = Encode;\n})(MemberExpression || (MemberExpression = {}));\n// ------------------------------------------------------------------\n// Identifier\n// ------------------------------------------------------------------\nvar Identifier;\n(function (Identifier) {\n    function Encode($id) {\n        const buffer = [];\n        for (let i = 0; i < $id.length; i++) {\n            const code = $id.charCodeAt(i);\n            if (Character.IsNumeric(code) || Character.IsAlpha(code)) {\n                buffer.push($id.charAt(i));\n            }\n            else {\n                buffer.push(`_${code}_`);\n            }\n        }\n        return buffer.join('').replace(/__/g, '_');\n    }\n    Identifier.Encode = Encode;\n})(Identifier || (Identifier = {}));\n// ------------------------------------------------------------------\n// LiteralString\n// ------------------------------------------------------------------\nvar LiteralString;\n(function (LiteralString) {\n    function Escape(content) {\n        return content.replace(/'/g, \"\\\\'\");\n    }\n    LiteralString.Escape = Escape;\n})(LiteralString || (LiteralString = {}));\n// ------------------------------------------------------------------\n// Errors\n// ------------------------------------------------------------------\nexport class TypeCompilerUnknownTypeError extends TypeBoxError {\n    constructor(schema) {\n        super('Unknown type');\n        this.schema = schema;\n    }\n}\nexport class TypeCompilerTypeGuardError extends TypeBoxError {\n    constructor(schema) {\n        super('Preflight validation check failed to guard for the given schema');\n        this.schema = schema;\n    }\n}\n// ------------------------------------------------------------------\n// Policy\n// ------------------------------------------------------------------\nexport var Policy;\n(function (Policy) {\n    function IsExactOptionalProperty(value, key, expression) {\n        return TypeSystemPolicy.ExactOptionalPropertyTypes ? `('${key}' in ${value} ? ${expression} : true)` : `(${MemberExpression.Encode(value, key)} !== undefined ? ${expression} : true)`;\n    }\n    Policy.IsExactOptionalProperty = IsExactOptionalProperty;\n    function IsObjectLike(value) {\n        return !TypeSystemPolicy.AllowArrayObject ? `(typeof ${value} === 'object' && ${value} !== null && !Array.isArray(${value}))` : `(typeof ${value} === 'object' && ${value} !== null)`;\n    }\n    Policy.IsObjectLike = IsObjectLike;\n    function IsRecordLike(value) {\n        return !TypeSystemPolicy.AllowArrayObject\n            ? `(typeof ${value} === 'object' && ${value} !== null && !Array.isArray(${value}) && !(${value} instanceof Date) && !(${value} instanceof Uint8Array))`\n            : `(typeof ${value} === 'object' && ${value} !== null && !(${value} instanceof Date) && !(${value} instanceof Uint8Array))`;\n    }\n    Policy.IsRecordLike = IsRecordLike;\n    function IsNumberLike(value) {\n        return TypeSystemPolicy.AllowNaN ? `typeof ${value} === 'number'` : `Number.isFinite(${value})`;\n    }\n    Policy.IsNumberLike = IsNumberLike;\n    function IsVoidLike(value) {\n        return TypeSystemPolicy.AllowNullVoid ? `(${value} === undefined || ${value} === null)` : `${value} === undefined`;\n    }\n    Policy.IsVoidLike = IsVoidLike;\n})(Policy || (Policy = {}));\n/** Compiles Types for Runtime Type Checking */\nexport var TypeCompiler;\n(function (TypeCompiler) {\n    // ----------------------------------------------------------------\n    // Guards\n    // ----------------------------------------------------------------\n    function IsAnyOrUnknown(schema) {\n        return schema[Kind] === 'Any' || schema[Kind] === 'Unknown';\n    }\n    // ----------------------------------------------------------------\n    // Types\n    // ----------------------------------------------------------------\n    function* FromAny(schema, references, value) {\n        yield 'true';\n    }\n    function* FromArgument(schema, references, value) {\n        yield 'true';\n    }\n    function* FromArray(schema, references, value) {\n        yield `Array.isArray(${value})`;\n        const [parameter, accumulator] = [CreateParameter('value', 'any'), CreateParameter('acc', 'number')];\n        if (IsNumber(schema.maxItems))\n            yield `${value}.length <= ${schema.maxItems}`;\n        if (IsNumber(schema.minItems))\n            yield `${value}.length >= ${schema.minItems}`;\n        const elementExpression = CreateExpression(schema.items, references, 'value');\n        yield `${value}.every((${parameter}) => ${elementExpression})`;\n        if (IsSchema(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains)) {\n            const containsSchema = IsSchema(schema.contains) ? schema.contains : Never();\n            const checkExpression = CreateExpression(containsSchema, references, 'value');\n            const checkMinContains = IsNumber(schema.minContains) ? [`(count >= ${schema.minContains})`] : [];\n            const checkMaxContains = IsNumber(schema.maxContains) ? [`(count <= ${schema.maxContains})`] : [];\n            const checkCount = `const count = value.reduce((${accumulator}, ${parameter}) => ${checkExpression} ? acc + 1 : acc, 0)`;\n            const check = [`(count > 0)`, ...checkMinContains, ...checkMaxContains].join(' && ');\n            yield `((${parameter}) => { ${checkCount}; return ${check}})(${value})`;\n        }\n        if (schema.uniqueItems === true) {\n            const check = `const hashed = hash(element); if(set.has(hashed)) { return false } else { set.add(hashed) } } return true`;\n            const block = `const set = new Set(); for(const element of value) { ${check} }`;\n            yield `((${parameter}) => { ${block} )(${value})`;\n        }\n    }\n    function* FromAsyncIterator(schema, references, value) {\n        yield `(typeof value === 'object' && Symbol.asyncIterator in ${value})`;\n    }\n    function* FromBigInt(schema, references, value) {\n        yield `(typeof ${value} === 'bigint')`;\n        if (IsBigInt(schema.exclusiveMaximum))\n            yield `${value} < BigInt(${schema.exclusiveMaximum})`;\n        if (IsBigInt(schema.exclusiveMinimum))\n            yield `${value} > BigInt(${schema.exclusiveMinimum})`;\n        if (IsBigInt(schema.maximum))\n            yield `${value} <= BigInt(${schema.maximum})`;\n        if (IsBigInt(schema.minimum))\n            yield `${value} >= BigInt(${schema.minimum})`;\n        if (IsBigInt(schema.multipleOf))\n            yield `(${value} % BigInt(${schema.multipleOf})) === 0`;\n    }\n    function* FromBoolean(schema, references, value) {\n        yield `(typeof ${value} === 'boolean')`;\n    }\n    function* FromConstructor(schema, references, value) {\n        yield* Visit(schema.returns, references, `${value}.prototype`);\n    }\n    function* FromDate(schema, references, value) {\n        yield `(${value} instanceof Date) && Number.isFinite(${value}.getTime())`;\n        if (IsNumber(schema.exclusiveMaximumTimestamp))\n            yield `${value}.getTime() < ${schema.exclusiveMaximumTimestamp}`;\n        if (IsNumber(schema.exclusiveMinimumTimestamp))\n            yield `${value}.getTime() > ${schema.exclusiveMinimumTimestamp}`;\n        if (IsNumber(schema.maximumTimestamp))\n            yield `${value}.getTime() <= ${schema.maximumTimestamp}`;\n        if (IsNumber(schema.minimumTimestamp))\n            yield `${value}.getTime() >= ${schema.minimumTimestamp}`;\n        if (IsNumber(schema.multipleOfTimestamp))\n            yield `(${value}.getTime() % ${schema.multipleOfTimestamp}) === 0`;\n    }\n    function* FromFunction(schema, references, value) {\n        yield `(typeof ${value} === 'function')`;\n    }\n    function* FromImport(schema, references, value) {\n        const members = globalThis.Object.getOwnPropertyNames(schema.$defs).reduce((result, key) => {\n            return [...result, schema.$defs[key]];\n        }, []);\n        yield* Visit(Ref(schema.$ref), [...references, ...members], value);\n    }\n    function* FromInteger(schema, references, value) {\n        yield `Number.isInteger(${value})`;\n        if (IsNumber(schema.exclusiveMaximum))\n            yield `${value} < ${schema.exclusiveMaximum}`;\n        if (IsNumber(schema.exclusiveMinimum))\n            yield `${value} > ${schema.exclusiveMinimum}`;\n        if (IsNumber(schema.maximum))\n            yield `${value} <= ${schema.maximum}`;\n        if (IsNumber(schema.minimum))\n            yield `${value} >= ${schema.minimum}`;\n        if (IsNumber(schema.multipleOf))\n            yield `(${value} % ${schema.multipleOf}) === 0`;\n    }\n    function* FromIntersect(schema, references, value) {\n        const check1 = schema.allOf.map((schema) => CreateExpression(schema, references, value)).join(' && ');\n        if (schema.unevaluatedProperties === false) {\n            const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema))};`);\n            const check2 = `Object.getOwnPropertyNames(${value}).every(key => ${keyCheck}.test(key))`;\n            yield `(${check1} && ${check2})`;\n        }\n        else if (IsSchema(schema.unevaluatedProperties)) {\n            const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema))};`);\n            const check2 = `Object.getOwnPropertyNames(${value}).every(key => ${keyCheck}.test(key) || ${CreateExpression(schema.unevaluatedProperties, references, `${value}[key]`)})`;\n            yield `(${check1} && ${check2})`;\n        }\n        else {\n            yield `(${check1})`;\n        }\n    }\n    function* FromIterator(schema, references, value) {\n        yield `(typeof value === 'object' && Symbol.iterator in ${value})`;\n    }\n    function* FromLiteral(schema, references, value) {\n        if (typeof schema.const === 'number' || typeof schema.const === 'boolean') {\n            yield `(${value} === ${schema.const})`;\n        }\n        else {\n            yield `(${value} === '${LiteralString.Escape(schema.const)}')`;\n        }\n    }\n    function* FromNever(schema, references, value) {\n        yield `false`;\n    }\n    function* FromNot(schema, references, value) {\n        const expression = CreateExpression(schema.not, references, value);\n        yield `(!${expression})`;\n    }\n    function* FromNull(schema, references, value) {\n        yield `(${value} === null)`;\n    }\n    function* FromNumber(schema, references, value) {\n        yield Policy.IsNumberLike(value);\n        if (IsNumber(schema.exclusiveMaximum))\n            yield `${value} < ${schema.exclusiveMaximum}`;\n        if (IsNumber(schema.exclusiveMinimum))\n            yield `${value} > ${schema.exclusiveMinimum}`;\n        if (IsNumber(schema.maximum))\n            yield `${value} <= ${schema.maximum}`;\n        if (IsNumber(schema.minimum))\n            yield `${value} >= ${schema.minimum}`;\n        if (IsNumber(schema.multipleOf))\n            yield `(${value} % ${schema.multipleOf}) === 0`;\n    }\n    function* FromObject(schema, references, value) {\n        yield Policy.IsObjectLike(value);\n        if (IsNumber(schema.minProperties))\n            yield `Object.getOwnPropertyNames(${value}).length >= ${schema.minProperties}`;\n        if (IsNumber(schema.maxProperties))\n            yield `Object.getOwnPropertyNames(${value}).length <= ${schema.maxProperties}`;\n        const knownKeys = Object.getOwnPropertyNames(schema.properties);\n        for (const knownKey of knownKeys) {\n            const memberExpression = MemberExpression.Encode(value, knownKey);\n            const property = schema.properties[knownKey];\n            if (schema.required && schema.required.includes(knownKey)) {\n                yield* Visit(property, references, memberExpression);\n                if (ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property))\n                    yield `('${knownKey}' in ${value})`;\n            }\n            else {\n                const expression = CreateExpression(property, references, memberExpression);\n                yield Policy.IsExactOptionalProperty(value, knownKey, expression);\n            }\n        }\n        if (schema.additionalProperties === false) {\n            if (schema.required && schema.required.length === knownKeys.length) {\n                yield `Object.getOwnPropertyNames(${value}).length === ${knownKeys.length}`;\n            }\n            else {\n                const keys = `[${knownKeys.map((key) => `'${key}'`).join(', ')}]`;\n                yield `Object.getOwnPropertyNames(${value}).every(key => ${keys}.includes(key))`;\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            const expression = CreateExpression(schema.additionalProperties, references, `${value}[key]`);\n            const keys = `[${knownKeys.map((key) => `'${key}'`).join(', ')}]`;\n            yield `(Object.getOwnPropertyNames(${value}).every(key => ${keys}.includes(key) || ${expression}))`;\n        }\n    }\n    function* FromPromise(schema, references, value) {\n        yield `${value} instanceof Promise`;\n    }\n    function* FromRecord(schema, references, value) {\n        yield Policy.IsRecordLike(value);\n        if (IsNumber(schema.minProperties))\n            yield `Object.getOwnPropertyNames(${value}).length >= ${schema.minProperties}`;\n        if (IsNumber(schema.maxProperties))\n            yield `Object.getOwnPropertyNames(${value}).length <= ${schema.maxProperties}`;\n        const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];\n        const variable = CreateVariable(`${new RegExp(patternKey)}`);\n        const check1 = CreateExpression(patternSchema, references, 'value');\n        const check2 = IsSchema(schema.additionalProperties) ? CreateExpression(schema.additionalProperties, references, value) : schema.additionalProperties === false ? 'false' : 'true';\n        const expression = `(${variable}.test(key) ? ${check1} : ${check2})`;\n        yield `(Object.entries(${value}).every(([key, value]) => ${expression}))`;\n    }\n    function* FromRef(schema, references, value) {\n        const target = Deref(schema, references);\n        // Reference: If we have seen this reference before we can just yield and return the function call.\n        // If this isn't the case we defer to visit to generate and set the function for subsequent passes.\n        if (state.functions.has(schema.$ref))\n            return yield `${CreateFunctionName(schema.$ref)}(${value})`;\n        yield* Visit(target, references, value);\n    }\n    function* FromRegExp(schema, references, value) {\n        const variable = CreateVariable(`${new RegExp(schema.source, schema.flags)};`);\n        yield `(typeof ${value} === 'string')`;\n        if (IsNumber(schema.maxLength))\n            yield `${value}.length <= ${schema.maxLength}`;\n        if (IsNumber(schema.minLength))\n            yield `${value}.length >= ${schema.minLength}`;\n        yield `${variable}.test(${value})`;\n    }\n    function* FromString(schema, references, value) {\n        yield `(typeof ${value} === 'string')`;\n        if (IsNumber(schema.maxLength))\n            yield `${value}.length <= ${schema.maxLength}`;\n        if (IsNumber(schema.minLength))\n            yield `${value}.length >= ${schema.minLength}`;\n        if (schema.pattern !== undefined) {\n            const variable = CreateVariable(`${new RegExp(schema.pattern)};`);\n            yield `${variable}.test(${value})`;\n        }\n        if (schema.format !== undefined) {\n            yield `format('${schema.format}', ${value})`;\n        }\n    }\n    function* FromSymbol(schema, references, value) {\n        yield `(typeof ${value} === 'symbol')`;\n    }\n    function* FromTemplateLiteral(schema, references, value) {\n        yield `(typeof ${value} === 'string')`;\n        const variable = CreateVariable(`${new RegExp(schema.pattern)};`);\n        yield `${variable}.test(${value})`;\n    }\n    function* FromThis(schema, references, value) {\n        // Note: This types are assured to be hoisted prior to this call. Just yield the function.\n        yield `${CreateFunctionName(schema.$ref)}(${value})`;\n    }\n    function* FromTuple(schema, references, value) {\n        yield `Array.isArray(${value})`;\n        if (schema.items === undefined)\n            return yield `${value}.length === 0`;\n        yield `(${value}.length === ${schema.maxItems})`;\n        for (let i = 0; i < schema.items.length; i++) {\n            const expression = CreateExpression(schema.items[i], references, `${value}[${i}]`);\n            yield `${expression}`;\n        }\n    }\n    function* FromUndefined(schema, references, value) {\n        yield `${value} === undefined`;\n    }\n    function* FromUnion(schema, references, value) {\n        const expressions = schema.anyOf.map((schema) => CreateExpression(schema, references, value));\n        yield `(${expressions.join(' || ')})`;\n    }\n    function* FromUint8Array(schema, references, value) {\n        yield `${value} instanceof Uint8Array`;\n        if (IsNumber(schema.maxByteLength))\n            yield `(${value}.length <= ${schema.maxByteLength})`;\n        if (IsNumber(schema.minByteLength))\n            yield `(${value}.length >= ${schema.minByteLength})`;\n    }\n    function* FromUnknown(schema, references, value) {\n        yield 'true';\n    }\n    function* FromVoid(schema, references, value) {\n        yield Policy.IsVoidLike(value);\n    }\n    function* FromKind(schema, references, value) {\n        const instance = state.instances.size;\n        state.instances.set(instance, schema);\n        yield `kind('${schema[Kind]}', ${instance}, ${value})`;\n    }\n    function* Visit(schema, references, value, useHoisting = true) {\n        const references_ = IsString(schema.$id) ? [...references, schema] : references;\n        const schema_ = schema;\n        // --------------------------------------------------------------\n        // Hoisting\n        // --------------------------------------------------------------\n        if (useHoisting && IsString(schema.$id)) {\n            const functionName = CreateFunctionName(schema.$id);\n            if (state.functions.has(functionName)) {\n                return yield `${functionName}(${value})`;\n            }\n            else {\n                // Note: In the case of cyclic types, we need to create a 'functions' record\n                // to prevent infinitely re-visiting the CreateFunction. Subsequent attempts\n                // to visit will be caught by the above condition.\n                state.functions.set(functionName, '<deferred>');\n                const functionCode = CreateFunction(functionName, schema, references, 'value', false);\n                state.functions.set(functionName, functionCode);\n                return yield `${functionName}(${value})`;\n            }\n        }\n        switch (schema_[Kind]) {\n            case 'Any':\n                return yield* FromAny(schema_, references_, value);\n            case 'Argument':\n                return yield* FromArgument(schema_, references_, value);\n            case 'Array':\n                return yield* FromArray(schema_, references_, value);\n            case 'AsyncIterator':\n                return yield* FromAsyncIterator(schema_, references_, value);\n            case 'BigInt':\n                return yield* FromBigInt(schema_, references_, value);\n            case 'Boolean':\n                return yield* FromBoolean(schema_, references_, value);\n            case 'Constructor':\n                return yield* FromConstructor(schema_, references_, value);\n            case 'Date':\n                return yield* FromDate(schema_, references_, value);\n            case 'Function':\n                return yield* FromFunction(schema_, references_, value);\n            case 'Import':\n                return yield* FromImport(schema_, references_, value);\n            case 'Integer':\n                return yield* FromInteger(schema_, references_, value);\n            case 'Intersect':\n                return yield* FromIntersect(schema_, references_, value);\n            case 'Iterator':\n                return yield* FromIterator(schema_, references_, value);\n            case 'Literal':\n                return yield* FromLiteral(schema_, references_, value);\n            case 'Never':\n                return yield* FromNever(schema_, references_, value);\n            case 'Not':\n                return yield* FromNot(schema_, references_, value);\n            case 'Null':\n                return yield* FromNull(schema_, references_, value);\n            case 'Number':\n                return yield* FromNumber(schema_, references_, value);\n            case 'Object':\n                return yield* FromObject(schema_, references_, value);\n            case 'Promise':\n                return yield* FromPromise(schema_, references_, value);\n            case 'Record':\n                return yield* FromRecord(schema_, references_, value);\n            case 'Ref':\n                return yield* FromRef(schema_, references_, value);\n            case 'RegExp':\n                return yield* FromRegExp(schema_, references_, value);\n            case 'String':\n                return yield* FromString(schema_, references_, value);\n            case 'Symbol':\n                return yield* FromSymbol(schema_, references_, value);\n            case 'TemplateLiteral':\n                return yield* FromTemplateLiteral(schema_, references_, value);\n            case 'This':\n                return yield* FromThis(schema_, references_, value);\n            case 'Tuple':\n                return yield* FromTuple(schema_, references_, value);\n            case 'Undefined':\n                return yield* FromUndefined(schema_, references_, value);\n            case 'Union':\n                return yield* FromUnion(schema_, references_, value);\n            case 'Uint8Array':\n                return yield* FromUint8Array(schema_, references_, value);\n            case 'Unknown':\n                return yield* FromUnknown(schema_, references_, value);\n            case 'Void':\n                return yield* FromVoid(schema_, references_, value);\n            default:\n                if (!TypeRegistry.Has(schema_[Kind]))\n                    throw new TypeCompilerUnknownTypeError(schema);\n                return yield* FromKind(schema_, references_, value);\n        }\n    }\n    // ----------------------------------------------------------------\n    // Compiler State\n    // ----------------------------------------------------------------\n    // prettier-ignore\n    const state = {\n        language: 'javascript', // target language\n        functions: new Map(), // local functions\n        variables: new Map(), // local variables\n        instances: new Map() // exterior kind instances\n    };\n    // ----------------------------------------------------------------\n    // Compiler Factory\n    // ----------------------------------------------------------------\n    function CreateExpression(schema, references, value, useHoisting = true) {\n        return `(${[...Visit(schema, references, value, useHoisting)].join(' && ')})`;\n    }\n    function CreateFunctionName($id) {\n        return `check_${Identifier.Encode($id)}`;\n    }\n    function CreateVariable(expression) {\n        const variableName = `local_${state.variables.size}`;\n        state.variables.set(variableName, `const ${variableName} = ${expression}`);\n        return variableName;\n    }\n    function CreateFunction(name, schema, references, value, useHoisting = true) {\n        const [newline, pad] = ['\\n', (length) => ''.padStart(length, ' ')];\n        const parameter = CreateParameter('value', 'any');\n        const returns = CreateReturns('boolean');\n        const expression = [...Visit(schema, references, value, useHoisting)].map((expression) => `${pad(4)}${expression}`).join(` &&${newline}`);\n        return `function ${name}(${parameter})${returns} {${newline}${pad(2)}return (${newline}${expression}${newline}${pad(2)})\\n}`;\n    }\n    function CreateParameter(name, type) {\n        const annotation = state.language === 'typescript' ? `: ${type}` : '';\n        return `${name}${annotation}`;\n    }\n    function CreateReturns(type) {\n        return state.language === 'typescript' ? `: ${type}` : '';\n    }\n    // ----------------------------------------------------------------\n    // Compile\n    // ----------------------------------------------------------------\n    function Build(schema, references, options) {\n        const functionCode = CreateFunction('check', schema, references, 'value'); // will populate functions and variables\n        const parameter = CreateParameter('value', 'any');\n        const returns = CreateReturns('boolean');\n        const functions = [...state.functions.values()];\n        const variables = [...state.variables.values()];\n        // prettier-ignore\n        const checkFunction = IsString(schema.$id) // ensure top level schemas with $id's are hoisted\n            ? `return function check(${parameter})${returns} {\\n  return ${CreateFunctionName(schema.$id)}(value)\\n}`\n            : `return ${functionCode}`;\n        return [...variables, ...functions, checkFunction].join('\\n');\n    }\n    /** Generates the code used to assert this type and returns it as a string */\n    function Code(...args) {\n        const defaults = { language: 'javascript' };\n        // prettier-ignore\n        const [schema, references, options] = (args.length === 2 && IsArray(args[1]) ? [args[0], args[1], defaults] :\n            args.length === 2 && !IsArray(args[1]) ? [args[0], [], args[1]] :\n                args.length === 3 ? [args[0], args[1], args[2]] :\n                    args.length === 1 ? [args[0], [], defaults] :\n                        [null, [], defaults]);\n        // compiler-reset\n        state.language = options.language;\n        state.variables.clear();\n        state.functions.clear();\n        state.instances.clear();\n        if (!IsSchema(schema))\n            throw new TypeCompilerTypeGuardError(schema);\n        for (const schema of references)\n            if (!IsSchema(schema))\n                throw new TypeCompilerTypeGuardError(schema);\n        return Build(schema, references, options);\n    }\n    TypeCompiler.Code = Code;\n    /** Compiles a TypeBox type for optimal runtime type checking. Types must be valid TypeBox types of TSchema */\n    function Compile(schema, references = []) {\n        const generatedCode = Code(schema, references, { language: 'javascript' });\n        const compiledFunction = globalThis.Function('kind', 'format', 'hash', generatedCode);\n        const instances = new Map(state.instances);\n        function typeRegistryFunction(kind, instance, value) {\n            if (!TypeRegistry.Has(kind) || !instances.has(instance))\n                return false;\n            const checkFunc = TypeRegistry.Get(kind);\n            const schema = instances.get(instance);\n            return checkFunc(schema, value);\n        }\n        function formatRegistryFunction(format, value) {\n            if (!FormatRegistry.Has(format))\n                return false;\n            const checkFunc = FormatRegistry.Get(format);\n            return checkFunc(value);\n        }\n        function hashFunction(value) {\n            return Hash(value);\n        }\n        const checkFunction = compiledFunction(typeRegistryFunction, formatRegistryFunction, hashFunction);\n        return new TypeCheck(schema, references, checkFunction, generatedCode);\n    }\n    TypeCompiler.Compile = Compile;\n})(TypeCompiler || (TypeCompiler = {}));\n", "import { isBun } from \"./utils.mjs\";\nconst mime = {\n  aac: \"audio/aac\",\n  abw: \"application/x-abiword\",\n  ai: \"application/postscript\",\n  arc: \"application/octet-stream\",\n  avi: \"video/x-msvideo\",\n  azw: \"application/vnd.amazon.ebook\",\n  bin: \"application/octet-stream\",\n  bz: \"application/x-bzip\",\n  bz2: \"application/x-bzip2\",\n  csh: \"application/x-csh\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  doc: \"application/msword\",\n  dll: \"application/octet-stream\",\n  eot: \"application/vnd.ms-fontobject\",\n  epub: \"application/epub+zip\",\n  gif: \"image/gif\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/x-icon\",\n  ics: \"text/calendar\",\n  jar: \"application/java-archive\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"application/javascript\",\n  json: \"application/json\",\n  mid: \"audio/midi\",\n  midi: \"audio/midi\",\n  mp2: \"audio/mpeg\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mpa: \"video/mpeg\",\n  mpe: \"video/mpeg\",\n  mpeg: \"video/mpeg\",\n  mpkg: \"application/vnd.apple.installer+xml\",\n  odp: \"application/vnd.oasis.opendocument.presentation\",\n  ods: \"application/vnd.oasis.opendocument.spreadsheet\",\n  odt: \"application/vnd.oasis.opendocument.text\",\n  oga: \"audio/ogg\",\n  ogv: \"video/ogg\",\n  ogx: \"application/ogg\",\n  otf: \"font/otf\",\n  png: \"image/png\",\n  pdf: \"application/pdf\",\n  ppt: \"application/vnd.ms-powerpoint\",\n  rar: \"application/x-rar-compressed\",\n  rtf: \"application/rtf\",\n  sh: \"application/x-sh\",\n  svg: \"image/svg+xml\",\n  swf: \"application/x-shockwave-flash\",\n  tar: \"application/x-tar\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  ts: \"application/typescript\",\n  ttf: \"font/ttf\",\n  txt: \"text/plain\",\n  vsd: \"application/vnd.visio\",\n  wav: \"audio/x-wav\",\n  weba: \"audio/webm\",\n  webm: \"video/webm\",\n  webp: \"image/webp\",\n  woff: \"font/woff\",\n  woff2: \"font/woff2\",\n  xhtml: \"application/xhtml+xml\",\n  xls: \"application/vnd.ms-excel\",\n  xlsx: \"application/vnd.ms-excel\",\n  xlsx_OLD: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  xml: \"application/xml\",\n  xul: \"application/vnd.mozilla.xul+xml\",\n  zip: \"application/zip\",\n  \"3gp\": \"video/3gpp\",\n  \"3gp_DOES_NOT_CONTAIN_VIDEO\": \"audio/3gpp\",\n  \"3gp2\": \"video/3gpp2\",\n  \"3gp2_DOES_NOT_CONTAIN_VIDEO\": \"audio/3gpp2\",\n  \"7z\": \"application/x-7z-compressed\"\n}, getFileExtension = (path) => {\n  const index = path.lastIndexOf(\".\");\n  return index === -1 ? \"\" : path.slice(index + 1);\n}, file = (path) => new ElysiaFile(path);\nlet createReadStream, stat;\nclass ElysiaFile {\n  constructor(path) {\n    this.path = path;\n    if (isBun) this.value = Bun.file(path);\n    else {\n      if (!createReadStream || !stat) {\n        if (typeof window < \"u\") {\n          console.warn(\"Browser environment does not support file\");\n          return;\n        }\n        const warnMissing = (name) => console.warn(\n          new Error(\n            `[elysia] \\`file\\` require \\`fs${name ? \".\" + name : \"\"}\\` ${name?.includes(\".\") ? \"module \" : \"\"}which is not available in this environment`\n          )\n        );\n        if (typeof process > \"u\" || typeof process.getBuiltinModule != \"function\") {\n          warnMissing();\n          return;\n        }\n        const fs = process.getBuiltinModule(\"fs\");\n        if (!fs) {\n          warnMissing();\n          return;\n        }\n        if (typeof fs.createReadStream != \"function\") {\n          warnMissing();\n          return;\n        }\n        if (typeof fs.promises?.stat != \"function\") {\n          warnMissing();\n          return;\n        }\n        createReadStream = fs.createReadStream, stat = fs.promises.stat;\n      }\n      this.value = createReadStream(path), this.stats = stat(path);\n    }\n  }\n  get type() {\n    return (\n      // @ts-ignore\n      mime[getFileExtension(this.path)] || \"application/octet-stream\"\n    );\n  }\n  get length() {\n    return isBun ? this.value.size : this.stats?.then((x) => x.size) ?? 0;\n  }\n}\nexport {\n  ElysiaFile,\n  file,\n  getFileExtension,\n  mime\n};\n", "const isBun = typeof Bun < \"u\", isDeno = typeof Deno < \"u\";\nexport {\n  isBun,\n  isDeno\n};\n", "import { Value } from \"@sinclair/typebox/value\";\nimport { StatusMap, InvertedStatusMap } from \"./utils.mjs\";\nconst env = typeof Bun < \"u\" ? Bun.env : typeof process < \"u\" ? process?.env : void 0, ERROR_CODE = Symbol(\"ElysiaErrorCode\"), isProduction = (env?.NODE_ENV ?? env?.ENV) === \"production\", emptyHttpStatus = {\n  101: void 0,\n  204: void 0,\n  205: void 0,\n  304: void 0,\n  307: void 0,\n  308: void 0\n};\nclass ElysiaCustomStatusResponse {\n  constructor(code, response) {\n    const res = response ?? (code in InvertedStatusMap ? (\n      // @ts-expect-error Always correct\n      InvertedStatusMap[code]\n    ) : code);\n    this.code = StatusMap[code] ?? code, code in emptyHttpStatus ? this.response = void 0 : this.response = res;\n  }\n}\nconst status = (code, response) => new ElysiaCustomStatusResponse(code, response);\nclass InternalServerError extends Error {\n  constructor(message) {\n    super(message ?? \"INTERNAL_SERVER_ERROR\");\n    this.code = \"INTERNAL_SERVER_ERROR\";\n    this.status = 500;\n  }\n}\nclass NotFoundError extends Error {\n  constructor(message) {\n    super(message ?? \"NOT_FOUND\");\n    this.code = \"NOT_FOUND\";\n    this.status = 404;\n  }\n}\nclass ParseError extends Error {\n  constructor(cause) {\n    super(\"Bad Request\", {\n      cause\n    });\n    this.code = \"PARSE\";\n    this.status = 400;\n  }\n}\nclass InvalidCookieSignature extends Error {\n  constructor(key, message) {\n    super(message ?? `\"${key}\" has invalid cookie signature`);\n    this.key = key;\n    this.code = \"INVALID_COOKIE_SIGNATURE\";\n    this.status = 400;\n  }\n}\nconst mapValueError = (error) => {\n  if (!error)\n    return {\n      summary: void 0\n    };\n  const { message, path, value, type } = error, property = path.slice(1).replaceAll(\"/\", \".\"), isRoot = path === \"\";\n  switch (type) {\n    case 42:\n      return {\n        ...error,\n        summary: isRoot ? \"Value should not be provided\" : `Property '${property}' should not be provided`\n      };\n    case 45:\n      return {\n        ...error,\n        summary: isRoot ? \"Value is missing\" : `Property '${property}' is missing`\n      };\n    case 50:\n      const quoteIndex = message.indexOf(\"'\"), format = message.slice(\n        quoteIndex + 1,\n        message.indexOf(\"'\", quoteIndex + 1)\n      );\n      return {\n        ...error,\n        summary: isRoot ? \"Value should be an email\" : `Property '${property}' should be ${format}`\n      };\n    case 54:\n      return {\n        ...error,\n        summary: `${message.slice(0, 9).trim()} property '${property}' to be ${message.slice(8).trim()} but found: ${value}`\n      };\n    case 62:\n      const union = error.schema.anyOf.map((x) => `'${x?.format ?? x.type}'`).join(\", \");\n      return {\n        ...error,\n        summary: isRoot ? `Value should be one of ${union}` : `Property '${property}' should be one of: ${union}`\n      };\n    default:\n      return { summary: message, ...error };\n  }\n};\nclass InvalidFileType extends Error {\n  constructor(property, expected, message = `\"${property}\" has invalid file type`) {\n    super(message);\n    this.property = property;\n    this.expected = expected;\n    this.message = message;\n    this.code = \"INVALID_FILE_TYPE\";\n    this.status = 422;\n    Object.setPrototypeOf(this, InvalidFileType.prototype);\n  }\n  toResponse(headers) {\n    return isProduction ? new Response(\n      JSON.stringify({\n        type: \"validation\",\n        on: \"body\"\n      }),\n      {\n        status: 422,\n        headers: {\n          ...headers,\n          \"content-type\": \"application/json\"\n        }\n      }\n    ) : new Response(\n      JSON.stringify({\n        type: \"validation\",\n        on: \"body\",\n        summary: \"Invalid file type\",\n        message: this.message,\n        property: this.property,\n        expected: this.expected\n      }),\n      {\n        status: 422,\n        headers: {\n          ...headers,\n          \"content-type\": \"application/json\"\n        }\n      }\n    );\n  }\n}\nclass ValidationError extends Error {\n  constructor(type, validator, value, allowUnsafeValidationDetails = !1, errors) {\n    let message = \"\", error, expected, customError;\n    if (\n      // @ts-ignore\n      validator?.provider === \"standard\" || \"~standard\" in validator || // @ts-ignore\n      validator.schema && \"~standard\" in validator.schema\n    ) {\n      const standard = (\n        // @ts-ignore\n        (\"~standard\" in validator ? validator : validator.schema)[\"~standard\"]\n      );\n      error = (errors ?? standard.validate(value).issues)?.[0], isProduction ? message = JSON.stringify({\n        type: \"validation\",\n        on: type,\n        found: value\n      }) : message = JSON.stringify(\n        {\n          type: \"validation\",\n          on: type,\n          property: error.path?.[0] || \"root\",\n          message: error?.message,\n          summary: error?.problem,\n          expected,\n          found: value,\n          errors\n        },\n        null,\n        2\n      ), customError = error?.message;\n    } else {\n      value && typeof value == \"object\" && value instanceof ElysiaCustomStatusResponse && (value = value.response), error = errors?.First() ?? (\"Errors\" in validator ? validator.Errors(value).First() : Value.Errors(validator, value).First());\n      const accessor = error?.path || \"root\", schema = validator?.schema ?? validator;\n      if (!isProduction && !allowUnsafeValidationDetails)\n        try {\n          expected = Value.Create(schema);\n        } catch (error2) {\n          expected = {\n            type: \"Could not create expected value\",\n            // @ts-expect-error\n            message: error2?.message,\n            error: error2\n          };\n        }\n      customError = error?.schema?.message || error?.schema?.error !== void 0 ? typeof error.schema.error == \"function\" ? error.schema.error(\n        isProduction && !allowUnsafeValidationDetails ? {\n          type: \"validation\",\n          on: type,\n          found: value\n        } : {\n          type: \"validation\",\n          on: type,\n          value,\n          property: accessor,\n          message: error?.message,\n          summary: mapValueError(error).summary,\n          found: value,\n          expected,\n          errors: \"Errors\" in validator ? [\n            ...validator.Errors(\n              value\n            )\n          ].map(mapValueError) : [\n            ...Value.Errors(\n              validator,\n              value\n            )\n          ].map(mapValueError)\n        },\n        validator\n      ) : error.schema.error : void 0, customError !== void 0 ? message = typeof customError == \"object\" ? JSON.stringify(customError) : customError + \"\" : isProduction && !allowUnsafeValidationDetails ? message = JSON.stringify({\n        type: \"validation\",\n        on: type,\n        found: value\n      }) : message = JSON.stringify(\n        {\n          type: \"validation\",\n          on: type,\n          property: accessor,\n          message: error?.message,\n          summary: mapValueError(error).summary,\n          expected,\n          found: value,\n          errors: \"Errors\" in validator ? [...validator.Errors(value)].map(\n            mapValueError\n          ) : [...Value.Errors(validator, value)].map(\n            mapValueError\n          )\n        },\n        null,\n        2\n      );\n    }\n    super(message);\n    this.type = type;\n    this.validator = validator;\n    this.value = value;\n    this.allowUnsafeValidationDetails = allowUnsafeValidationDetails;\n    this.code = \"VALIDATION\";\n    this.status = 422;\n    this.valueError = error, this.expected = expected, this.customError = customError, Object.setPrototypeOf(this, ValidationError.prototype);\n  }\n  get all() {\n    return (\n      // @ts-ignore\n      this.validator?.provider === \"standard\" || \"~standard\" in this.validator || // @ts-ignore\n      \"schema\" in this.validator && // @ts-ignore\n      this.validator.schema && // @ts-ignore\n      \"~standard\" in this.validator.schema ? /* @ts-ignore */ (\"~standard\" in this.validator ? this.validator : (\n        // @ts-ignore\n        this.validator.schema\n      ))[\"~standard\"].validate(this.value).issues?.map((issue) => ({\n        summary: issue.message,\n        path: issue.path?.join(\".\") || \"root\",\n        message: issue.message,\n        value: this.value\n      })) || [] : \"Errors\" in this.validator ? [...this.validator.Errors(this.value)].map(mapValueError) : (\n        // @ts-ignore\n        [...Value.Errors(this.validator, this.value)].map(mapValueError)\n      )\n    );\n  }\n  static simplifyModel(validator) {\n    const model = \"schema\" in validator ? validator.schema : validator;\n    try {\n      return Value.Create(model);\n    } catch {\n      return model;\n    }\n  }\n  get model() {\n    return \"~standard\" in this.validator ? this.validator : ValidationError.simplifyModel(this.validator);\n  }\n  toResponse(headers) {\n    return new Response(this.message, {\n      status: 400,\n      headers: {\n        ...headers,\n        \"content-type\": \"application/json\"\n      }\n    });\n  }\n  /**\n   * Utility function to inherit add custom error and keep the original Validation error\n   *\n   * @since 1.3.14\n   *\n   * @example\n   * ```ts\n   * new Elysia()\n   *\t\t.onError(({ error, code }) => {\n   *\t\t\tif (code === 'VALIDATION') return error.detail(error.message)\n   *\t\t})\n   *\t\t.post('/', () => 'Hello World!', {\n   *\t\t\tbody: t.Object({\n   *\t\t\t\tx: t.Number({\n   *\t\t\t\t\terror: 'x must be a number'\n   *\t\t\t\t})\n   *\t\t\t})\n   *\t\t})\n   * ```\n   */\n  detail(message) {\n    if (!this.customError) return this.message;\n    const validator = this.validator, value = this.value, expected = this.expected, errors = this.all;\n    return isProduction && !this.allowUnsafeValidationDetails ? {\n      type: \"validation\",\n      on: this.type,\n      found: value,\n      message\n    } : {\n      type: \"validation\",\n      on: this.type,\n      property: this.valueError?.path || \"root\",\n      message,\n      summary: mapValueError(this.valueError).summary,\n      found: value,\n      expected,\n      errors\n    };\n  }\n}\nexport {\n  ERROR_CODE,\n  ElysiaCustomStatusResponse,\n  InternalServerError,\n  InvalidCookieSignature,\n  InvalidFileType,\n  NotFoundError,\n  ParseError,\n  ValidationError,\n  isProduction,\n  mapValueError,\n  status\n};\n", "import { ElysiaFile } from \"./universal/file.mjs\";\nconst hasHeaderShorthand = \"toJSON\" in new Headers(), replaceUrlPath = (url, pathname) => {\n  const urlObject = new URL(url);\n  return urlObject.pathname = pathname, urlObject.toString();\n}, isClass = (v) => typeof v == \"function\" && /^\\s*class\\s+/.test(v.toString()) || // Handle Object.create(null)\nv.toString && // Handle import * as Sentry from '@sentry/bun'\n// This also handle [object Date], [object Array]\n// and FFI value like [object Prisma]\nv.toString().startsWith(\"[object \") && v.toString() !== \"[object Object]\" || // If object prototype is not pure, then probably a class-like object\nisNotEmpty(Object.getPrototypeOf(v)), isObject = (item) => item && typeof item == \"object\" && !Array.isArray(item), mergeDeep = (target, source, options) => {\n  const skipKeys = options?.skipKeys, override = options?.override ?? !0, mergeArray = options?.mergeArray ?? !1;\n  if (!isObject(target) || !isObject(source)) return target;\n  for (const [key, value] of Object.entries(source))\n    if (!skipKeys?.includes(key)) {\n      if (mergeArray && Array.isArray(value)) {\n        target[key] = Array.isArray(\n          target[key]\n        ) ? [...target[key], ...value] : target[key] = value;\n        continue;\n      }\n      if (!isObject(value) || !(key in target) || isClass(value)) {\n        if ((override || !(key in target)) && !Object.isFrozen(target))\n          try {\n            target[key] = value;\n          } catch {\n          }\n        continue;\n      }\n      if (!Object.isFrozen(target[key]))\n        try {\n          target[key] = mergeDeep(\n            target[key],\n            value,\n            { skipKeys, override, mergeArray }\n          );\n        } catch {\n        }\n    }\n  return target;\n}, mergeCookie = (a, b) => {\n  const v = mergeDeep(Object.assign({}, a), b, {\n    skipKeys: [\"properties\"],\n    mergeArray: !1\n  });\n  return v.properties && delete v.properties, v;\n}, mergeObjectArray = (a, b) => {\n  if (!b) return a;\n  const array = [], checksums = [];\n  if (a) {\n    Array.isArray(a) || (a = [a]);\n    for (const item of a)\n      array.push(item), item.checksum && checksums.push(item.checksum);\n  }\n  if (b) {\n    Array.isArray(b) || (b = [b]);\n    for (const item of b)\n      checksums.includes(item.checksum) || array.push(item);\n  }\n  return array;\n}, primitiveHooks = [\n  \"start\",\n  \"request\",\n  \"parse\",\n  \"transform\",\n  \"resolve\",\n  \"beforeHandle\",\n  \"afterHandle\",\n  \"mapResponse\",\n  \"afterResponse\",\n  \"trace\",\n  \"error\",\n  \"stop\",\n  \"body\",\n  \"headers\",\n  \"params\",\n  \"query\",\n  \"response\",\n  \"type\",\n  \"detail\"\n], primitiveHookMap = primitiveHooks.reduce(\n  (acc, x) => (acc[x] = !0, acc),\n  {}\n), isRecordNumber = (x) => typeof x == \"object\" && Object.keys(x).every((x2) => !isNaN(+x2)), mergeResponse = (a, b) => isRecordNumber(a) && isRecordNumber(b) ? Object.assign({}, a, b) : a && !isRecordNumber(a) && isRecordNumber(b) ? Object.assign({ 200: a }, b) : b ?? a, mergeSchemaValidator = (a, b) => !a && !b ? {\n  body: void 0,\n  headers: void 0,\n  params: void 0,\n  query: void 0,\n  cookie: void 0,\n  response: void 0\n} : {\n  body: b?.body ?? a?.body,\n  headers: b?.headers ?? a?.headers,\n  params: b?.params ?? a?.params,\n  query: b?.query ?? a?.query,\n  cookie: b?.cookie ?? a?.cookie,\n  // @ts-ignore ? This order is correct - SaltyAom\n  response: mergeResponse(\n    // @ts-ignore\n    a?.response,\n    // @ts-ignore\n    b?.response\n  )\n}, mergeHook = (a, b) => {\n  if (!b) return a ?? {};\n  if (!a) return b ?? {};\n  if (!Object.values(b).find((x) => x != null))\n    return { ...a };\n  const hook = {\n    ...a,\n    ...b,\n    // Merge local hook first\n    // @ts-ignore\n    body: b.body ?? a.body,\n    // @ts-ignore\n    headers: b.headers ?? a.headers,\n    // @ts-ignore\n    params: b.params ?? a.params,\n    // @ts-ignore\n    query: b.query ?? a.query,\n    // @ts-ignore\n    cookie: b.cookie ?? a.cookie,\n    // ? This order is correct - SaltyAom\n    response: mergeResponse(\n      // @ts-ignore\n      a.response,\n      // @ts-ignore\n      b.response\n    ),\n    type: a.type || b.type,\n    detail: mergeDeep(\n      // @ts-ignore\n      b.detail ?? {},\n      // @ts-ignore\n      a.detail ?? {}\n    ),\n    parse: mergeObjectArray(a.parse, b.parse),\n    transform: mergeObjectArray(a.transform, b.transform),\n    beforeHandle: mergeObjectArray(\n      mergeObjectArray(\n        // @ts-ignore\n        fnToContainer(a.resolve, \"resolve\"),\n        a.beforeHandle\n      ),\n      mergeObjectArray(\n        fnToContainer(b.resolve, \"resolve\"),\n        b.beforeHandle\n      )\n    ),\n    afterHandle: mergeObjectArray(a.afterHandle, b.afterHandle),\n    mapResponse: mergeObjectArray(a.mapResponse, b.mapResponse),\n    afterResponse: mergeObjectArray(\n      a.afterResponse,\n      b.afterResponse\n    ),\n    trace: mergeObjectArray(a.trace, b.trace),\n    error: mergeObjectArray(a.error, b.error),\n    // @ts-ignore\n    standaloneSchema: (\n      // @ts-ignore\n      a.standaloneSchema || b.standaloneSchema ? (\n        // @ts-ignore\n        a.standaloneSchema && !b.standaloneSchema ? (\n          // @ts-ignore\n          a.standaloneSchema\n        ) : (\n          // @ts-ignore\n          b.standaloneSchema && !a.standaloneSchema ? b.standaloneSchema : [\n            // @ts-ignore\n            ...a.standaloneSchema ?? [],\n            ...b.standaloneSchema ?? []\n          ]\n        )\n      ) : void 0\n    )\n  };\n  return hook.resolve && delete hook.resolve, hook;\n}, lifeCycleToArray = (a) => {\n  a.parse && !Array.isArray(a.parse) && (a.parse = [a.parse]), a.transform && !Array.isArray(a.transform) && (a.transform = [a.transform]), a.afterHandle && !Array.isArray(a.afterHandle) && (a.afterHandle = [a.afterHandle]), a.mapResponse && !Array.isArray(a.mapResponse) && (a.mapResponse = [a.mapResponse]), a.afterResponse && !Array.isArray(a.afterResponse) && (a.afterResponse = [a.afterResponse]), a.trace && !Array.isArray(a.trace) && (a.trace = [a.trace]), a.error && !Array.isArray(a.error) && (a.error = [a.error]);\n  let beforeHandle = [];\n  return a.resolve && (beforeHandle = fnToContainer(\n    // @ts-expect-error\n    Array.isArray(a.resolve) ? a.resolve : [a.resolve],\n    \"resolve\"\n  ), delete a.resolve), a.beforeHandle && (beforeHandle.length ? beforeHandle = beforeHandle.concat(\n    Array.isArray(a.beforeHandle) ? a.beforeHandle : [a.beforeHandle]\n  ) : beforeHandle = Array.isArray(a.beforeHandle) ? a.beforeHandle : [a.beforeHandle]), beforeHandle.length && (a.beforeHandle = beforeHandle), a;\n}, isBun = typeof Bun < \"u\", hasBunHash = isBun && typeof Bun.hash == \"function\", checksum = (s) => {\n  let h = 9;\n  for (let i = 0; i < s.length; ) h = Math.imul(h ^ s.charCodeAt(i++), 9 ** 9);\n  return h = h ^ h >>> 9;\n}, injectChecksum = (checksum2, x) => {\n  if (!x) return;\n  if (!Array.isArray(x)) {\n    const fn = x;\n    return checksum2 && !fn.checksum && (fn.checksum = checksum2), fn.scope === \"scoped\" && (fn.scope = \"local\"), fn;\n  }\n  const fns = [...x];\n  for (const fn of fns)\n    checksum2 && !fn.checksum && (fn.checksum = checksum2), fn.scope === \"scoped\" && (fn.scope = \"local\");\n  return fns;\n}, mergeLifeCycle = (a, b, checksum2) => ({\n  start: mergeObjectArray(\n    a.start,\n    injectChecksum(checksum2, b?.start)\n  ),\n  request: mergeObjectArray(\n    a.request,\n    injectChecksum(checksum2, b?.request)\n  ),\n  parse: mergeObjectArray(\n    a.parse,\n    injectChecksum(checksum2, b?.parse)\n  ),\n  transform: mergeObjectArray(\n    a.transform,\n    injectChecksum(checksum2, b?.transform)\n  ),\n  beforeHandle: mergeObjectArray(\n    mergeObjectArray(\n      // @ts-ignore\n      fnToContainer(a.resolve, \"resolve\"),\n      a.beforeHandle\n    ),\n    injectChecksum(\n      checksum2,\n      mergeObjectArray(\n        fnToContainer(b?.resolve, \"resolve\"),\n        b?.beforeHandle\n      )\n    )\n  ),\n  afterHandle: mergeObjectArray(\n    a.afterHandle,\n    injectChecksum(checksum2, b?.afterHandle)\n  ),\n  mapResponse: mergeObjectArray(\n    a.mapResponse,\n    injectChecksum(checksum2, b?.mapResponse)\n  ),\n  afterResponse: mergeObjectArray(\n    a.afterResponse,\n    injectChecksum(checksum2, b?.afterResponse)\n  ),\n  // Already merged on Elysia._use, also logic is more complicated, can't directly merge\n  trace: mergeObjectArray(\n    a.trace,\n    injectChecksum(checksum2, b?.trace)\n  ),\n  error: mergeObjectArray(\n    a.error,\n    injectChecksum(checksum2, b?.error)\n  ),\n  stop: mergeObjectArray(\n    a.stop,\n    injectChecksum(checksum2, b?.stop)\n  )\n}), asHookType = (fn, inject, { skipIfHasType = !1 }) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn))\n    return skipIfHasType ? fn.scope ??= inject : fn.scope = inject, fn;\n  for (const x of fn)\n    skipIfHasType ? x.scope ??= inject : x.scope = inject;\n  return fn;\n}, filterGlobal = (fn) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn))\n    switch (fn.scope) {\n      case \"global\":\n      case \"scoped\":\n        return { ...fn };\n      default:\n        return { fn };\n    }\n  const array = [];\n  for (const x of fn)\n    switch (x.scope) {\n      case \"global\":\n      case \"scoped\":\n        array.push({\n          ...x\n        });\n        break;\n    }\n  return array;\n}, filterGlobalHook = (hook) => ({\n  // rest is validator\n  ...hook,\n  type: hook?.type,\n  detail: hook?.detail,\n  parse: filterGlobal(hook?.parse),\n  transform: filterGlobal(hook?.transform),\n  beforeHandle: filterGlobal(hook?.beforeHandle),\n  afterHandle: filterGlobal(hook?.afterHandle),\n  mapResponse: filterGlobal(hook?.mapResponse),\n  afterResponse: filterGlobal(hook?.afterResponse),\n  error: filterGlobal(hook?.error),\n  trace: filterGlobal(hook?.trace)\n}), StatusMap = {\n  Continue: 100,\n  \"Switching Protocols\": 101,\n  Processing: 102,\n  \"Early Hints\": 103,\n  OK: 200,\n  Created: 201,\n  Accepted: 202,\n  \"Non-Authoritative Information\": 203,\n  \"No Content\": 204,\n  \"Reset Content\": 205,\n  \"Partial Content\": 206,\n  \"Multi-Status\": 207,\n  \"Already Reported\": 208,\n  \"Multiple Choices\": 300,\n  \"Moved Permanently\": 301,\n  Found: 302,\n  \"See Other\": 303,\n  \"Not Modified\": 304,\n  \"Temporary Redirect\": 307,\n  \"Permanent Redirect\": 308,\n  \"Bad Request\": 400,\n  Unauthorized: 401,\n  \"Payment Required\": 402,\n  Forbidden: 403,\n  \"Not Found\": 404,\n  \"Method Not Allowed\": 405,\n  \"Not Acceptable\": 406,\n  \"Proxy Authentication Required\": 407,\n  \"Request Timeout\": 408,\n  Conflict: 409,\n  Gone: 410,\n  \"Length Required\": 411,\n  \"Precondition Failed\": 412,\n  \"Payload Too Large\": 413,\n  \"URI Too Long\": 414,\n  \"Unsupported Media Type\": 415,\n  \"Range Not Satisfiable\": 416,\n  \"Expectation Failed\": 417,\n  \"I'm a teapot\": 418,\n  \"Enhance Your Calm\": 420,\n  \"Misdirected Request\": 421,\n  \"Unprocessable Content\": 422,\n  Locked: 423,\n  \"Failed Dependency\": 424,\n  \"Too Early\": 425,\n  \"Upgrade Required\": 426,\n  \"Precondition Required\": 428,\n  \"Too Many Requests\": 429,\n  \"Request Header Fields Too Large\": 431,\n  \"Unavailable For Legal Reasons\": 451,\n  \"Internal Server Error\": 500,\n  \"Not Implemented\": 501,\n  \"Bad Gateway\": 502,\n  \"Service Unavailable\": 503,\n  \"Gateway Timeout\": 504,\n  \"HTTP Version Not Supported\": 505,\n  \"Variant Also Negotiates\": 506,\n  \"Insufficient Storage\": 507,\n  \"Loop Detected\": 508,\n  \"Not Extended\": 510,\n  \"Network Authentication Required\": 511\n}, InvertedStatusMap = Object.fromEntries(\n  Object.entries(StatusMap).map(([k, v]) => [v, k])\n);\nfunction removeTrailingEquals(digest) {\n  let trimmedDigest = digest;\n  for (; trimmedDigest.endsWith(\"=\"); )\n    trimmedDigest = trimmedDigest.slice(0, -1);\n  return trimmedDigest;\n}\nconst encoder = new TextEncoder(), signCookie = async (val, secret) => {\n  if (typeof val == \"object\" ? val = JSON.stringify(val) : typeof val != \"string\" && (val = val + \"\"), secret === null) throw new TypeError(\"Secret key must be provided.\");\n  const secretKey = await crypto.subtle.importKey(\n    \"raw\",\n    encoder.encode(secret),\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    !1,\n    [\"sign\"]\n  ), hmacBuffer = await crypto.subtle.sign(\n    \"HMAC\",\n    secretKey,\n    encoder.encode(val)\n  );\n  return val + \".\" + removeTrailingEquals(Buffer.from(hmacBuffer).toString(\"base64\"));\n}, unsignCookie = async (input, secret) => {\n  if (typeof input != \"string\")\n    throw new TypeError(\"Signed cookie string must be provided.\");\n  if (secret === null) throw new TypeError(\"Secret key must be provided.\");\n  const tentativeValue = input.slice(0, input.lastIndexOf(\".\"));\n  return await signCookie(tentativeValue, secret) === input ? tentativeValue : !1;\n}, insertStandaloneValidator = (hook, name, value) => {\n  if (!hook.standaloneValidator?.length || !Array.isArray(hook.standaloneValidator)) {\n    hook.standaloneValidator = [\n      {\n        [name]: value\n      }\n    ];\n    return;\n  }\n  const last = hook.standaloneValidator[hook.standaloneValidator.length - 1];\n  name in last ? hook.standaloneValidator.push({\n    [name]: value\n  }) : last[name] = value;\n}, parseNumericString = (message) => {\n  if (typeof message == \"number\") return message;\n  if (message.length < 16) {\n    if (message.trim().length === 0) return null;\n    const length = Number(message);\n    return Number.isNaN(length) ? null : length;\n  }\n  if (message.length === 16) {\n    if (message.trim().length === 0) return null;\n    const number = Number(message);\n    return Number.isNaN(number) || number.toString() !== message ? null : number;\n  }\n  return null;\n}, isNumericString = (message) => parseNumericString(message) !== null;\nclass PromiseGroup {\n  constructor(onError = console.error, onFinally = () => {\n  }) {\n    this.onError = onError;\n    this.onFinally = onFinally;\n    this.root = null;\n    this.promises = [];\n  }\n  /**\n   * The number of promises still being awaited.\n   */\n  get size() {\n    return this.promises.length;\n  }\n  /**\n   * Add a promise to the group.\n   * @returns The promise that was added.\n   */\n  add(promise) {\n    return this.promises.push(promise), this.root ||= this.drain(), this.promises.length === 1 && this.then(this.onFinally), promise;\n  }\n  async drain() {\n    for (; this.promises.length > 0; ) {\n      try {\n        await this.promises[0];\n      } catch (error) {\n        this.onError(error);\n      }\n      this.promises.shift();\n    }\n    this.root = null;\n  }\n  // Allow the group to be awaited.\n  then(onfulfilled, onrejected) {\n    return (this.root ?? Promise.resolve()).then(onfulfilled, onrejected);\n  }\n}\nconst fnToContainer = (fn, subType) => {\n  if (!fn) return fn;\n  if (!Array.isArray(fn)) {\n    if (typeof fn == \"function\" || typeof fn == \"string\")\n      return subType ? { fn, subType } : { fn };\n    if (\"fn\" in fn) return fn;\n  }\n  const fns = [];\n  for (const x of fn)\n    typeof x == \"function\" || typeof x == \"string\" ? fns.push(subType ? { fn: x, subType } : { fn: x }) : \"fn\" in x && fns.push(x);\n  return fns;\n}, localHookToLifeCycleStore = (a) => (a.start && (a.start = fnToContainer(a.start)), a.request && (a.request = fnToContainer(a.request)), a.parse && (a.parse = fnToContainer(a.parse)), a.transform && (a.transform = fnToContainer(a.transform)), a.beforeHandle && (a.beforeHandle = fnToContainer(a.beforeHandle)), a.afterHandle && (a.afterHandle = fnToContainer(a.afterHandle)), a.mapResponse && (a.mapResponse = fnToContainer(a.mapResponse)), a.afterResponse && (a.afterResponse = fnToContainer(a.afterResponse)), a.trace && (a.trace = fnToContainer(a.trace)), a.error && (a.error = fnToContainer(a.error)), a.stop && (a.stop = fnToContainer(a.stop)), a), lifeCycleToFn = (a) => {\n  const lifecycle = /* @__PURE__ */ Object.create(null);\n  return a.start?.map && (lifecycle.start = a.start.map((x) => x.fn)), a.request?.map && (lifecycle.request = a.request.map((x) => x.fn)), a.parse?.map && (lifecycle.parse = a.parse.map((x) => x.fn)), a.transform?.map && (lifecycle.transform = a.transform.map((x) => x.fn)), a.beforeHandle?.map && (lifecycle.beforeHandle = a.beforeHandle.map((x) => x.fn)), a.afterHandle?.map && (lifecycle.afterHandle = a.afterHandle.map((x) => x.fn)), a.mapResponse?.map && (lifecycle.mapResponse = a.mapResponse.map((x) => x.fn)), a.afterResponse?.map && (lifecycle.afterResponse = a.afterResponse.map((x) => x.fn)), a.error?.map && (lifecycle.error = a.error.map((x) => x.fn)), a.stop?.map && (lifecycle.stop = a.stop.map((x) => x.fn)), a.trace?.map ? lifecycle.trace = a.trace.map((x) => x.fn) : lifecycle.trace = [], lifecycle;\n}, cloneInference = (inference) => ({\n  body: inference.body,\n  cookie: inference.cookie,\n  headers: inference.headers,\n  query: inference.query,\n  set: inference.set,\n  server: inference.server,\n  path: inference.path,\n  route: inference.route,\n  url: inference.url\n}), redirect = (url, status = 302) => Response.redirect(url, status), ELYSIA_FORM_DATA = Symbol(\"ElysiaFormData\"), ELYSIA_REQUEST_ID = Symbol(\"ElysiaRequestId\"), form = (items) => {\n  const formData = new FormData();\n  if (formData[ELYSIA_FORM_DATA] = {}, items)\n    for (const [key, value] of Object.entries(items)) {\n      if (Array.isArray(value)) {\n        formData[ELYSIA_FORM_DATA][key] = [];\n        for (const v of value)\n          value instanceof File ? formData.append(key, value, value.name) : value instanceof ElysiaFile ? formData.append(key, value.value, value.value?.name) : formData.append(key, value), formData[ELYSIA_FORM_DATA][key].push(value);\n        continue;\n      }\n      value instanceof File ? formData.append(key, value, value.name) : value instanceof ElysiaFile ? formData.append(key, value.value, value.value?.name) : formData.append(key, value), formData[ELYSIA_FORM_DATA][key] = value;\n    }\n  return formData;\n}, randomId = typeof crypto > \"u\" ? () => {\n  let result = \"\";\n  const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", charactersLength = characters.length;\n  for (let i = 0; i < 16; i++)\n    result += characters.charAt(\n      Math.floor(Math.random() * charactersLength)\n    );\n  return result;\n} : () => {\n  const uuid = crypto.randomUUID();\n  return uuid.slice(0, 8) + uuid.slice(24, 32);\n}, deduplicateChecksum = (array) => {\n  if (!array.length) return [];\n  const hashes = [];\n  for (let i = 0; i < array.length; i++) {\n    const item = array[i];\n    item.checksum && (hashes.includes(item.checksum) && (array.splice(i, 1), i--), hashes.push(item.checksum));\n  }\n  return array;\n}, promoteEvent = (events, as = \"scoped\") => {\n  if (events) {\n    if (as === \"scoped\") {\n      for (const event of events)\n        \"scope\" in event && event.scope === \"local\" && (event.scope = \"scoped\");\n      return;\n    }\n    for (const event of events) \"scope\" in event && (event.scope = \"global\");\n  }\n}, getLoosePath = (path) => path.charCodeAt(path.length - 1) === 47 ? path.slice(0, path.length - 1) : path + \"/\", isNotEmpty = (obj) => {\n  if (!obj) return !1;\n  for (const _ in obj) return !0;\n  return !1;\n}, encodePath = (path, { dynamic = !1 } = {}) => {\n  let encoded = encodeURIComponent(path).replace(/%2F/g, \"/\");\n  return dynamic && (encoded = encoded.replace(/%3A/g, \":\").replace(/%3F/g, \"?\")), encoded;\n}, supportPerMethodInlineHandler = !!(typeof Bun > \"u\" || Bun.semver?.satisfies?.(Bun.version, \">=1.2.14\")), sse = (_payload) => {\n  if (_payload instanceof ReadableStream)\n    return _payload.sse = !0, _payload;\n  const payload = typeof _payload == \"string\" ? { data: _payload } : _payload;\n  return payload.sse = !0, payload.toSSE = () => {\n    let payloadString = \"\";\n    return payload.id !== void 0 && payload.id !== null && (payloadString += `id: ${payload.id}\n`), payload.event && (payloadString += `event: ${payload.event}\n`), payload.retry !== void 0 && (payloadString += `retry: ${payload.retry}\n`), payload.data === null ? payloadString += `data: null\n` : typeof payload.data == \"string\" ? payloadString += `data: ${payload.data}\n` : typeof payload.data == \"object\" && (payloadString += `data: ${JSON.stringify(payload.data)}\n`), payloadString && (payloadString += `\n`), payloadString;\n  }, payload;\n};\nasync function getResponseLength(response) {\n  if (response.bodyUsed || !response.body) return 0;\n  let length = 0;\n  const reader = response.body.getReader();\n  for (; ; ) {\n    const { done, value } = await reader.read();\n    if (done) break;\n    length += value.byteLength;\n  }\n  return length;\n}\nconst emptySchema = {\n  headers: !0,\n  cookie: !0,\n  query: !0,\n  params: !0,\n  body: !0,\n  response: !0\n};\nfunction deepClone(source, weak = /* @__PURE__ */ new WeakMap()) {\n  if (source === null || typeof source != \"object\" || typeof source == \"function\")\n    return source;\n  if (weak.has(source)) return weak.get(source);\n  if (Array.isArray(source)) {\n    const copy = new Array(source.length);\n    weak.set(source, copy);\n    for (let i = 0; i < source.length; i++)\n      copy[i] = deepClone(source[i], weak);\n    return copy;\n  }\n  if (typeof source == \"object\") {\n    const keys = Object.keys(source).concat(\n      Object.getOwnPropertySymbols(source)\n    ), cloned = {};\n    weak.set(source, cloned);\n    for (const key of keys)\n      cloned[key] = deepClone(source[key], weak);\n    return cloned;\n  }\n  return source;\n}\nexport {\n  ELYSIA_FORM_DATA,\n  ELYSIA_REQUEST_ID,\n  InvertedStatusMap,\n  PromiseGroup,\n  StatusMap,\n  asHookType,\n  checksum,\n  cloneInference,\n  deduplicateChecksum,\n  deepClone,\n  emptySchema,\n  encodePath,\n  filterGlobalHook,\n  fnToContainer,\n  form,\n  getLoosePath,\n  getResponseLength,\n  hasHeaderShorthand,\n  injectChecksum,\n  insertStandaloneValidator,\n  isClass,\n  isNotEmpty,\n  isNumericString,\n  lifeCycleToArray,\n  lifeCycleToFn,\n  localHookToLifeCycleStore,\n  mergeCookie,\n  mergeDeep,\n  mergeHook,\n  mergeLifeCycle,\n  mergeObjectArray,\n  mergeResponse,\n  mergeSchemaValidator,\n  primitiveHooks,\n  promoteEvent,\n  randomId,\n  redirect,\n  replaceUrlPath,\n  signCookie,\n  sse,\n  supportPerMethodInlineHandler,\n  unsignCookie\n};\n", "import { FormatRegistry } from \"@sinclair/typebox\";\nconst fullFormats = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: getTime(!0),\n  \"date-time\": getDateTime(!0),\n  \"iso-time\": getTime(!1),\n  \"iso-date-time\": getDateTime(!1),\n  // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n  duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n  uri,\n  \"uri-reference\": /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  \"uri-template\": /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$/,\n  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n  regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n  \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n  // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n  // byte: https://github.com/miguelmota/is-base64\n  byte,\n  // signed 32 bit integer\n  int32: { type: \"number\", validate: validateInt32 },\n  // signed 64 bit integer\n  int64: { type: \"number\", validate: validateInt64 },\n  // C-type float\n  float: { type: \"number\", validate: validateNumber },\n  // C-type double\n  double: { type: \"number\", validate: validateNumber },\n  // hint to the UI to hide input strings\n  password: !0,\n  // unchecked string payload\n  binary: !0\n};\nfunction isLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/, DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction date(str) {\n  const matches = DATE.exec(str);\n  if (!matches) return !1;\n  const year = +matches[1], month = +matches[2], day = +matches[3];\n  return month >= 1 && month <= 12 && day >= 1 && day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month]);\n}\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d(?:\\.\\d+)?)(z|([+-])(\\d\\d)(?::?(\\d\\d))?)?$/i;\nfunction getTime(strictTimeZone) {\n  return function(str) {\n    const matches = TIME.exec(str);\n    if (!matches) return !1;\n    const hr = +matches[1], min = +matches[2], sec = +matches[3], tz = matches[4], tzSign = matches[5] === \"-\" ? -1 : 1, tzH = +(matches[6] || 0), tzM = +(matches[7] || 0);\n    if (tzH > 23 || tzM > 59 || strictTimeZone && !tz) return !1;\n    if (hr <= 23 && min <= 59 && sec < 60) return !0;\n    const utcMin = min - tzM * tzSign, utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0);\n    return (utcHr === 23 || utcHr === -1) && (utcMin === 59 || utcMin === -1) && sec < 61;\n  };\n}\nconst parseDateTimeEmptySpace = (str) => str.charCodeAt(str.length - 6) === 32 ? str.slice(0, -6) + \"+\" + str.slice(-5) : str, DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction getDateTime(strictTimeZone) {\n  const time = getTime(strictTimeZone);\n  return function(str) {\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1]);\n  };\n}\nconst NOT_URI_FRAGMENT = /\\/|:/, URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\nconst BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;\nfunction byte(str) {\n  return BYTE.lastIndex = 0, BYTE.test(str);\n}\nconst MIN_INT32 = -(2 ** 31), MAX_INT32 = 2 ** 31 - 1;\nfunction validateInt32(value) {\n  return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32;\n}\nfunction validateInt64(value) {\n  return Number.isInteger(value);\n}\nfunction validateNumber() {\n  return !0;\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return !1;\n  try {\n    return new RegExp(str), !0;\n  } catch {\n    return !1;\n  }\n}\n/**\n * @license\n *\n * MIT License\n *\n * Copyright (c) 2020 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nconst isISO8601 = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/, isFormalDate = /(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}:\\d{2}\\sGMT(?:\\+|-)\\d{4}\\s\\([^)]+\\)/, isShortenDate = /^(?:(?:(?:(?:0?[1-9]|[12][0-9]|3[01])[/\\s-](?:0?[1-9]|1[0-2])[/\\s-](?:19|20)\\d{2})|(?:(?:19|20)\\d{2}[/\\s-](?:0?[1-9]|1[0-2])[/\\s-](?:0?[1-9]|[12][0-9]|3[01]))))(?:\\s(?:1[012]|0?[1-9]):[0-5][0-9](?::[0-5][0-9])?(?:\\s[AP]M)?)?$/, _validateDate = fullFormats.date, _validateDateTime = fullFormats[\"date-time\"];\nFormatRegistry.Has(\"date\") || FormatRegistry.Set(\"date\", (value) => {\n  const temp = parseDateTimeEmptySpace(value).replace(/\"/g, \"\");\n  if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDate(temp)) {\n    const date2 = new Date(temp);\n    if (!Number.isNaN(date2.getTime())) return !0;\n  }\n  return !1;\n}), FormatRegistry.Has(\"date-time\") || FormatRegistry.Set(\"date-time\", (value) => {\n  const temp = value.replace(/\"/g, \"\");\n  if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDateTime(temp)) {\n    const date2 = new Date(temp);\n    if (!Number.isNaN(date2.getTime())) return !0;\n  }\n  return !1;\n}), Object.entries(fullFormats).forEach((formatEntry) => {\n  const [formatName, formatValue] = formatEntry;\n  FormatRegistry.Has(formatName) || (formatValue instanceof RegExp ? FormatRegistry.Set(formatName, (value) => formatValue.test(value)) : typeof formatValue == \"function\" && FormatRegistry.Set(formatName, formatValue));\n}), FormatRegistry.Has(\"numeric\") || FormatRegistry.Set(\"numeric\", (value) => !!value && !isNaN(+value)), FormatRegistry.Has(\"integer\") || FormatRegistry.Set(\n  \"integer\",\n  (value) => !!value && Number.isInteger(+value)\n), FormatRegistry.Has(\"boolean\") || FormatRegistry.Set(\n  \"boolean\",\n  (value) => value === \"true\" || value === \"false\"\n), FormatRegistry.Has(\"ObjectString\") || FormatRegistry.Set(\"ObjectString\", (value) => {\n  let start = value.charCodeAt(0);\n  if ((start === 9 || start === 10 || start === 32) && (start = value.trimStart().charCodeAt(0)), start !== 123 && start !== 91) return !1;\n  try {\n    return JSON.parse(value), !0;\n  } catch {\n    return !1;\n  }\n}), FormatRegistry.Has(\"ArrayString\") || FormatRegistry.Set(\"ArrayString\", (value) => {\n  let start = value.charCodeAt(0);\n  if ((start === 9 || start === 10 || start === 32) && (start = value.trimStart().charCodeAt(0)), start !== 123 && start !== 91) return !1;\n  try {\n    return JSON.parse(value), !0;\n  } catch {\n    return !1;\n  }\n});\nexport {\n  fullFormats,\n  parseDateTimeEmptySpace\n};\n", "import { checksum } from \"./utils.mjs\";\nimport { isBun } from \"./universal/utils.mjs\";\nimport { isCloudflareWorker } from \"./adapter/cloudflare-worker/index.mjs\";\nconst separateFunction = (code) => {\n  code.startsWith(\"async\") && (code = code.slice(5)), code = code.trimStart();\n  let index = -1;\n  if (code.charCodeAt(0) === 40 && (index = code.indexOf(\"=>\", code.indexOf(\")\")), index !== -1)) {\n    let bracketEndIndex = index;\n    for (; bracketEndIndex > 0 && code.charCodeAt(--bracketEndIndex) !== 41; )\n      ;\n    let body = code.slice(index + 2);\n    return body.charCodeAt(0) === 32 && (body = body.trimStart()), [\n      code.slice(1, bracketEndIndex),\n      body,\n      {\n        isArrowReturn: body.charCodeAt(0) !== 123\n      }\n    ];\n  }\n  if (/^(\\w+)=>/g.test(code) && (index = code.indexOf(\"=>\"), index !== -1)) {\n    let body = code.slice(index + 2);\n    return body.charCodeAt(0) === 32 && (body = body.trimStart()), [\n      code.slice(0, index),\n      body,\n      {\n        isArrowReturn: body.charCodeAt(0) !== 123\n      }\n    ];\n  }\n  if (code.startsWith(\"function\")) {\n    index = code.indexOf(\"(\");\n    const end = code.indexOf(\")\");\n    return [\n      code.slice(index + 1, end),\n      code.slice(end + 2),\n      {\n        isArrowReturn: !1\n      }\n    ];\n  }\n  const start = code.indexOf(\"(\");\n  if (start !== -1) {\n    const sep = code.indexOf(`\n`, 2), parameter = code.slice(0, sep), end = parameter.lastIndexOf(\")\") + 1, body = code.slice(sep + 1);\n    return [\n      parameter.slice(start, end),\n      \"{\" + body,\n      {\n        isArrowReturn: !1\n      }\n    ];\n  }\n  const x = code.split(`\n`, 2);\n  return [x[0], x[1], { isArrowReturn: !1 }];\n}, bracketPairRange = (parameter) => {\n  const start = parameter.indexOf(\"{\");\n  if (start === -1) return [-1, 0];\n  let end = start + 1, deep = 1;\n  for (; end < parameter.length; end++) {\n    const char = parameter.charCodeAt(end);\n    if (char === 123 ? deep++ : char === 125 && deep--, deep === 0) break;\n  }\n  return deep !== 0 ? [0, parameter.length] : [start, end + 1];\n}, bracketPairRangeReverse = (parameter) => {\n  const end = parameter.lastIndexOf(\"}\");\n  if (end === -1) return [-1, 0];\n  let start = end - 1, deep = 1;\n  for (; start >= 0; start--) {\n    const char = parameter.charCodeAt(start);\n    if (char === 125 ? deep++ : char === 123 && deep--, deep === 0) break;\n  }\n  return deep !== 0 ? [-1, 0] : [start, end + 1];\n}, removeColonAlias = (parameter) => {\n  for (; ; ) {\n    const start = parameter.indexOf(\":\");\n    if (start === -1) break;\n    let end = parameter.indexOf(\",\", start);\n    end === -1 && (end = parameter.indexOf(\"}\", start) - 1), end === -2 && (end = parameter.length), parameter = parameter.slice(0, start) + parameter.slice(end);\n  }\n  return parameter;\n}, retrieveRootParamters = (parameter) => {\n  let hasParenthesis = !1;\n  parameter.charCodeAt(0) === 40 && (parameter = parameter.slice(1, -1)), parameter.charCodeAt(0) === 123 && (hasParenthesis = !0, parameter = parameter.slice(1, -1)), parameter = parameter.replace(/( |\\t|\\n)/g, \"\").trim();\n  let parameters = [];\n  for (; ; ) {\n    let [start, end] = bracketPairRange(parameter);\n    if (start === -1) break;\n    parameters.push(parameter.slice(0, start - 1)), parameter.charCodeAt(end) === 44 && end++, parameter = parameter.slice(end);\n  }\n  parameter = removeColonAlias(parameter), parameter && (parameters = parameters.concat(parameter.split(\",\")));\n  const parameterMap = /* @__PURE__ */ Object.create(null);\n  for (const p of parameters) {\n    if (p.indexOf(\",\") === -1) {\n      parameterMap[p] = !0;\n      continue;\n    }\n    for (const q of p.split(\",\")) parameterMap[q.trim()] = !0;\n  }\n  return {\n    hasParenthesis,\n    parameters: parameterMap\n  };\n}, findParameterReference = (parameter, inference) => {\n  const { parameters, hasParenthesis } = retrieveRootParamters(parameter);\n  return parameters.query && (inference.query = !0), parameters.headers && (inference.headers = !0), parameters.body && (inference.body = !0), parameters.cookie && (inference.cookie = !0), parameters.set && (inference.set = !0), parameters.server && (inference.server = !0), parameters.route && (inference.route = !0), parameters.url && (inference.url = !0), parameters.path && (inference.path = !0), hasParenthesis ? `{ ${Object.keys(parameters).join(\", \")} }` : Object.keys(parameters).join(\", \");\n}, findEndIndex = (type, content, index) => {\n  const regex = new RegExp(\n    `${type.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}[\\\\n\\\\t,; ]`\n  );\n  index !== void 0 && (regex.lastIndex = index);\n  const match = regex.exec(content);\n  return match ? match.index : -1;\n}, findEndQueryBracketIndex = (type, content, index) => {\n  const bracketEndIndex = content.indexOf(type + \"]\", index), singleQuoteIndex = content.indexOf(type + \"'\", index), doubleQuoteIndex = content.indexOf(type + '\"', index);\n  return [bracketEndIndex, singleQuoteIndex, doubleQuoteIndex].filter((i) => i > 0).sort((a, b) => a - b)[0] || -1;\n}, findAlias = (type, body, depth = 0) => {\n  if (depth > 5) return [];\n  const aliases = [];\n  let content = body;\n  for (; ; ) {\n    let index = findEndIndex(\" = \" + type, content);\n    if (index === -1 && (index = findEndIndex(\"=\" + type, content)), index === -1) {\n      let lastIndex = content.indexOf(\" = \" + type);\n      if (lastIndex === -1 && (lastIndex = content.indexOf(\"=\" + type)), lastIndex + 3 + type.length !== content.length) break;\n      index = lastIndex;\n    }\n    const part = content.slice(0, index), lastPart = part.lastIndexOf(\" \");\n    let variable = part.slice(lastPart !== -1 ? lastPart + 1 : -1);\n    if (variable === \"}\") {\n      const [start, end] = bracketPairRangeReverse(part);\n      aliases.push(removeColonAlias(content.slice(start, end))), content = content.slice(index + 3 + type.length);\n      continue;\n    }\n    for (; variable.charCodeAt(0) === 44; ) variable = variable.slice(1);\n    for (; variable.charCodeAt(0) === 9; ) variable = variable.slice(1);\n    variable.includes(\"(\") || aliases.push(variable), content = content.slice(index + 3 + type.length);\n  }\n  for (const alias of aliases) {\n    if (alias.charCodeAt(0) === 123) continue;\n    const deepAlias = findAlias(alias, body);\n    deepAlias.length > 0 && aliases.push(...deepAlias);\n  }\n  return aliases;\n}, extractMainParameter = (parameter) => {\n  if (!parameter) return;\n  if (parameter.charCodeAt(0) !== 123) return parameter;\n  if (parameter = parameter.slice(2, -2), !parameter.includes(\",\"))\n    return parameter.indexOf(\"...\") !== -1 ? parameter.slice(parameter.indexOf(\"...\") + 3) : void 0;\n  const spreadIndex = parameter.indexOf(\"...\");\n  if (spreadIndex !== -1)\n    return parameter.slice(spreadIndex + 3).trimEnd();\n}, inferBodyReference = (code, aliases, inference) => {\n  const access = (type, alias) => new RegExp(\n    `${alias}\\\\.(${type})|${alias}\\\\[\"${type}\"\\\\]|${alias}\\\\['${type}'\\\\]`\n  ).test(code);\n  for (const alias of aliases)\n    if (alias) {\n      if (alias.charCodeAt(0) === 123) {\n        const parameters = retrieveRootParamters(alias).parameters;\n        parameters.query && (inference.query = !0), parameters.headers && (inference.headers = !0), parameters.body && (inference.body = !0), parameters.cookie && (inference.cookie = !0), parameters.set && (inference.set = !0), parameters.server && (inference.server = !0), parameters.url && (inference.url = !0), parameters.route && (inference.route = !0), parameters.path && (inference.path = !0);\n        continue;\n      }\n      if (!inference.query && (access(\"query\", alias) || code.includes(\"return \" + alias) || code.includes(\"return \" + alias + \".query\")) && (inference.query = !0), !inference.headers && access(\"headers\", alias) && (inference.headers = !0), !inference.body && access(\"body\", alias) && (inference.body = !0), !inference.cookie && access(\"cookie\", alias) && (inference.cookie = !0), !inference.set && access(\"set\", alias) && (inference.set = !0), !inference.server && access(\"server\", alias) && (inference.server = !0), !inference.route && access(\"route\", alias) && (inference.route = !0), !inference.url && access(\"url\", alias) && (inference.url = !0), !inference.path && access(\"path\", alias) && (inference.path = !0), inference.query && inference.headers && inference.body && inference.cookie && inference.set && inference.server && inference.route && inference.url && inference.path)\n        break;\n    }\n  return aliases;\n}, removeDefaultParameter = (parameter) => {\n  for (; ; ) {\n    const index = parameter.indexOf(\"=\");\n    if (index === -1) break;\n    const commaIndex = parameter.indexOf(\",\", index), bracketIndex = parameter.indexOf(\"}\", index), end = [commaIndex, bracketIndex].filter((i) => i > 0).sort((a, b) => a - b)[0] || -1;\n    if (end === -1) {\n      parameter = parameter.slice(0, index);\n      break;\n    }\n    parameter = parameter.slice(0, index) + parameter.slice(end);\n  }\n  return parameter.split(\",\").map((i) => i.trim()).join(\", \");\n}, isContextPassToFunction = (context, body, inference) => {\n  try {\n    const captureFunction = new RegExp(`\\\\w\\\\((.*?)?${context}`, \"gs\");\n    captureFunction.test(body);\n    const nextChar = body.charCodeAt(captureFunction.lastIndex);\n    return nextChar === 41 || nextChar === 44 ? (inference.query = !0, inference.headers = !0, inference.body = !0, inference.cookie = !0, inference.set = !0, inference.server = !0, inference.url = !0, inference.route = !0, inference.path = !0, !0) : !1;\n  } catch {\n    return console.log(\n      \"[Sucrose] warning: unexpected isContextPassToFunction error, you may continue development as usual but please report the following to maintainers:\"\n    ), console.log(\"--- body ---\"), console.log(body), console.log(\"--- context ---\"), console.log(context), !0;\n  }\n};\nlet pendingGC, caches = {};\nconst clearSucroseCache = (delay) => {\n  delay === null || isCloudflareWorker() || (delay === void 0 && (delay = 4 * 60 * 1e3 + 55 * 1e3), pendingGC && clearTimeout(pendingGC), pendingGC = setTimeout(() => {\n    caches = {}, pendingGC = void 0, isBun && Bun.gc(!1);\n  }, delay));\n}, mergeInference = (a, b) => ({\n  body: a.body || b.body,\n  cookie: a.cookie || b.cookie,\n  headers: a.headers || b.headers,\n  query: a.query || b.query,\n  set: a.set || b.set,\n  server: a.server || b.server,\n  url: a.url || b.url,\n  route: a.route || b.route,\n  path: a.path || b.path\n}), sucrose = (lifeCycle, inference = {\n  query: !1,\n  headers: !1,\n  body: !1,\n  cookie: !1,\n  set: !1,\n  server: !1,\n  url: !1,\n  route: !1,\n  path: !1\n}, settings = {}) => {\n  const events = [];\n  lifeCycle.request?.length && events.push(...lifeCycle.request), lifeCycle.beforeHandle?.length && events.push(...lifeCycle.beforeHandle), lifeCycle.parse?.length && events.push(...lifeCycle.parse), lifeCycle.error?.length && events.push(...lifeCycle.error), lifeCycle.transform?.length && events.push(...lifeCycle.transform), lifeCycle.afterHandle?.length && events.push(...lifeCycle.afterHandle), lifeCycle.mapResponse?.length && events.push(...lifeCycle.mapResponse), lifeCycle.afterResponse?.length && events.push(...lifeCycle.afterResponse), lifeCycle.handler && typeof lifeCycle.handler == \"function\" && events.push(lifeCycle.handler);\n  for (let i = 0; i < events.length; i++) {\n    const e = events[i];\n    if (!e) continue;\n    const event = typeof e == \"object\" ? e.fn : e;\n    if (typeof event != \"function\") continue;\n    const content = event.toString(), key = checksum(content), cachedInference = caches[key];\n    if (cachedInference) {\n      inference = mergeInference(inference, cachedInference);\n      continue;\n    }\n    clearSucroseCache(settings.gcTime);\n    const fnInference = {\n      query: !1,\n      headers: !1,\n      body: !1,\n      cookie: !1,\n      set: !1,\n      server: !1,\n      url: !1,\n      route: !1,\n      path: !1\n    }, [parameter, body] = separateFunction(content), rootParameters = findParameterReference(parameter, fnInference), mainParameter = extractMainParameter(rootParameters);\n    if (mainParameter) {\n      const aliases = findAlias(mainParameter, body.slice(1, -1));\n      aliases.splice(0, -1, mainParameter);\n      let code = body;\n      code.charCodeAt(0) === 123 && code.charCodeAt(body.length - 1) === 125 && (code = code.slice(1, -1)), isContextPassToFunction(mainParameter, code, fnInference) || inferBodyReference(code, aliases, fnInference), !fnInference.query && code.includes(\"return \" + mainParameter + \".query\") && (fnInference.query = !0);\n    }\n    if (caches[key] || (caches[key] = fnInference), inference = mergeInference(inference, fnInference), inference.query && inference.headers && inference.body && inference.cookie && inference.set && inference.server && inference.url && inference.route && inference.path)\n      break;\n  }\n  return inference;\n};\nexport {\n  bracketPairRange,\n  bracketPairRangeReverse,\n  clearSucroseCache,\n  extractMainParameter,\n  findAlias,\n  findParameterReference,\n  inferBodyReference,\n  isContextPassToFunction,\n  mergeInference,\n  removeColonAlias,\n  removeDefaultParameter,\n  retrieveRootParamters,\n  separateFunction,\n  sucrose\n};\n", "import { WebStandardAdapter } from \"../web-standard/index.mjs\";\nfunction isCloudflareWorker() {\n  try {\n    if (\n      // @ts-ignore\n      typeof caches < \"u\" && // @ts-ignore\n      typeof caches.default < \"u\" || typeof WebSocketPair < \"u\"\n    ) return !0;\n  } catch {\n    return !1;\n  }\n  return !1;\n}\nconst CloudflareAdapter = {\n  ...WebStandardAdapter,\n  name: \"cloudflare-worker\",\n  composeGeneralHandler: {\n    ...WebStandardAdapter.composeGeneralHandler,\n    error404(hasEventHook, hasErrorHook, afterHandle) {\n      const { code } = WebStandardAdapter.composeGeneralHandler.error404(\n        hasEventHook,\n        hasErrorHook,\n        afterHandle\n      );\n      return {\n        code,\n        declare: hasErrorHook ? \"\" : (\n          // This only work because Elysia only clone the Response via .clone()\n          `const error404Message=notFound.message.toString()\nconst error404={clone:()=>new Response(error404Message,{status:404})}\n`\n        )\n      };\n    }\n  },\n  beforeCompile(app) {\n    for (const route of app.routes) route.compile();\n  },\n  listen(app) {\n    return (options, callback) => {\n      console.warn(\n        \"Cloudflare Worker does not support listen method. Please export default Elysia instance instead.\"\n      ), app.compile();\n    };\n  }\n};\nexport {\n  CloudflareAdapter,\n  isCloudflareWorker\n};\n", "import {\n  mapResponse,\n  mapEarlyResponse,\n  mapCompactResponse,\n  createStaticHandler\n} from \"./handler.mjs\";\nconst WebStandardAdapter = {\n  name: \"web-standard\",\n  isWebStandard: !0,\n  handler: {\n    mapResponse,\n    mapEarlyResponse,\n    mapCompactResponse,\n    createStaticHandler\n  },\n  composeHandler: {\n    mapResponseContext: \"c.request\",\n    preferWebstandardHeaders: !0,\n    // @ts-ignore Bun specific\n    headers: `c.headers={}\nfor(const [k,v] of c.request.headers.entries())c.headers[k]=v\n`,\n    parser: {\n      json(isOptional) {\n        return isOptional ? `try{c.body=await c.request.json()}catch{}\n` : `c.body=await c.request.json()\n`;\n      },\n      text() {\n        return `c.body=await c.request.text()\n`;\n      },\n      urlencoded() {\n        return `c.body=parseQuery(await c.request.text())\n`;\n      },\n      arrayBuffer() {\n        return `c.body=await c.request.arrayBuffer()\n`;\n      },\n      formData(isOptional) {\n        let fnLiteral = `\nc.body={}\n`;\n        return isOptional ? fnLiteral += \"let form;try{form=await c.request.formData()}catch{}\" : fnLiteral += `const form=await c.request.formData()\n`, fnLiteral + `for(const key of form.keys()){if(c.body[key]) continue\nconst value=form.getAll(key)\nif(value.length===1)c.body[key]=value[0]\nelse c.body[key]=value}`;\n      }\n    }\n  },\n  async stop(app, closeActiveConnections) {\n    if (!app.server)\n      throw new Error(\n        \"Elysia isn't running. Call `app.listen` to start the server.\"\n      );\n    if (app.server && (await app.server.stop(closeActiveConnections), app.server = null, app.event.stop?.length))\n      for (let i = 0; i < app.event.stop.length; i++)\n        app.event.stop[i].fn(app);\n  },\n  composeGeneralHandler: {\n    parameters: \"r\",\n    createContext(app) {\n      let decoratorsLiteral = \"\", fnLiteral = \"\";\n      const defaultHeaders = app.setHeaders;\n      for (const key of Object.keys(app.decorator))\n        decoratorsLiteral += `,'${key}':decorator['${key}']`;\n      const standardHostname = app.config.handler?.standardHostname ?? !0, hasTrace = !!app.event.trace?.length;\n      return fnLiteral += `const u=r.url,s=u.indexOf('/',${standardHostname ? 11 : 7}),qi=u.indexOf('?',s+1)\nlet p\nif(qi===-1)p=u.substring(s)\nelse p=u.substring(s, qi)\n`, hasTrace && (fnLiteral += `const id=randomId()\n`), fnLiteral += \"const c={request:r,store,qi,path:p,url:u,redirect,status,set:{headers:\", fnLiteral += Object.keys(defaultHeaders ?? {}).length ? \"Object.assign({},app.setHeaders)\" : \"Object.create(null)\", fnLiteral += \",status:200}\", app.inference.server && (fnLiteral += \",get server(){return app.getServer()}\"), hasTrace && (fnLiteral += \",[ELYSIA_REQUEST_ID]:id\"), fnLiteral += decoratorsLiteral, fnLiteral += `}\n`, fnLiteral;\n    },\n    error404(hasEventHook, hasErrorHook, afterHandle = \"\") {\n      let findDynamicRoute = \"if(route===null){\" + afterHandle + (hasErrorHook ? \"\" : \"c.set.status=404\") + `\nreturn `;\n      return hasErrorHook ? findDynamicRoute += `app.handleError(c,notFound,false,${this.parameters})` : findDynamicRoute += hasEventHook ? \"c.response=c.responseValue=new Response(error404Message,{status:c.set.status===200?404:c.set.status,headers:c.set.headers})\" : \"c.response=c.responseValue=error404.clone()\", findDynamicRoute += \"}\", {\n        declare: hasErrorHook ? \"\" : `const error404Message=notFound.message.toString()\nconst error404=new Response(error404Message,{status:404})\n`,\n        code: findDynamicRoute\n      };\n    }\n  },\n  composeError: {\n    mapResponseContext: \"\",\n    validationError: \"return new Response(error.message,{headers:Object.assign({'content-type':'application/json'},set.headers),status:set.status})\",\n    unknownError: \"return new Response(error.message,{headers:set.headers,status:error.status??set.status??500})\"\n  },\n  listen() {\n    return () => {\n      throw new Error(\n        \"WebStandard does not support listen, you might want to export default Elysia.fetch instead\"\n      );\n    };\n  }\n};\nexport {\n  WebStandardAdapter\n};\n", "import {\n  createResponseHandler,\n  createStreamHandler,\n  handleFile,\n  handleSet\n} from \"../utils.mjs\";\nimport { mime } from \"../../universal/file.mjs\";\nimport { isNotEmpty } from \"../../utils.mjs\";\nimport { Cookie } from \"../../cookies.mjs\";\nimport { ElysiaCustomStatusResponse } from \"../../error.mjs\";\nconst handleElysiaFile = (file, set2 = {\n  headers: {}\n}) => {\n  const path = file.path, contentType = mime[path.slice(path.lastIndexOf(\".\") + 1)];\n  return contentType && (set2.headers[\"content-type\"] = contentType), file.stats && set2.status !== 206 && set2.status !== 304 && set2.status !== 412 && set2.status !== 416 ? file.stats.then((stat) => {\n    const size = stat.size;\n    return size !== void 0 && (set2.headers[\"content-range\"] = `bytes 0-${size - 1}/${size}`, set2.headers[\"content-length\"] = size), handleFile(file.value, set2);\n  }) : handleFile(file.value, set2);\n}, mapResponse = (response, set2, request) => {\n  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n    switch (handleSet(set2), response?.constructor?.name) {\n      case \"String\":\n        return set2.headers[\"content-type\"] = \"text/plain\", new Response(response, set2);\n      case \"Array\":\n      case \"Object\":\n        return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n      case \"ElysiaFile\":\n        return handleElysiaFile(response, set2);\n      case \"File\":\n        return handleFile(response, set2);\n      case \"Blob\":\n        return handleFile(response, set2);\n      case \"ElysiaCustomStatusResponse\":\n        return set2.status = response.code, mapResponse(\n          response.response,\n          set2,\n          request\n        );\n      case void 0:\n        return response ? new Response(JSON.stringify(response), set2) : new Response(\"\", set2);\n      case \"Response\":\n        return handleResponse(response, set2, request);\n      case \"Error\":\n        return errorToResponse(response, set2);\n      case \"Promise\":\n        return response.then(\n          (x) => mapResponse(x, set2, request)\n        );\n      case \"Function\":\n        return mapResponse(response(), set2, request);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(\n          response.toString(),\n          set2\n        );\n      case \"Cookie\":\n        return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n      case \"FormData\":\n        return new Response(response, set2);\n      default:\n        if (response instanceof Response)\n          return handleResponse(response, set2, request);\n        if (response instanceof Promise)\n          return response.then((x) => mapResponse(x, set2));\n        if (response instanceof Error)\n          return errorToResponse(response, set2);\n        if (response instanceof ElysiaCustomStatusResponse)\n          return set2.status = response.code, mapResponse(\n            response.response,\n            set2,\n            request\n          );\n        if (\n          // @ts-expect-error\n          typeof response?.next == \"function\" || response instanceof ReadableStream\n        )\n          return handleStream(response, set2, request);\n        if (typeof response?.then == \"function\")\n          return response.then((x) => mapResponse(x, set2));\n        if (typeof response?.toResponse == \"function\")\n          return mapResponse(response.toResponse(), set2);\n        if (\"charCodeAt\" in response) {\n          const code = response.charCodeAt(0);\n          if (code === 123 || code === 91)\n            return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n              JSON.stringify(response),\n              set2\n            );\n        }\n        return new Response(response, set2);\n    }\n  return (\n    // @ts-expect-error\n    typeof response?.next == \"function\" || response instanceof ReadableStream ? handleStream(response, set2, request) : mapCompactResponse(response, request)\n  );\n}, mapEarlyResponse = (response, set2, request) => {\n  if (response != null)\n    if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n      switch (handleSet(set2), response?.constructor?.name) {\n        case \"String\":\n          return set2.headers[\"content-type\"] = \"text/plain\", new Response(response, set2);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleElysiaFile(response, set2);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), set2) : void 0;\n        case \"Response\":\n          return handleResponse(response, set2, request);\n        case \"Promise\":\n          return response.then(\n            (x) => mapEarlyResponse(x, set2)\n          );\n        case \"Error\":\n          return errorToResponse(response, set2);\n        case \"Function\":\n          return mapEarlyResponse(response(), set2);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(\n            response.toString(),\n            set2\n          );\n        case \"FormData\":\n          return new Response(response);\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        default:\n          if (response instanceof Response)\n            return handleResponse(response, set2, request);\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (response instanceof Error)\n            return errorToResponse(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            const code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response, set2);\n      }\n    else\n      switch (response?.constructor?.name) {\n        case \"String\":\n          return set2.headers[\"content-type\"] = \"text/plain\", new Response(response);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleElysiaFile(response, set2);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), {\n            headers: {\n              \"content-type\": \"application/json\"\n            }\n          }) : new Response(\"\");\n        case \"Response\":\n          return response;\n        case \"Promise\":\n          return response.then((x) => {\n            const r = mapEarlyResponse(x, set2);\n            if (r !== void 0) return r;\n          });\n        case \"Error\":\n          return errorToResponse(response, set2);\n        case \"Function\":\n          return mapCompactResponse(response(), request);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(response.toString());\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        case \"FormData\":\n          return new Response(response);\n        default:\n          if (response instanceof Response) return response;\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (response instanceof Error)\n            return errorToResponse(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            const code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response);\n      }\n}, mapCompactResponse = (response, request) => {\n  switch (response?.constructor?.name) {\n    case \"String\":\n      return new Response(response, {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        }\n      });\n    case \"Object\":\n    case \"Array\":\n      return new Response(JSON.stringify(response), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    case \"ElysiaFile\":\n      return handleElysiaFile(response);\n    case \"File\":\n      return handleFile(response);\n    case \"Blob\":\n      return handleFile(response);\n    case \"ElysiaCustomStatusResponse\":\n      return mapResponse(\n        response.response,\n        {\n          status: response.code,\n          headers: {}\n        }\n      );\n    case void 0:\n      return response ? new Response(JSON.stringify(response), {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }) : new Response(\"\");\n    case \"Response\":\n      return response;\n    case \"Error\":\n      return errorToResponse(response);\n    case \"Promise\":\n      return response.then(\n        (x) => mapCompactResponse(x, request)\n      );\n    // ? Maybe response or Blob\n    case \"Function\":\n      return mapCompactResponse(response(), request);\n    case \"Number\":\n    case \"Boolean\":\n      return new Response(response.toString());\n    case \"FormData\":\n      return new Response(response);\n    default:\n      if (response instanceof Response) return response;\n      if (response instanceof Promise)\n        return response.then(\n          (x) => mapCompactResponse(x, request)\n        );\n      if (response instanceof Error)\n        return errorToResponse(response);\n      if (response instanceof ElysiaCustomStatusResponse)\n        return mapResponse(\n          response.response,\n          {\n            status: response.code,\n            headers: {}\n          }\n        );\n      if (\n        // @ts-expect-error\n        typeof response?.next == \"function\" || response instanceof ReadableStream\n      )\n        return handleStream(response, void 0, request);\n      if (typeof response?.then == \"function\")\n        return response.then((x) => mapResponse(x, set));\n      if (typeof response?.toResponse == \"function\")\n        return mapCompactResponse(response.toResponse());\n      if (\"charCodeAt\" in response) {\n        const code = response.charCodeAt(0);\n        if (code === 123 || code === 91)\n          return new Response(JSON.stringify(response), {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n      }\n      return new Response(response);\n  }\n}, errorToResponse = (error, set2) => new Response(\n  JSON.stringify({\n    name: error?.name,\n    message: error?.message,\n    cause: error?.cause\n  }),\n  {\n    status: set2?.status !== 200 ? set2?.status ?? 500 : 500,\n    headers: set2?.headers\n  }\n), createStaticHandler = (handle, hooks, setHeaders = {}) => {\n  if (typeof handle == \"function\") return;\n  const response = mapResponse(handle, {\n    headers: setHeaders\n  });\n  if (!hooks.parse?.length && !hooks.transform?.length && !hooks.beforeHandle?.length && !hooks.afterHandle?.length)\n    return () => response.clone();\n}, handleResponse = createResponseHandler({\n  mapResponse,\n  mapCompactResponse\n}), handleStream = createStreamHandler({\n  mapResponse,\n  mapCompactResponse\n});\nexport {\n  createStaticHandler,\n  errorToResponse,\n  mapCompactResponse,\n  mapEarlyResponse,\n  mapResponse\n};\n", "import { serializeCookie } from \"../cookies.mjs\";\nimport { hasHeaderShorthand, isNotEmpty, StatusMap } from \"../utils.mjs\";\nimport { isBun } from \"../universal/utils.mjs\";\nimport { env } from \"../universal/index.mjs\";\nconst handleFile = (response, set) => {\n  if (!isBun && response instanceof Promise)\n    return response.then((res) => handleFile(res, set));\n  const size = response.size, immutable = set && (set.status === 206 || set.status === 304 || set.status === 412 || set.status === 416), defaultHeader = immutable ? {} : {\n    \"accept-ranges\": \"bytes\",\n    \"content-range\": size ? `bytes 0-${size - 1}/${size}` : void 0\n  };\n  if (!set && !size) return new Response(response);\n  if (!set)\n    return new Response(response, {\n      headers: defaultHeader\n    });\n  if (set.headers instanceof Headers) {\n    for (const key of Object.keys(defaultHeader))\n      key in set.headers && set.headers.append(key, defaultHeader[key]);\n    return immutable && (set.headers.delete(\"content-length\"), set.headers.delete(\"accept-ranges\")), new Response(response, set);\n  }\n  return isNotEmpty(set.headers) ? new Response(response, {\n    status: set.status,\n    headers: Object.assign(defaultHeader, set.headers)\n  }) : new Response(response, {\n    status: set.status,\n    headers: defaultHeader\n  });\n}, parseSetCookies = (headers, setCookie) => {\n  if (!headers) return headers;\n  headers.delete(\"set-cookie\");\n  for (let i = 0; i < setCookie.length; i++) {\n    const index = setCookie[i].indexOf(\"=\");\n    headers.append(\n      \"set-cookie\",\n      `${setCookie[i].slice(0, index)}=${setCookie[i].slice(index + 1) || \"\"}`\n    );\n  }\n  return headers;\n}, responseToSetHeaders = (response, set) => {\n  if (set?.headers) {\n    if (response)\n      if (hasHeaderShorthand)\n        Object.assign(set.headers, response.headers.toJSON());\n      else\n        for (const [key, value] of response.headers.entries())\n          key in set.headers && (set.headers[key] = value);\n    return set.status === 200 && (set.status = response.status), set.headers[\"content-encoding\"] && delete set.headers[\"content-encoding\"], set;\n  }\n  if (!response)\n    return {\n      headers: {},\n      status: set?.status ?? 200\n    };\n  if (hasHeaderShorthand)\n    return set = {\n      headers: response.headers.toJSON(),\n      status: set?.status ?? 200\n    }, set.headers[\"content-encoding\"] && delete set.headers[\"content-encoding\"], set;\n  set = {\n    headers: {},\n    status: set?.status ?? 200\n  };\n  for (const [key, value] of response.headers.entries())\n    key !== \"content-encoding\" && key in set.headers && (set.headers[key] = value);\n  return set;\n}, allowRapidStream = env.ELYSIA_RAPID_STREAM === \"true\", createStreamHandler = ({ mapResponse, mapCompactResponse }) => async (generator, set, request) => {\n  let init = generator.next?.();\n  if (set && handleSet(set), init instanceof Promise && (init = await init), init?.value instanceof ReadableStream)\n    generator = init.value;\n  else if (init && (typeof init?.done > \"u\" || init?.done))\n    return set ? mapResponse(init.value, set, request) : mapCompactResponse(init.value, request);\n  const isSSE = (\n    // @ts-ignore First SSE result is wrapped with sse()\n    init?.value?.sse ?? // @ts-ignore ReadableStream is wrapped with sse()\n    generator?.sse ?? // User explicitly set content-type to SSE\n    set?.headers[\"content-type\"]?.startsWith(\"text/event-stream\")\n  ), format = isSSE ? (data) => `data: ${data}\n\n` : (data) => data, contentType = isSSE ? \"text/event-stream\" : init?.value && typeof init?.value == \"object\" ? \"application/json\" : \"text/plain\";\n  set?.headers ? (set.headers[\"transfer-encoding\"] || (set.headers[\"transfer-encoding\"] = \"chunked\"), set.headers[\"content-type\"] || (set.headers[\"content-type\"] = contentType), set.headers[\"cache-control\"] || (set.headers[\"cache-control\"] = \"no-cache\")) : set = {\n    status: 200,\n    headers: {\n      \"content-type\": contentType,\n      \"transfer-encoding\": \"chunked\",\n      \"cache-control\": \"no-cache\",\n      connection: \"keep-alive\"\n    }\n  };\n  const isBrowser = request?.headers.has(\"Origin\");\n  return new Response(\n    new ReadableStream({\n      async start(controller) {\n        let end = !1;\n        if (request?.signal?.addEventListener(\"abort\", () => {\n          end = !0;\n          try {\n            controller.close();\n          } catch {\n          }\n        }), !(!init || init.value instanceof ReadableStream)) {\n          if (init.value !== void 0 && init.value !== null)\n            if (init.value.toSSE)\n              controller.enqueue(init.value.toSSE());\n            else if (typeof init.value == \"object\")\n              try {\n                controller.enqueue(\n                  format(JSON.stringify(init.value))\n                );\n              } catch {\n                controller.enqueue(\n                  format(init.value.toString())\n                );\n              }\n            else controller.enqueue(format(init.value.toString()));\n        }\n        try {\n          for await (const chunk of generator) {\n            if (end) break;\n            if (chunk != null)\n              if (chunk.toSSE)\n                controller.enqueue(chunk.toSSE());\n              else {\n                if (typeof chunk == \"object\")\n                  try {\n                    controller.enqueue(\n                      format(JSON.stringify(chunk))\n                    );\n                  } catch {\n                    controller.enqueue(\n                      format(chunk.toString())\n                    );\n                  }\n                else\n                  controller.enqueue(format(chunk.toString()));\n                !allowRapidStream && isBrowser && !isSSE && await new Promise(\n                  (resolve) => setTimeout(() => resolve(), 0)\n                );\n              }\n          }\n        } catch (error) {\n          console.warn(error);\n        }\n        try {\n          controller.close();\n        } catch {\n        }\n      }\n    }),\n    set\n  );\n};\nasync function* streamResponse(response) {\n  const body = response.body;\n  if (!body) return;\n  const reader = body.getReader(), decoder = new TextDecoder();\n  try {\n    for (; ; ) {\n      const { done, value } = await reader.read();\n      if (done) break;\n      typeof value == \"string\" ? yield value : yield decoder.decode(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\nconst handleSet = (set) => {\n  if (typeof set.status == \"string\" && (set.status = StatusMap[set.status]), set.cookie && isNotEmpty(set.cookie)) {\n    const cookie = serializeCookie(set.cookie);\n    cookie && (set.headers[\"set-cookie\"] = cookie);\n  }\n  set.headers[\"set-cookie\"] && Array.isArray(set.headers[\"set-cookie\"]) && (set.headers = parseSetCookies(\n    new Headers(set.headers),\n    set.headers[\"set-cookie\"]\n  ));\n}, createResponseHandler = (handler) => {\n  const handleStream = createStreamHandler(handler);\n  return (response, set, request) => {\n    let isCookieSet = !1;\n    if (set.headers instanceof Headers)\n      for (const key of set.headers.keys())\n        if (key === \"set-cookie\") {\n          if (isCookieSet) continue;\n          isCookieSet = !0;\n          for (const cookie of set.headers.getSetCookie())\n            response.headers.append(\"set-cookie\", cookie);\n        } else response.headers.append(key, set.headers?.get(key) ?? \"\");\n    else\n      for (const key in set.headers)\n        response.headers.append(\n          key,\n          set.headers[key]\n        );\n    const status = set.status ?? 200;\n    if (response.status !== status && status !== 200 && (response.status <= 300 || response.status > 400)) {\n      const newResponse = new Response(response.body, {\n        headers: response.headers,\n        status: set.status\n      });\n      return !newResponse.headers.has(\"content-length\") && newResponse.headers.get(\"transfer-encoding\") === \"chunked\" ? handleStream(\n        streamResponse(newResponse),\n        responseToSetHeaders(newResponse, set),\n        request\n      ) : newResponse;\n    }\n    return !response.headers.has(\"content-length\") && response.headers.get(\"transfer-encoding\") === \"chunked\" ? handleStream(\n      streamResponse(response),\n      responseToSetHeaders(response, set),\n      request\n    ) : response;\n  };\n};\nasync function tee(source, branches = 2) {\n  const buffer = [];\n  let done = !1, waiting = [];\n  (async () => {\n    for await (const value of source)\n      buffer.push(value), waiting.forEach((w) => w.resolve()), waiting = [];\n    done = !0, waiting.forEach((w) => w.resolve());\n  })();\n  async function* makeIterator() {\n    let i = 0;\n    for (; ; )\n      if (i < buffer.length)\n        yield buffer[i++];\n      else {\n        if (done)\n          return;\n        await new Promise((resolve) => waiting.push({ resolve }));\n      }\n  }\n  return Array.from({ length: branches }, makeIterator);\n}\nexport {\n  createResponseHandler,\n  createStreamHandler,\n  handleFile,\n  handleSet,\n  parseSetCookies,\n  responseToSetHeaders,\n  streamResponse,\n  tee\n};\n", "import { parse, serialize } from \"cookie\";\nimport decode from \"fast-decode-uri-component\";\nimport { isNotEmpty, unsignCookie } from \"./utils.mjs\";\nimport { InvalidCookieSignature } from \"./error.mjs\";\nclass Cookie {\n  constructor(name, jar, initial = {}) {\n    this.name = name;\n    this.jar = jar;\n    this.initial = initial;\n  }\n  get cookie() {\n    return this.jar[this.name] ?? this.initial;\n  }\n  set cookie(jar) {\n    this.name in this.jar || (this.jar[this.name] = this.initial), this.jar[this.name] = jar;\n  }\n  get setCookie() {\n    return this.name in this.jar || (this.jar[this.name] = this.initial), this.jar[this.name];\n  }\n  set setCookie(jar) {\n    this.cookie = jar;\n  }\n  get value() {\n    return this.cookie.value;\n  }\n  set value(value) {\n    this.setCookie.value = value;\n  }\n  get expires() {\n    return this.cookie.expires;\n  }\n  set expires(expires) {\n    this.setCookie.expires = expires;\n  }\n  get maxAge() {\n    return this.cookie.maxAge;\n  }\n  set maxAge(maxAge) {\n    this.setCookie.maxAge = maxAge;\n  }\n  get domain() {\n    return this.cookie.domain;\n  }\n  set domain(domain) {\n    this.setCookie.domain = domain;\n  }\n  get path() {\n    return this.cookie.path;\n  }\n  set path(path) {\n    this.setCookie.path = path;\n  }\n  get secure() {\n    return this.cookie.secure;\n  }\n  set secure(secure) {\n    this.setCookie.secure = secure;\n  }\n  get httpOnly() {\n    return this.cookie.httpOnly;\n  }\n  set httpOnly(httpOnly) {\n    this.setCookie.httpOnly = httpOnly;\n  }\n  get sameSite() {\n    return this.cookie.sameSite;\n  }\n  set sameSite(sameSite) {\n    this.setCookie.sameSite = sameSite;\n  }\n  get priority() {\n    return this.cookie.priority;\n  }\n  set priority(priority) {\n    this.setCookie.priority = priority;\n  }\n  get partitioned() {\n    return this.cookie.partitioned;\n  }\n  set partitioned(partitioned) {\n    this.setCookie.partitioned = partitioned;\n  }\n  get secrets() {\n    return this.cookie.secrets;\n  }\n  set secrets(secrets) {\n    this.setCookie.secrets = secrets;\n  }\n  update(config) {\n    return this.setCookie = Object.assign(\n      this.cookie,\n      typeof config == \"function\" ? config(this.cookie) : config\n    ), this;\n  }\n  set(config) {\n    return this.setCookie = Object.assign(\n      {\n        ...this.initial,\n        value: this.value\n      },\n      typeof config == \"function\" ? config(this.cookie) : config\n    ), this;\n  }\n  remove() {\n    if (this.value !== void 0)\n      return this.set({\n        expires: /* @__PURE__ */ new Date(0),\n        maxAge: 0,\n        value: \"\"\n      }), this;\n  }\n  toString() {\n    return typeof this.value == \"object\" ? JSON.stringify(this.value) : this.value?.toString() ?? \"\";\n  }\n}\nconst createCookieJar = (set, store, initial) => (set.cookie || (set.cookie = {}), new Proxy(store, {\n  get(_, key) {\n    return key in store ? new Cookie(\n      key,\n      set.cookie,\n      Object.assign({}, initial ?? {}, store[key])\n    ) : new Cookie(\n      key,\n      set.cookie,\n      Object.assign({}, initial)\n    );\n  }\n})), parseCookie = async (set, cookieString, {\n  secrets,\n  sign,\n  ...initial\n} = {}) => {\n  if (!cookieString) return createCookieJar(set, {}, initial);\n  const isStringKey = typeof secrets == \"string\";\n  sign && sign !== !0 && !Array.isArray(sign) && (sign = [sign]);\n  const jar = {}, cookies = parse(cookieString);\n  for (const [name, v] of Object.entries(cookies)) {\n    if (v === void 0) continue;\n    let value = decode(v);\n    if (value) {\n      const starts = value.charCodeAt(0), ends = value.charCodeAt(value.length - 1);\n      if (starts === 123 && ends === 125 || starts === 91 && ends === 93)\n        try {\n          value = JSON.parse(value);\n        } catch {\n        }\n    }\n    if (sign === !0 || sign?.includes(name)) {\n      if (!secrets)\n        throw new Error(\"No secret is provided to cookie plugin\");\n      if (isStringKey) {\n        const temp = await unsignCookie(value, secrets);\n        if (temp === !1) throw new InvalidCookieSignature(name);\n        value = temp;\n      } else {\n        let decoded = !0;\n        for (let i = 0; i < secrets.length; i++) {\n          const temp = await unsignCookie(value, secrets[i]);\n          if (temp !== !1) {\n            decoded = !0, value = temp;\n            break;\n          }\n        }\n        if (!decoded) throw new InvalidCookieSignature(name);\n      }\n    }\n    jar[name] = {\n      value\n    };\n  }\n  return createCookieJar(set, jar, initial);\n}, serializeCookie = (cookies) => {\n  if (!cookies || !isNotEmpty(cookies)) return;\n  const set = [];\n  for (const [key, property] of Object.entries(cookies)) {\n    if (!key || !property) continue;\n    const value = property.value;\n    value != null && set.push(\n      serialize(\n        key,\n        typeof value == \"object\" ? JSON.stringify(value) : value + \"\",\n        property\n      )\n    );\n  }\n  if (set.length !== 0)\n    return set.length === 1 ? set[0] : set;\n};\nexport {\n  Cookie,\n  createCookieJar,\n  parseCookie,\n  serializeCookie\n};\n", "import { env } from \"./env.mjs\";\nimport { file } from \"./file.mjs\";\nexport {\n  env,\n  file\n};\n", "import { isBun } from \"./utils.mjs\";\nconst env = isBun ? Bun.env : typeof process < \"u\" && process?.env ? process.env : {};\nexport {\n  env\n};\n", "import { WebStandardAdapter } from \"../web-standard/index.mjs\";\nimport { parseSetCookies } from \"../utils.mjs\";\nimport { createBunRouteHandler } from \"./compose.mjs\";\nimport { createNativeStaticHandler } from \"./handler-native.mjs\";\nimport { serializeCookie } from \"../../cookies.mjs\";\nimport { isProduction, ValidationError } from \"../../error.mjs\";\nimport { getSchemaValidator } from \"../../schema.mjs\";\nimport {\n  hasHeaderShorthand,\n  isNotEmpty,\n  isNumericString,\n  randomId,\n  supportPerMethodInlineHandler\n} from \"../../utils.mjs\";\nimport {\n  mapResponse,\n  mapEarlyResponse,\n  mapCompactResponse,\n  createStaticHandler\n} from \"./handler.mjs\";\nimport {\n  createHandleWSResponse,\n  createWSMessageParser,\n  ElysiaWS,\n  websocket\n} from \"../../ws/index.mjs\";\nconst optionalParam = /:.+?\\?(?=\\/|$)/, getPossibleParams = (path) => {\n  const match = optionalParam.exec(path);\n  if (!match) return [path];\n  const routes = [], head = path.slice(0, match.index), param = match[0].slice(0, -1), tail = path.slice(match.index + match[0].length);\n  routes.push(head.slice(0, -1)), routes.push(head + param);\n  for (const fragment of getPossibleParams(tail))\n    fragment && (fragment.startsWith(\"/:\") || routes.push(head.slice(0, -1) + fragment), routes.push(head + param + fragment));\n  return routes;\n}, isHTMLBundle = (handle) => typeof handle == \"object\" && handle !== null && (handle.toString() === \"[object HTMLBundle]\" || typeof handle.index == \"string\"), supportedMethods = {\n  GET: !0,\n  HEAD: !0,\n  OPTIONS: !0,\n  DELETE: !0,\n  PATCH: !0,\n  POST: !0,\n  PUT: !0\n}, mapRoutes = (app) => {\n  if (!app.config.aot || !app.config.systemRouter) return;\n  const routes = {}, add = (route, handler) => {\n    const path = encodeURI(route.path);\n    routes[path] ? routes[path][route.method] || (routes[path][route.method] = handler) : routes[path] = {\n      [route.method]: handler\n    };\n  }, tree = app.routeTree;\n  for (const route of app.router.history) {\n    if (typeof route.handler != \"function\") continue;\n    const method = route.method;\n    if (method === \"GET\" && `WS_${route.path}` in tree || method === \"WS\" || route.path.charCodeAt(route.path.length - 1) === 42 || !(method in supportedMethods))\n      continue;\n    if (method === \"ALL\") {\n      `WS_${route.path}` in tree || (routes[route.path] = route.hooks?.config?.mount ? route.hooks.trace || app.event.trace || // @ts-expect-error private property\n      app.extender.higherOrderFunctions ? createBunRouteHandler(app, route) : route.hooks.mount || route.handler : route.handler);\n      continue;\n    }\n    let compiled;\n    const handler = app.config.precompile ? createBunRouteHandler(app, route) : (request) => compiled ? compiled(request) : (compiled = createBunRouteHandler(app, route))(\n      request\n    );\n    for (const path of getPossibleParams(route.path))\n      add(\n        {\n          method,\n          path\n        },\n        handler\n      );\n  }\n  return routes;\n}, mergeRoutes = (r1, r2) => {\n  if (!r2) return r1;\n  for (const key of Object.keys(r2))\n    if (r1[key] !== r2[key]) {\n      if (!r1[key]) {\n        r1[key] = r2[key];\n        continue;\n      }\n      if (r1[key] && r2[key]) {\n        if (typeof r1[key] == \"function\" || r1[key] instanceof Response) {\n          r1[key] = r2[key];\n          continue;\n        }\n        r1[key] = {\n          ...r1[key],\n          ...r2[key]\n        };\n      }\n    }\n  return r1;\n}, BunAdapter = {\n  ...WebStandardAdapter,\n  name: \"bun\",\n  handler: {\n    mapResponse,\n    mapEarlyResponse,\n    mapCompactResponse,\n    createStaticHandler,\n    createNativeStaticHandler\n  },\n  composeHandler: {\n    ...WebStandardAdapter.composeHandler,\n    headers: hasHeaderShorthand ? `c.headers=c.request.headers.toJSON()\n` : `c.headers={}\nfor(const [k,v] of c.request.headers.entries())c.headers[k]=v\n`\n  },\n  listen(app) {\n    return (options, callback) => {\n      if (typeof Bun > \"u\")\n        throw new Error(\n          \".listen() is designed to run on Bun only. If you are running Elysia in other environment please use a dedicated plugin or export the handler via Elysia.fetch\"\n        );\n      if (app.compile(), typeof options == \"string\") {\n        if (!isNumericString(options))\n          throw new Error(\"Port must be a numeric value\");\n        options = parseInt(options);\n      }\n      const createStaticRoute = (iterator, { withAsync = !1 } = {}) => {\n        const staticRoutes = {}, ops = [];\n        for (let [path, route] of Object.entries(iterator))\n          if (path = encodeURI(path), supportPerMethodInlineHandler) {\n            if (!route) continue;\n            for (const [method, value] of Object.entries(route))\n              if (!(!value || !(method in supportedMethods))) {\n                if (value instanceof Promise) {\n                  withAsync && (staticRoutes[path] || (staticRoutes[path] = {}), ops.push(\n                    value.then((awaited) => {\n                      awaited instanceof Response && (staticRoutes[path][method] = awaited), isHTMLBundle(awaited) && (staticRoutes[path][method] = awaited);\n                    })\n                  ));\n                  continue;\n                }\n                !(value instanceof Response) && !isHTMLBundle(value) || (staticRoutes[path] || (staticRoutes[path] = {}), staticRoutes[path][method] = value);\n              }\n          } else {\n            if (!route) continue;\n            if (route instanceof Promise) {\n              withAsync && (staticRoutes[path] || (staticRoutes[path] = {}), ops.push(\n                route.then((awaited) => {\n                  awaited instanceof Response && (staticRoutes[path] = awaited);\n                })\n              ));\n              continue;\n            }\n            if (!(route instanceof Response)) continue;\n            staticRoutes[path] = route;\n          }\n        return withAsync ? Promise.all(ops).then(() => staticRoutes) : staticRoutes;\n      }, serve = typeof options == \"object\" ? {\n        development: !isProduction,\n        reusePort: !0,\n        idleTimeout: 30,\n        ...app.config.serve || {},\n        ...options || {},\n        // @ts-ignore\n        routes: mergeRoutes(\n          mergeRoutes(\n            createStaticRoute(app.router.response),\n            mapRoutes(app)\n          ),\n          app.config.serve?.routes\n        ),\n        websocket: {\n          ...app.config.websocket || {},\n          ...websocket || {},\n          ...options.websocket || {}\n        },\n        fetch: app.fetch\n      } : {\n        development: !isProduction,\n        reusePort: !0,\n        idleTimeout: 30,\n        ...app.config.serve || {},\n        // @ts-ignore\n        routes: mergeRoutes(\n          mergeRoutes(\n            createStaticRoute(app.router.response),\n            mapRoutes(app)\n          ),\n          app.config.serve?.routes\n        ),\n        websocket: {\n          ...app.config.websocket || {},\n          ...websocket || {}\n        },\n        port: options,\n        fetch: app.fetch\n      };\n      if (app.server = Bun.serve(serve), app.event.start)\n        for (let i = 0; i < app.event.start.length; i++)\n          app.event.start[i].fn(app);\n      callback && callback(app.server), process.on(\"beforeExit\", async () => {\n        if (app.server && (await app.server.stop?.(), app.server = null, app.event.stop))\n          for (let i = 0; i < app.event.stop.length; i++)\n            app.event.stop[i].fn(app);\n      }), app.promisedModules.then(async () => {\n        app.server?.reload({\n          ...serve,\n          fetch: app.fetch,\n          // @ts-ignore\n          routes: mergeRoutes(\n            mergeRoutes(\n              await createStaticRoute(app.router.response, {\n                withAsync: !0\n              }),\n              mapRoutes(app)\n            ),\n            app.config.serve?.routes\n          )\n        }), Bun?.gc(!1);\n      });\n    };\n  },\n  async stop(app, closeActiveConnections) {\n    if (app.server) {\n      if (await app.server.stop(closeActiveConnections), app.server = null, app.event.stop?.length)\n        for (let i = 0; i < app.event.stop.length; i++)\n          app.event.stop[i].fn(app);\n    } else\n      console.log(\n        \"Elysia isn't running. Call `app.listen` to start the server.\",\n        new Error().stack\n      );\n  },\n  ws(app, path, options) {\n    const { parse, body, response, ...rest } = options, validateMessage = getSchemaValidator(body, {\n      // @ts-expect-error private property\n      modules: app.definitions.typebox,\n      // @ts-expect-error private property\n      models: app.definitions.type,\n      normalize: app.config.normalize\n    }), validateResponse = getSchemaValidator(response, {\n      // @ts-expect-error private property\n      modules: app.definitions.typebox,\n      // @ts-expect-error private property\n      models: app.definitions.type,\n      normalize: app.config.normalize\n    });\n    app.route(\n      \"WS\",\n      path,\n      async (context) => {\n        const server = context.server ?? app.server, { set, path: path2, qi, headers, query, params } = context;\n        if (context.validator = validateResponse, options.upgrade)\n          if (typeof options.upgrade == \"function\") {\n            const temp = options.upgrade(context);\n            temp instanceof Promise && await temp;\n          } else options.upgrade && Object.assign(\n            set.headers,\n            options.upgrade\n          );\n        if (set.cookie && isNotEmpty(set.cookie)) {\n          const cookie = serializeCookie(set.cookie);\n          cookie && (set.headers[\"set-cookie\"] = cookie);\n        }\n        set.headers[\"set-cookie\"] && Array.isArray(set.headers[\"set-cookie\"]) && (set.headers = parseSetCookies(\n          new Headers(set.headers),\n          set.headers[\"set-cookie\"]\n        ));\n        const handleResponse = createHandleWSResponse(validateResponse), parseMessage = createWSMessageParser(parse);\n        let _id;\n        if (typeof options.beforeHandle == \"function\") {\n          const result = options.beforeHandle(context);\n          result instanceof Promise && await result;\n        }\n        const errorHandlers = [\n          ...options.error ? Array.isArray(options.error) ? options.error : [options.error] : [],\n          ...(app.event.error ?? []).map(\n            (x) => typeof x == \"function\" ? x : x.fn\n          )\n        ].filter((x) => x), hasCustomErrorHandlers = errorHandlers.length > 0, handleErrors = hasCustomErrorHandlers ? async (ws, error) => {\n          for (const handleError of errorHandlers) {\n            let response2 = handleError(\n              Object.assign(context, { error })\n            );\n            if (response2 instanceof Promise && (response2 = await response2), await handleResponse(ws, response2), response2) break;\n          }\n        } : () => {\n        };\n        if (!server?.upgrade(context.request, {\n          headers: isNotEmpty(set.headers) ? set.headers : void 0,\n          data: {\n            ...context,\n            get id() {\n              return _id || (_id = randomId());\n            },\n            validator: validateResponse,\n            ping(ws, data) {\n              options.ping?.(ws, data);\n            },\n            pong(ws, data) {\n              options.pong?.(ws, data);\n            },\n            open: async (ws) => {\n              try {\n                await handleResponse(\n                  ws,\n                  options.open?.(\n                    new ElysiaWS(ws, context)\n                  )\n                );\n              } catch (error) {\n                handleErrors(ws, error);\n              }\n            },\n            message: async (ws, _message) => {\n              const message = await parseMessage(ws, _message);\n              if (validateMessage?.Check(message) === !1) {\n                const validationError = new ValidationError(\n                  \"message\",\n                  validateMessage,\n                  message\n                );\n                return hasCustomErrorHandlers ? handleErrors(ws, validationError) : void ws.send(\n                  validationError.message\n                );\n              }\n              try {\n                await handleResponse(\n                  ws,\n                  options.message?.(\n                    new ElysiaWS(\n                      ws,\n                      context,\n                      message\n                    ),\n                    message\n                  )\n                );\n              } catch (error) {\n                handleErrors(ws, error);\n              }\n            },\n            drain: async (ws) => {\n              try {\n                await handleResponse(\n                  ws,\n                  options.drain?.(\n                    new ElysiaWS(ws, context)\n                  )\n                );\n              } catch (error) {\n                handleErrors(ws, error);\n              }\n            },\n            close: async (ws, code, reason) => {\n              try {\n                await handleResponse(\n                  ws,\n                  options.close?.(\n                    new ElysiaWS(ws, context),\n                    code,\n                    reason\n                  )\n                );\n              } catch (error) {\n                handleErrors(ws, error);\n              }\n            }\n          }\n        }))\n          return set.status = 400, \"Expected a websocket connection\";\n      },\n      {\n        ...rest,\n        websocket: options\n      }\n    );\n  }\n};\nexport {\n  BunAdapter,\n  isHTMLBundle\n};\n", "import { mapEarlyResponse } from \"./handler.mjs\";\nimport { sucrose } from \"../../sucrose.mjs\";\nimport { createHoc, createOnRequestHandler, isAsync } from \"../../compose.mjs\";\nimport { randomId, ELYSIA_REQUEST_ID, redirect, isNotEmpty } from \"../../utils.mjs\";\nimport { status } from \"../../error.mjs\";\nimport { ELYSIA_TRACE } from \"../../trace.mjs\";\nconst allocateIf = (value, condition) => condition ? value : \"\", createContext = (app, route, inference, isInline = !1) => {\n  let fnLiteral = \"\";\n  const defaultHeaders = app.setHeaders, hasTrace = !!app.event.trace?.length;\n  hasTrace && (fnLiteral += `const id=randomId()\n`);\n  const isDynamic = /[:*]/.test(route.path), getQi = `const u=request.url,s=u.indexOf('/',${app.config.handler?.standardHostname ?? !0 ? 11 : 7}),qi=u.indexOf('?', s + 1)\n`, needsQuery = inference.query || !!route.hooks.query || !!route.hooks.standaloneValidator?.find(\n    (x) => x.query\n  ) || app.event.request?.length;\n  needsQuery && (fnLiteral += getQi);\n  const getPath = inference.path ? isDynamic ? \"get path(){\" + (needsQuery ? \"\" : getQi) + `if(qi===-1)return u.substring(s)\nreturn u.substring(s,qi)\n},` : `path:'${route.path}',` : \"\";\n  fnLiteral += allocateIf(\"const c=\", !isInline) + \"{request,store,\" + allocateIf(\"qi,\", needsQuery) + allocateIf(\"params:request.params,\", isDynamic) + getPath + allocateIf(\n    \"url:request.url,\",\n    hasTrace || inference.url || needsQuery\n  ) + \"redirect,status,set:{headers:\" + (isNotEmpty(defaultHeaders) ? \"Object.assign({},app.setHeaders)\" : \"Object.create(null)\") + \",status:200}\", inference.server && (fnLiteral += \",get server(){return app.getServer()}\"), hasTrace && (fnLiteral += \",[ELYSIA_REQUEST_ID]:id\");\n  {\n    let decoratorsLiteral = \"\";\n    for (const key of Object.keys(app.singleton.decorator))\n      decoratorsLiteral += `,'${key}':decorator['${key}']`;\n    fnLiteral += decoratorsLiteral;\n  }\n  return fnLiteral += `}\n`, fnLiteral;\n}, createBunRouteHandler = (app, route) => {\n  const hasTrace = !!app.event.trace?.length, hasHoc = !!app.extender.higherOrderFunctions.length;\n  let inference = sucrose(\n    route.hooks,\n    // @ts-expect-error\n    app.inference\n  );\n  inference = sucrose(\n    {\n      handler: route.handler\n    },\n    inference\n  );\n  let fnLiteral = \"const handler=data.handler,app=data.app,store=data.store,decorator=data.decorator,redirect=data.redirect,route=data.route,mapEarlyResponse=data.mapEarlyResponse,\" + allocateIf(\"randomId=data.randomId,\", hasTrace) + allocateIf(\"ELYSIA_REQUEST_ID=data.ELYSIA_REQUEST_ID,\", hasTrace) + allocateIf(\"ELYSIA_TRACE=data.ELYSIA_TRACE,\", hasTrace) + allocateIf(\"trace=data.trace,\", hasTrace) + allocateIf(\"hoc=data.hoc,\", hasHoc) + `status=data.status\n`;\n  app.event.request?.length && (fnLiteral += `const onRequest=app.event.request.map(x=>x.fn)\n`), fnLiteral += `${app.event.request?.find(isAsync) ? \"async\" : \"\"} function map(request){`;\n  const needsQuery = inference.query || !!route.hooks.query || !!route.hooks.standaloneValidator?.find(\n    (x) => x.query\n  );\n  return hasTrace || needsQuery || app.event.request?.length ? (fnLiteral += createContext(app, route, inference), fnLiteral += createOnRequestHandler(app), fnLiteral += \"return handler(c)}\") : fnLiteral += `return handler(${createContext(app, route, inference, !0)})}`, fnLiteral += createHoc(app), Function(\n    \"data\",\n    fnLiteral\n  )({\n    app,\n    handler: route.compile?.() ?? route.composed,\n    redirect,\n    status,\n    // @ts-expect-error private property\n    hoc: app.extender.higherOrderFunctions.map((x) => x.fn),\n    store: app.store,\n    decorator: app.decorator,\n    route: route.path,\n    randomId: hasTrace ? randomId : void 0,\n    ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n    ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n    trace: hasTrace ? app.event.trace?.map((x) => x?.fn ?? x) : void 0,\n    mapEarlyResponse\n  });\n};\nexport {\n  createBunRouteHandler\n};\n", "import {\n  createResponseHandler,\n  createStreamHandler,\n  handleFile,\n  handleSet\n} from \"../utils.mjs\";\nimport { isNotEmpty } from \"../../utils.mjs\";\nimport { Cookie } from \"../../cookies.mjs\";\nimport { ElysiaCustomStatusResponse } from \"../../error.mjs\";\nconst mapResponse = (response, set2, request) => {\n  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n    switch (handleSet(set2), response?.constructor?.name) {\n      case \"String\":\n        return new Response(response, set2);\n      case \"Array\":\n      case \"Object\":\n        return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n      case \"ElysiaFile\":\n        return handleFile(\n          response.value,\n          set2\n        );\n      case \"File\":\n        return handleFile(response, set2);\n      case \"Blob\":\n        return handleFile(response, set2);\n      case \"ElysiaCustomStatusResponse\":\n        return set2.status = response.code, mapResponse(\n          response.response,\n          set2,\n          request\n        );\n      case void 0:\n        return response ? new Response(JSON.stringify(response), set2) : new Response(\"\", set2);\n      case \"Response\":\n        return handleResponse(response, set2, request);\n      case \"Error\":\n        return errorToResponse(response, set2);\n      case \"Promise\":\n        return response.then(\n          (x) => mapResponse(x, set2, request)\n        );\n      case \"Function\":\n        return mapResponse(response(), set2, request);\n      case \"Number\":\n      case \"Boolean\":\n        return new Response(\n          response.toString(),\n          set2\n        );\n      case \"Cookie\":\n        return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n      case \"FormData\":\n        return new Response(response, set2);\n      default:\n        if (response instanceof Response)\n          return handleResponse(response, set2, request);\n        if (response instanceof Promise)\n          return response.then((x) => mapResponse(x, set2));\n        if (response instanceof Error)\n          return errorToResponse(response, set2);\n        if (response instanceof ElysiaCustomStatusResponse)\n          return set2.status = response.code, mapResponse(\n            response.response,\n            set2,\n            request\n          );\n        if (\n          // @ts-expect-error\n          typeof response?.next == \"function\" || response instanceof ReadableStream\n        )\n          return handleStream(response, set2, request);\n        if (typeof response?.then == \"function\")\n          return response.then((x) => mapResponse(x, set2));\n        if (typeof response?.toResponse == \"function\")\n          return mapResponse(response.toResponse(), set2);\n        if (\"charCodeAt\" in response) {\n          const code = response.charCodeAt(0);\n          if (code === 123 || code === 91)\n            return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n              JSON.stringify(response),\n              set2\n            );\n        }\n        return new Response(response, set2);\n    }\n  return (\n    // @ts-expect-error\n    typeof response?.next == \"function\" || response instanceof ReadableStream ? handleStream(response, set2, request) : mapCompactResponse(response, request)\n  );\n}, mapEarlyResponse = (response, set2, request) => {\n  if (response != null)\n    if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.cookie)\n      switch (handleSet(set2), response?.constructor?.name) {\n        case \"String\":\n          return new Response(response, set2);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleFile(response.value, set2);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), set2) : void 0;\n        case \"Response\":\n          return handleResponse(response, set2, request);\n        case \"Promise\":\n          return response.then(\n            (x) => mapEarlyResponse(x, set2)\n          );\n        case \"Error\":\n          return errorToResponse(response, set2);\n        case \"Function\":\n          return mapEarlyResponse(response(), set2);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(\n            response.toString(),\n            set2\n          );\n        case \"FormData\":\n          return new Response(response);\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        default:\n          if (response instanceof Response)\n            return handleResponse(response, set2, request);\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (response instanceof Error)\n            return errorToResponse(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            const code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response, set2);\n      }\n    else\n      switch (response?.constructor?.name) {\n        case \"String\":\n          return new Response(response);\n        case \"Array\":\n        case \"Object\":\n          return set2.headers[\"content-type\"] = \"application/json\", new Response(JSON.stringify(response), set2);\n        case \"ElysiaFile\":\n          return handleFile(response.value, set2);\n        case \"File\":\n          return handleFile(response, set2);\n        case \"Blob\":\n          return handleFile(response, set2);\n        case \"ElysiaCustomStatusResponse\":\n          return set2.status = response.code, mapEarlyResponse(\n            response.response,\n            set2,\n            request\n          );\n        case void 0:\n          return response ? new Response(JSON.stringify(response), {\n            headers: {\n              \"content-type\": \"application/json\"\n            }\n          }) : new Response(\"\");\n        case \"Response\":\n          return response;\n        case \"Promise\":\n          return response.then((x) => {\n            const r = mapEarlyResponse(x, set2);\n            if (r !== void 0) return r;\n          });\n        case \"Error\":\n          return errorToResponse(response, set2);\n        case \"Function\":\n          return mapCompactResponse(response(), request);\n        case \"Number\":\n        case \"Boolean\":\n          return new Response(response.toString());\n        case \"Cookie\":\n          return response instanceof Cookie ? new Response(response.value, set2) : new Response(response?.toString(), set2);\n        case \"FormData\":\n          return new Response(response);\n        default:\n          if (response instanceof Response) return response;\n          if (response instanceof Promise)\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (response instanceof Error)\n            return errorToResponse(response, set2);\n          if (response instanceof ElysiaCustomStatusResponse)\n            return set2.status = response.code, mapEarlyResponse(\n              response.response,\n              set2,\n              request\n            );\n          if (\n            // @ts-expect-error\n            typeof response?.next == \"function\" || response instanceof ReadableStream\n          )\n            return handleStream(response, set2, request);\n          if (typeof response?.then == \"function\")\n            return response.then((x) => mapEarlyResponse(x, set2));\n          if (typeof response?.toResponse == \"function\")\n            return mapEarlyResponse(response.toResponse(), set2);\n          if (\"charCodeAt\" in response) {\n            const code = response.charCodeAt(0);\n            if (code === 123 || code === 91)\n              return set2.headers[\"Content-Type\"] || (set2.headers[\"Content-Type\"] = \"application/json\"), new Response(\n                JSON.stringify(response),\n                set2\n              );\n          }\n          return new Response(response);\n      }\n}, mapCompactResponse = (response, request) => {\n  switch (response?.constructor?.name) {\n    case \"String\":\n      return new Response(response);\n    case \"Object\":\n    case \"Array\":\n      return new Response(JSON.stringify(response), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    case \"ElysiaFile\":\n      return handleFile(response.value);\n    case \"File\":\n      return handleFile(response);\n    case \"Blob\":\n      return handleFile(response);\n    case \"ElysiaCustomStatusResponse\":\n      return mapResponse(\n        response.response,\n        {\n          status: response.code,\n          headers: {}\n        }\n      );\n    case void 0:\n      return response ? new Response(JSON.stringify(response), {\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      }) : new Response(\"\");\n    case \"Response\":\n      return response;\n    case \"Error\":\n      return errorToResponse(response);\n    case \"Promise\":\n      return response.then(\n        (x) => mapCompactResponse(x, request)\n      );\n    // ? Maybe response or Blob\n    case \"Function\":\n      return mapCompactResponse(response(), request);\n    case \"Number\":\n    case \"Boolean\":\n      return new Response(response.toString());\n    case \"FormData\":\n      return new Response(response);\n    default:\n      if (response instanceof Response) return response;\n      if (response instanceof Promise)\n        return response.then(\n          (x) => mapCompactResponse(x, request)\n        );\n      if (response instanceof Error)\n        return errorToResponse(response);\n      if (response instanceof ElysiaCustomStatusResponse)\n        return mapResponse(\n          response.response,\n          {\n            status: response.code,\n            headers: {}\n          }\n        );\n      if (\n        // @ts-expect-error\n        typeof response?.next == \"function\" || response instanceof ReadableStream\n      )\n        return handleStream(response, void 0, request);\n      if (typeof response?.then == \"function\")\n        return response.then((x) => mapResponse(x, set));\n      if (typeof response?.toResponse == \"function\")\n        return mapCompactResponse(response.toResponse());\n      if (\"charCodeAt\" in response) {\n        const code = response.charCodeAt(0);\n        if (code === 123 || code === 91)\n          return new Response(JSON.stringify(response), {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n      }\n      return new Response(response);\n  }\n}, errorToResponse = (error, set2) => new Response(\n  JSON.stringify({\n    name: error?.name,\n    message: error?.message,\n    cause: error?.cause\n  }),\n  {\n    status: set2?.status !== 200 ? set2?.status ?? 500 : 500,\n    headers: set2?.headers\n  }\n), createStaticHandler = (handle, hooks, setHeaders = {}) => {\n  if (typeof handle == \"function\") return;\n  const response = mapResponse(handle, {\n    headers: setHeaders\n  });\n  if (!hooks.parse?.length && !hooks.transform?.length && !hooks.beforeHandle?.length && !hooks.afterHandle?.length)\n    return () => response.clone();\n}, handleResponse = createResponseHandler({\n  mapResponse,\n  mapCompactResponse\n}), handleStream = createStreamHandler({\n  mapResponse,\n  mapCompactResponse\n});\nexport {\n  createStaticHandler,\n  errorToResponse,\n  mapCompactResponse,\n  mapEarlyResponse,\n  mapResponse\n};\n", "import { Value } from \"@sinclair/typebox/value\";\nimport {\n  Kind,\n  TypeBoxError\n} from \"@sinclair/typebox\";\nimport decode from \"fast-decode-uri-component\";\nimport {\n  parseQuery,\n  parseQueryFromURL,\n  parseQueryStandardSchema\n} from \"./parse-query.mjs\";\nimport {\n  ELYSIA_REQUEST_ID,\n  getLoosePath,\n  lifeCycleToFn,\n  randomId,\n  redirect,\n  signCookie,\n  isNotEmpty,\n  encodePath,\n  mergeCookie,\n  getResponseLength\n} from \"./utils.mjs\";\nimport { isBun } from \"./universal/utils.mjs\";\nimport { ParseError, status } from \"./error.mjs\";\nimport {\n  NotFoundError,\n  ValidationError,\n  ERROR_CODE,\n  ElysiaCustomStatusResponse\n} from \"./error.mjs\";\nimport { ELYSIA_TRACE } from \"./trace.mjs\";\nimport {\n  coercePrimitiveRoot,\n  getSchemaValidator,\n  hasElysiaMeta,\n  hasType,\n  isUnion,\n  unwrapImportSchema\n} from \"./schema.mjs\";\nimport { sucrose } from \"./sucrose.mjs\";\nimport { parseCookie } from \"./cookies.mjs\";\nimport { fileType } from \"./type-system/utils.mjs\";\nimport { tee } from \"./adapter/utils.mjs\";\nconst allocateIf = (value, condition) => condition ? value : \"\", defaultParsers = [\n  \"json\",\n  \"text\",\n  \"urlencoded\",\n  \"arrayBuffer\",\n  \"formdata\",\n  \"application/json\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"text/plain\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"application/x-www-form-urlencoded\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"application/octet-stream\",\n  // eslint-disable-next-line sonarjs/no-duplicate-string\n  \"multipart/form-data\"\n], createReport = ({\n  context = \"c\",\n  trace = [],\n  addFn\n}) => {\n  if (!trace.length)\n    return () => ({\n      resolveChild() {\n        return () => {\n        };\n      },\n      resolve() {\n      }\n    });\n  for (let i = 0; i < trace.length; i++)\n    addFn(\n      `let report${i},reportChild${i},reportErr${i},reportErrChild${i};let trace${i}=${context}[ELYSIA_TRACE]?.[${i}]??trace[${i}](${context});\n`\n    );\n  return (event, {\n    name,\n    total = 0,\n    alias\n  } = {}) => {\n    name || (name = \"anonymous\");\n    const reporter = event === \"error\" ? \"reportErr\" : \"report\";\n    for (let i = 0; i < trace.length; i++)\n      addFn(\n        `${alias ? \"const \" : \"\"}${alias ?? reporter}${i}=trace${i}.${event}({id,event:'${event}',name:'${name}',begin:performance.now(),total:${total}})\n`\n      ), alias && addFn(`${reporter}${i}=${alias}${i}\n`);\n    return {\n      resolve() {\n        for (let i = 0; i < trace.length; i++)\n          addFn(`${alias ?? reporter}${i}.resolve()\n`);\n      },\n      resolveChild(name2) {\n        for (let i = 0; i < trace.length; i++)\n          addFn(\n            `${reporter}Child${i}=${reporter}${i}.resolveChild?.shift()?.({id,event:'${event}',name:'${name2}',begin:performance.now()})\n`\n          );\n        return (binding) => {\n          for (let i = 0; i < trace.length; i++)\n            addFn(\n              binding ? `if(${binding} instanceof Error){${reporter}Child${i}?.(${binding}) }else{${reporter}Child${i}?.()}` : `${reporter}Child${i}?.()\n`\n            );\n        };\n      }\n    };\n  };\n}, composeCleaner = ({\n  schema,\n  name,\n  type,\n  typeAlias = type,\n  normalize,\n  ignoreTryCatch = !1\n}) => !normalize || !schema.Clean ? \"\" : normalize === !0 || normalize === \"exactMirror\" ? ignoreTryCatch ? `${name}=validator.${typeAlias}.Clean(${name})\n` : `try{${name}=validator.${typeAlias}.Clean(${name})\n}catch{}` : normalize === \"typebox\" ? `${name}=validator.${typeAlias}.Clean(${name})\n` : \"\", composeValidationFactory = ({\n  injectResponse = \"\",\n  normalize = !1,\n  validator,\n  encodeSchema = !1,\n  isStaticResponse = !1,\n  hasSanitize = !1,\n  allowUnsafeValidationDetails = !1\n}) => ({\n  validate: (type, value = `c.${type}`, error) => `c.set.status=422;throw new ValidationError('${type}',validator.${type},${value},${allowUnsafeValidationDetails}${error ? \",\" + error : \"\"})`,\n  response: (name = \"r\") => {\n    if (isStaticResponse || !validator.response) return \"\";\n    let code = injectResponse + `\n`;\n    code += `if(${name} instanceof ElysiaCustomStatusResponse){c.set.status=${name}.code\n${name}=${name}.response}if(${name} instanceof Response === false)switch(c.set.status){`;\n    for (const [status2, value] of Object.entries(validator.response)) {\n      if (code += `\ncase ${status2}:\n`, value.provider === \"standard\") {\n        code += `let vare${status2}=validator.response[${status2}].Check(${name})\nif(vare${status2} instanceof Promise)vare${status2}=await vare${status2}\nif(vare${status2}.issues)throw new ValidationError('response',validator.response[${status2}],${name},${allowUnsafeValidationDetails},vare${status2}.issues)\n${name}=vare${status2}.value\nc.set.status=${status2}\nbreak\n`;\n        continue;\n      }\n      let noValidate = value.schema?.noValidate === !0;\n      if (!noValidate && value.schema?.$ref && value.schema?.$defs) {\n        const refKey = value.schema.$ref, defKey = typeof refKey == \"string\" && refKey.includes(\"/\") ? refKey.split(\"/\").pop() : refKey;\n        value.schema.$defs[defKey]?.noValidate === !0 && (noValidate = !0);\n      }\n      const appliedCleaner = noValidate || hasSanitize, clean = ({ ignoreTryCatch = !1 } = {}) => composeCleaner({\n        name,\n        schema: value,\n        type: \"response\",\n        typeAlias: `response[${status2}]`,\n        normalize,\n        ignoreTryCatch\n      });\n      appliedCleaner && (code += clean());\n      const applyErrorCleaner = !appliedCleaner && normalize && !noValidate;\n      encodeSchema && value.hasTransform && !noValidate ? (code += `try{${name}=validator.response[${status2}].Encode(${name})\n`, appliedCleaner || (code += clean({ ignoreTryCatch: !0 })), code += `c.set.status=${status2}}catch{` + (applyErrorCleaner ? `try{\n` + clean({ ignoreTryCatch: !0 }) + `${name}=validator.response[${status2}].Encode(${name})\n}catch{throw new ValidationError('response',validator.response[${status2}],${name},${allowUnsafeValidationDetails})}` : `throw new ValidationError('response',validator.response[${status2}],${name}),${allowUnsafeValidationDetails}`) + \"}\") : (appliedCleaner || (code += clean()), noValidate || (code += `if(validator.response[${status2}].Check(${name})===false)throw new ValidationError('response',validator.response[${status2}],${name},${allowUnsafeValidationDetails})\nc.set.status=${status2}\n`)), code += `break\n`;\n    }\n    return code + \"}\";\n  }\n}), isAsyncName = (v) => (v?.fn ?? v).constructor.name === \"AsyncFunction\", matchResponseClone = /=>\\s?response\\.clone\\(/, matchFnReturn = /(?:return|=>)\\s?\\S+\\(|a(?:sync|wait)/, isAsync = (v) => {\n  const isObject = typeof v == \"object\";\n  if (isObject && v.isAsync !== void 0) return v.isAsync;\n  const fn = isObject ? v.fn : v;\n  if (fn.constructor.name === \"AsyncFunction\") return !0;\n  const literal = fn.toString();\n  if (matchResponseClone.test(literal))\n    return isObject && (v.isAsync = !1), !1;\n  const result = matchFnReturn.test(literal);\n  return isObject && (v.isAsync = result), result;\n}, hasReturn = (v) => {\n  const isObject = typeof v == \"object\";\n  if (isObject && v.hasReturn !== void 0) return v.hasReturn;\n  const fnLiteral = isObject ? v.fn.toString() : typeof v == \"string\" ? v.toString() : v, parenthesisEnd = fnLiteral.indexOf(\")\");\n  if (fnLiteral.charCodeAt(parenthesisEnd + 2) === 61 && fnLiteral.charCodeAt(parenthesisEnd + 5) !== 123)\n    return isObject && (v.hasReturn = !0), !0;\n  const result = fnLiteral.includes(\"return\");\n  return isObject && (v.hasReturn = result), result;\n}, isGenerator = (v) => {\n  const fn = v?.fn ?? v;\n  return fn.constructor.name === \"AsyncGeneratorFunction\" || fn.constructor.name === \"GeneratorFunction\";\n}, coerceTransformDecodeError = (fnLiteral, type, allowUnsafeValidationDetails = !1, value = `c.${type}`) => `try{${fnLiteral}}catch(error){if(error.constructor.name === 'TransformDecodeError'){c.set.status=422\nthrow error.error ?? new ValidationError('${type}',validator.${type},${value},${allowUnsafeValidationDetails})}}`, composeHandler = ({\n  app,\n  path,\n  method,\n  hooks,\n  validator,\n  handler,\n  allowMeta = !1,\n  inference\n}) => {\n  const adapter = app[\"~adapter\"].composeHandler, adapterHandler = app[\"~adapter\"].handler, isHandleFn = typeof handler == \"function\";\n  if (!isHandleFn) {\n    handler = adapterHandler.mapResponse(handler, {\n      // @ts-expect-error private property\n      headers: app.setHeaders ?? {}\n    });\n    const isResponse = handler instanceof Response || // @ts-ignore If it's not instanceof Response, it might be a polyfill (only on Node)\n    handler?.constructor?.name === \"Response\" && typeof handler?.clone == \"function\";\n    if (hooks.parse?.length && hooks.transform?.length && hooks.beforeHandle?.length && hooks.afterHandle?.length)\n      return isResponse ? Function(\n        \"a\",\n        `\"use strict\";\nreturn function(){return a.clone()}`\n      )(handler) : Function(\n        \"a\",\n        `\"use strict\";\nreturn function(){return a}`\n      )(handler);\n    if (isResponse) {\n      const response = handler;\n      handler = () => response.clone();\n    }\n  }\n  const handle = isHandleFn ? \"handler(c)\" : \"handler\", hasTrace = !!hooks.trace?.length;\n  let fnLiteral = \"\";\n  if (inference = sucrose(\n    Object.assign({ handler }, hooks),\n    inference,\n    app.config.sucrose\n  ), adapter.declare) {\n    const literal = adapter.declare(inference);\n    literal && (fnLiteral += literal);\n  }\n  inference.server && (fnLiteral += `Object.defineProperty(c,'server',{get:function(){return getServer()}})\n`), validator.createBody?.(), validator.createQuery?.(), validator.createHeaders?.(), validator.createParams?.(), validator.createCookie?.(), validator.createResponse?.();\n  const hasValidation = !!validator.body || !!validator.headers || !!validator.params || !!validator.query || !!validator.cookie || !!validator.response, hasQuery = inference.query || !!validator.query, requestNoBody = hooks.parse?.length === 1 && // @ts-expect-error\n  hooks.parse[0].fn === \"none\", hasBody = method !== \"\" && method !== \"GET\" && method !== \"HEAD\" && (inference.body || !!validator.body || !!hooks.parse?.length) && !requestNoBody, defaultHeaders = app.setHeaders, hasDefaultHeaders = defaultHeaders && !!Object.keys(defaultHeaders).length, hasHeaders = inference.headers || !!validator.headers || adapter.preferWebstandardHeaders !== !0 && inference.body, hasCookie = inference.cookie || !!validator.cookie, cookieMeta = validator.cookie?.config ? mergeCookie(validator?.cookie?.config, app.config.cookie) : app.config.cookie;\n  let _encodeCookie = \"\";\n  const encodeCookie = () => {\n    if (_encodeCookie) return _encodeCookie;\n    if (cookieMeta?.sign) {\n      if (!cookieMeta.secrets)\n        throw new Error(\n          `t.Cookie required secret which is not set in (${method}) ${path}.`\n        );\n      const secret = cookieMeta.secrets ? typeof cookieMeta.secrets == \"string\" ? cookieMeta.secrets : cookieMeta.secrets[0] : void 0;\n      if (_encodeCookie += `const _setCookie = c.set.cookie\nif(_setCookie){`, cookieMeta.sign === !0)\n        _encodeCookie += `for(const [key, cookie] of Object.entries(_setCookie)){c.set.cookie[key].value=await signCookie(cookie.value,'${secret}')}`;\n      else\n        for (const name of cookieMeta.sign)\n          _encodeCookie += `if(_setCookie['${name}']?.value)c.set.cookie['${name}'].value=await signCookie(_setCookie['${name}'].value,'${secret}')\n`;\n      _encodeCookie += `}\n`;\n    }\n    return _encodeCookie;\n  }, normalize = app.config.normalize, encodeSchema = app.config.encodeSchema, allowUnsafeValidationDetails = app.config.allowUnsafeValidationDetails, validation = composeValidationFactory({\n    normalize,\n    validator,\n    encodeSchema,\n    isStaticResponse: handler instanceof Response,\n    hasSanitize: !!app.config.sanitize,\n    allowUnsafeValidationDetails\n  });\n  hasHeaders && (fnLiteral += adapter.headers), hasTrace && (fnLiteral += `const id=c[ELYSIA_REQUEST_ID]\n`);\n  const report = createReport({\n    trace: hooks.trace,\n    addFn: (word) => {\n      fnLiteral += word;\n    }\n  });\n  if (fnLiteral += \"try{\", hasCookie) {\n    const get = (name, defaultValue) => {\n      const value = cookieMeta?.[name] ?? defaultValue;\n      return value ? typeof value == \"string\" ? `${name}:'${value}',` : value instanceof Date ? `${name}: new Date(${value.getTime()}),` : `${name}:${value},` : typeof defaultValue == \"string\" ? `${name}:\"${defaultValue}\",` : `${name}:${defaultValue},`;\n    }, options = cookieMeta ? `{secrets:${cookieMeta.secrets !== void 0 ? typeof cookieMeta.secrets == \"string\" ? `'${cookieMeta.secrets}'` : \"[\" + cookieMeta.secrets.reduce(\n      (a, b) => a + `'${b}',`,\n      \"\"\n    ) + \"]\" : \"undefined\"},sign:${cookieMeta.sign === !0 ? !0 : cookieMeta.sign !== void 0 ? \"[\" + cookieMeta.sign.reduce(\n      (a, b) => a + `'${b}',`,\n      \"\"\n    ) + \"]\" : \"undefined\"},` + get(\"domain\") + get(\"expires\") + get(\"httpOnly\") + get(\"maxAge\") + get(\"path\", \"/\") + get(\"priority\") + get(\"sameSite\") + get(\"secure\") + \"}\" : \"undefined\";\n    hasHeaders ? fnLiteral += `\nc.cookie=await parseCookie(c.set,c.headers.cookie,${options})\n` : fnLiteral += `\nc.cookie=await parseCookie(c.set,c.request.headers.get('cookie'),${options})\n`;\n  }\n  if (hasQuery) {\n    let arrayProperties = {}, objectProperties = {}, hasArrayProperty = !1, hasObjectProperty = !1;\n    if (validator.query?.schema) {\n      const schema = unwrapImportSchema(validator.query?.schema);\n      if (Kind in schema && schema.properties)\n        for (const [key, value] of Object.entries(schema.properties))\n          hasElysiaMeta(\"ArrayQuery\", value) && (arrayProperties[key] = 1, hasArrayProperty = !0), hasElysiaMeta(\"ObjectString\", value) && (objectProperties[key] = 1, hasObjectProperty = !0);\n    }\n    fnLiteral += `if(c.qi===-1){c.query=Object.create(null)}else{c.query=parseQueryFromURL(c.url,c.qi+1,${//\n    hasArrayProperty ? JSON.stringify(arrayProperties) : void 0},${//\n    hasObjectProperty ? JSON.stringify(objectProperties) : void 0})}`;\n  }\n  const isAsyncHandler = typeof handler == \"function\" && isAsync(handler), saveResponse = hasTrace || hooks.afterResponse?.length ? \"c.response=c.responseValue= \" : \"\", responseKeys = Object.keys(validator.response ?? {}), hasMultipleResponses = responseKeys.length > 1, hasSingle200 = responseKeys.length === 0 || responseKeys.length === 1 && responseKeys[0] === \"200\", maybeAsync = hasCookie || hasBody || isAsyncHandler || !!hooks.parse?.length || !!hooks.afterHandle?.some(isAsync) || !!hooks.beforeHandle?.some(isAsync) || !!hooks.transform?.some(isAsync) || !!hooks.mapResponse?.some(isAsync) || validator.body?.provider === \"standard\" || validator.headers?.provider === \"standard\" || validator.query?.provider === \"standard\" || validator.params?.provider === \"standard\" || validator.cookie?.provider === \"standard\" || Object.values(validator.response ?? {}).find(\n    (x) => x.provider === \"standard\"\n  ), maybeStream = (typeof handler == \"function\" ? isGenerator(handler) : !1) || !!hooks.beforeHandle?.some(isGenerator) || !!hooks.afterHandle?.some(isGenerator) || !!hooks.transform?.some(isGenerator), hasSet = inference.cookie || inference.set || hasHeaders || hasTrace || hasMultipleResponses || !hasSingle200 || isHandleFn && hasDefaultHeaders || maybeStream;\n  let _afterResponse;\n  const afterResponse = () => {\n    if (_afterResponse !== void 0) return _afterResponse;\n    if (!hooks.afterResponse?.length && !hasTrace) return \"\";\n    let afterResponse2 = \"\";\n    afterResponse2 += `\nsetImmediate(async()=>{if(c.responseValue){if(c.responseValue instanceof ElysiaCustomStatusResponse) c.set.status=c.responseValue.code\nif(afterHandlerStreamListener)for await(const v of afterHandlerStreamListener){}\n}\n`;\n    const reporter = createReport({\n      trace: hooks.trace,\n      addFn: (word) => {\n        afterResponse2 += word;\n      }\n    })(\"afterResponse\", {\n      total: hooks.afterResponse?.length\n    });\n    if (hooks.afterResponse?.length && hooks.afterResponse)\n      for (let i = 0; i < hooks.afterResponse.length; i++) {\n        const endUnit = reporter.resolveChild(\n          hooks.afterResponse[i].fn.name\n        ), prefix = isAsync(hooks.afterResponse[i]) ? \"await \" : \"\";\n        afterResponse2 += `\n${prefix}e.afterResponse[${i}](c)\n`, endUnit();\n      }\n    return reporter.resolve(), afterResponse2 += `})\n`, _afterResponse = afterResponse2;\n  }, mapResponse = (r = \"r\") => {\n    const after = afterResponse(), response = `${hasSet ? \"mapResponse\" : \"mapCompactResponse\"}(${saveResponse}${r}${hasSet ? \",c.set\" : \"\"}${mapResponseContext})\n`;\n    return after ? `const _res=${response}` + after + \"return _res\" : `return ${response}`;\n  }, mapResponseContext = maybeStream || adapter.mapResponseContext ? `,${adapter.mapResponseContext}` : \"\";\n  (hasTrace || inference.route) && (fnLiteral += `c.route=\\`${path}\\`\n`), (hasTrace || hooks.afterResponse?.length) && (fnLiteral += `let afterHandlerStreamListener\n`);\n  const parseReporter = report(\"parse\", {\n    total: hooks.parse?.length\n  });\n  if (hasBody) {\n    const hasBodyInference = !!hooks.parse?.length || inference.body || validator.body;\n    adapter.parser.declare && (fnLiteral += adapter.parser.declare), fnLiteral += `\ntry{`;\n    let parser = typeof hooks.parse == \"string\" ? hooks.parse : Array.isArray(hooks.parse) && hooks.parse.length === 1 ? typeof hooks.parse[0] == \"string\" ? hooks.parse[0] : typeof hooks.parse[0].fn == \"string\" ? hooks.parse[0].fn : void 0 : void 0;\n    if (!parser && validator.body && !hooks.parse?.length) {\n      const schema = validator.body.schema;\n      schema && schema.anyOf && schema[Kind] === \"Union\" && schema.anyOf?.length === 2 && schema.anyOf?.find((x) => x[Kind] === \"ElysiaForm\") && (parser = \"formdata\");\n    }\n    if (parser && defaultParsers.includes(parser)) {\n      const reporter = report(\"parse\", {\n        total: hooks.parse?.length\n      }), isOptionalBody = !!validator.body?.isOptional;\n      switch (parser) {\n        case \"json\":\n        case \"application/json\":\n          fnLiteral += adapter.parser.json(isOptionalBody);\n          break;\n        case \"text\":\n        case \"text/plain\":\n          fnLiteral += adapter.parser.text(isOptionalBody);\n          break;\n        case \"urlencoded\":\n        case \"application/x-www-form-urlencoded\":\n          fnLiteral += adapter.parser.urlencoded(isOptionalBody);\n          break;\n        case \"arrayBuffer\":\n        case \"application/octet-stream\":\n          fnLiteral += adapter.parser.arrayBuffer(isOptionalBody);\n          break;\n        case \"formdata\":\n        case \"multipart/form-data\":\n          fnLiteral += adapter.parser.formData(isOptionalBody);\n          break;\n        default:\n          parser[0] in app[\"~parser\"] && (fnLiteral += hasHeaders ? \"let contentType = c.headers['content-type']\" : \"let contentType = c.request.headers.get('content-type')\", fnLiteral += `\nif(contentType){const index=contentType.indexOf(';')\nif(index!==-1)contentType=contentType.substring(0,index)}\nelse{contentType=''}c.contentType=contentType\nlet result=parser['${parser}'](c, contentType)\nif(result instanceof Promise)result=await result\nif(result instanceof ElysiaCustomStatusResponse)throw result\nif(result!==undefined)c.body=result\ndelete c.contentType\n`);\n          break;\n      }\n      reporter.resolve();\n    } else if (hasBodyInference) {\n      fnLiteral += `\n`, fnLiteral += `let contentType\nif(c.request.body)`, fnLiteral += hasHeaders ? `contentType=c.headers['content-type']\n` : `contentType=c.request.headers.get('content-type')\n`;\n      let hasDefaultParser = !1;\n      if (hooks.parse?.length)\n        fnLiteral += `if(contentType){\nconst index=contentType.indexOf(';')\n\nif(index!==-1)contentType=contentType.substring(0,index)}else{contentType=''}let used=false\nc.contentType=contentType\n`;\n      else {\n        hasDefaultParser = !0;\n        const isOptionalBody = !!validator.body?.isOptional;\n        fnLiteral += `if(contentType)switch(contentType.charCodeAt(12)){\ncase 106:` + adapter.parser.json(isOptionalBody) + `break\ncase 120:` + adapter.parser.urlencoded(isOptionalBody) + `break\ncase 111:` + adapter.parser.arrayBuffer(isOptionalBody) + `break\ncase 114:` + adapter.parser.formData(isOptionalBody) + `break\ndefault:if(contentType.charCodeAt(0)===116){` + adapter.parser.text(isOptionalBody) + `}break\n}`;\n      }\n      const reporter = report(\"parse\", {\n        total: hooks.parse?.length\n      });\n      if (hooks.parse)\n        for (let i = 0; i < hooks.parse.length; i++) {\n          const name = `bo${i}`;\n          if (i !== 0 && (fnLiteral += `\nif(!used){`), typeof hooks.parse[i].fn == \"string\") {\n            const endUnit = reporter.resolveChild(\n              hooks.parse[i].fn\n            ), isOptionalBody = !!validator.body?.isOptional;\n            switch (hooks.parse[i].fn) {\n              case \"json\":\n              case \"application/json\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.json(isOptionalBody);\n                break;\n              case \"text\":\n              case \"text/plain\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.text(isOptionalBody);\n                break;\n              case \"urlencoded\":\n              case \"application/x-www-form-urlencoded\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.urlencoded(isOptionalBody);\n                break;\n              case \"arrayBuffer\":\n              case \"application/octet-stream\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.arrayBuffer(isOptionalBody);\n                break;\n              case \"formdata\":\n              case \"multipart/form-data\":\n                hasDefaultParser = !0, fnLiteral += adapter.parser.formData(isOptionalBody);\n                break;\n              default:\n                fnLiteral += `let ${name}=parser['${hooks.parse[i].fn}'](c,contentType)\nif(${name} instanceof Promise)${name}=await ${name}\nif(${name}!==undefined){c.body=${name};used=true;}\n`;\n            }\n            endUnit();\n          } else {\n            const endUnit = reporter.resolveChild(\n              hooks.parse[i].fn.name\n            );\n            fnLiteral += `let ${name}=e.parse[${i}]\n${name}=${name}(c,contentType)\nif(${name} instanceof Promise)${name}=await ${name}\nif(${name}!==undefined){c.body=${name};used=true}`, endUnit();\n          }\n          if (i !== 0 && (fnLiteral += \"}\"), hasDefaultParser) break;\n        }\n      if (reporter.resolve(), !hasDefaultParser) {\n        const isOptionalBody = !!validator.body?.isOptional;\n        hooks.parse?.length && (fnLiteral += `\nif(!used){\n`), fnLiteral += `switch(contentType){case 'application/json':\n` + adapter.parser.json(isOptionalBody) + `break\ncase 'text/plain':` + adapter.parser.text(isOptionalBody) + `break\ncase 'application/x-www-form-urlencoded':` + adapter.parser.urlencoded(isOptionalBody) + `break\ncase 'application/octet-stream':` + adapter.parser.arrayBuffer(isOptionalBody) + `break\ncase 'multipart/form-data':` + adapter.parser.formData(isOptionalBody) + `break\n`;\n        for (const key of Object.keys(app[\"~parser\"]))\n          fnLiteral += `case '${key}':let bo${key}=parser['${key}'](c,contentType)\nif(bo${key} instanceof Promise)bo${key}=await bo${key}\nif(bo${key} instanceof ElysiaCustomStatusResponse){` + mapResponse(`bo${key}`) + `}if(bo${key}!==undefined)c.body=bo${key}\nbreak\n`;\n        hooks.parse?.length && (fnLiteral += \"}\"), fnLiteral += \"}\";\n      }\n      hooks.parse?.length && (fnLiteral += `\ndelete c.contentType`);\n    }\n    fnLiteral += \"}catch(error){throw new ParseError(error)}\";\n  }\n  if (parseReporter.resolve(), hooks?.transform || hasTrace) {\n    const reporter = report(\"transform\", {\n      total: hooks.transform?.length\n    });\n    if (hooks.transform?.length) {\n      fnLiteral += `let transformed\n`;\n      for (let i = 0; i < hooks.transform.length; i++) {\n        const transform = hooks.transform[i], endUnit = reporter.resolveChild(transform.fn.name);\n        fnLiteral += isAsync(transform) ? `transformed=await e.transform[${i}](c)\n` : `transformed=e.transform[${i}](c)\n`, transform.subType === \"mapDerive\" ? fnLiteral += \"if(transformed instanceof ElysiaCustomStatusResponse){\" + mapResponse(\"transformed\") + `}else{transformed.request=c.request\ntransformed.store=c.store\ntransformed.qi=c.qi\ntransformed.path=c.path\ntransformed.url=c.url\ntransformed.redirect=c.redirect\ntransformed.set=c.set\ntransformed.error=c.error\nc=transformed}` : fnLiteral += \"if(transformed instanceof ElysiaCustomStatusResponse){\" + mapResponse(\"transformed\") + `}else Object.assign(c,transformed)\n`, endUnit();\n      }\n    }\n    reporter.resolve();\n  }\n  const fileUnions = [];\n  if (validator) {\n    if (validator.headers) {\n      if (validator.headers.hasDefault)\n        for (const [key, value] of Object.entries(\n          Value.Default(\n            // @ts-ignore\n            validator.headers.schema,\n            {}\n          )\n        )) {\n          const parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n          parsed !== void 0 && (fnLiteral += `c.headers['${key}']??=${parsed}\n`);\n        }\n      fnLiteral += composeCleaner({\n        name: \"c.headers\",\n        schema: validator.headers,\n        type: \"headers\",\n        normalize\n      }), validator.headers.isOptional && (fnLiteral += \"if(isNotEmpty(c.headers)){\"), validator.headers?.provider === \"standard\" ? fnLiteral += `let vah=validator.headers.Check(c.headers)\nif(vah instanceof Promise)vah=await vah\nif(vah.issues){` + validation.validate(\"headers\", void 0, \"vah.issues\") + `}else{c.headers=vah.value}\n` : validator.headers?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.headers.Check(c.headers) === false){\" + validation.validate(\"headers\") + \"}\"), validator.headers.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `c.headers=validator.headers.Decode(c.headers)\n`,\n        \"headers\",\n        allowUnsafeValidationDetails\n      )), validator.headers.isOptional && (fnLiteral += \"}\");\n    }\n    if (validator.params) {\n      if (validator.params.hasDefault)\n        for (const [key, value] of Object.entries(\n          Value.Default(\n            // @ts-ignore\n            validator.params.schema,\n            {}\n          )\n        )) {\n          const parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n          parsed !== void 0 && (fnLiteral += `c.params['${key}']??=${parsed}\n`);\n        }\n      validator.params.provider === \"standard\" ? fnLiteral += `let vap=validator.params.Check(c.params)\nif(vap instanceof Promise)vap=await vap\nif(vap.issues){` + validation.validate(\"params\", void 0, \"vap.issues\") + `}else{c.params=vap.value}\n` : validator.params?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.params.Check(c.params)===false){\" + validation.validate(\"params\") + \"}\"), validator.params.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `c.params=validator.params.Decode(c.params)\n`,\n        \"params\",\n        allowUnsafeValidationDetails\n      ));\n    }\n    if (validator.query) {\n      if (Kind in validator.query?.schema && validator.query.hasDefault)\n        for (const [key, value] of Object.entries(\n          Value.Default(\n            // @ts-ignore\n            validator.query.schema,\n            {}\n          )\n        )) {\n          const parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n          parsed !== void 0 && (fnLiteral += `if(c.query['${key}']===undefined)c.query['${key}']=${parsed}\n`);\n        }\n      fnLiteral += composeCleaner({\n        name: \"c.query\",\n        schema: validator.query,\n        type: \"query\",\n        normalize\n      }), validator.query.isOptional && (fnLiteral += \"if(isNotEmpty(c.query)){\"), validator.query.provider === \"standard\" ? fnLiteral += `let vaq=validator.query.Check(c.query)\nif(vaq instanceof Promise)vaq=await vaq\nif(vaq.issues){` + validation.validate(\"query\", void 0, \"vaq.issues\") + `}else{c.query=vaq.value}\n` : validator.query?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.query.Check(c.query)===false){\" + validation.validate(\"query\") + \"}\"), validator.query.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `c.query=validator.query.Decode(c.query)\n`,\n        \"query\",\n        allowUnsafeValidationDetails\n      ), fnLiteral += coerceTransformDecodeError(\n        `c.query=validator.query.Decode(c.query)\n`,\n        \"query\",\n        allowUnsafeValidationDetails\n      )), validator.query.isOptional && (fnLiteral += \"}\");\n    }\n    if (hasBody && validator.body) {\n      (validator.body.hasTransform || validator.body.isOptional) && (fnLiteral += `const isNotEmptyObject=c.body&&(typeof c.body===\"object\"&&(isNotEmpty(c.body)||c.body instanceof ArrayBuffer))\n`);\n      const hasUnion = isUnion(validator.body.schema);\n      let hasNonUnionFileWithDefault = !1;\n      if (validator.body.hasDefault) {\n        let value = Value.Default(\n          validator.body.schema,\n          validator.body.schema.type === \"object\" || unwrapImportSchema(validator.body.schema)[Kind] === \"Object\" ? {} : void 0\n        );\n        const schema = unwrapImportSchema(validator.body.schema);\n        if (!hasUnion && value && typeof value == \"object\" && (hasType(\"File\", schema) || hasType(\"Files\", schema))) {\n          hasNonUnionFileWithDefault = !0;\n          for (const [k, v] of Object.entries(value))\n            (v === \"File\" || v === \"Files\") && delete value[k];\n          isNotEmpty(value) || (value = void 0);\n        }\n        const parsed = typeof value == \"object\" ? JSON.stringify(value) : typeof value == \"string\" ? `'${value}'` : value;\n        value != null && (Array.isArray(value) ? fnLiteral += `if(!c.body)c.body=${parsed}\n` : typeof value == \"object\" ? fnLiteral += `c.body=Object.assign(${parsed},c.body)\n` : fnLiteral += `c.body=${parsed}\n`), fnLiteral += composeCleaner({\n          name: \"c.body\",\n          schema: validator.body,\n          type: \"body\",\n          normalize\n        }), validator.body.provider === \"standard\" ? fnLiteral += `let vab=validator.body.Check(c.body)\nif(vab instanceof Promise)vab=await vab\nif(vab.issues){` + validation.validate(\"body\", void 0, \"vab.issues\") + `}else{c.body=vab.value}\n` : validator.body?.schema?.noValidate !== !0 && (validator.body.isOptional ? fnLiteral += \"if(isNotEmptyObject&&validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\" : fnLiteral += \"if(validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\");\n      } else\n        fnLiteral += composeCleaner({\n          name: \"c.body\",\n          schema: validator.body,\n          type: \"body\",\n          normalize\n        }), validator.body.provider === \"standard\" ? fnLiteral += `let vab=validator.body.Check(c.body)\nif(vab instanceof Promise)vab=await vab\nif(vab.issues){` + validation.validate(\"body\", void 0, \"vab.issues\") + `}else{c.body=vab.value}\n` : validator.body?.schema?.noValidate !== !0 && (validator.body.isOptional ? fnLiteral += \"if(isNotEmptyObject&&validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\" : fnLiteral += \"if(validator.body.Check(c.body)===false){\" + validation.validate(\"body\") + \"}\");\n      if (validator.body.hasTransform && (fnLiteral += coerceTransformDecodeError(\n        `if(isNotEmptyObject)c.body=validator.body.Decode(c.body)\n`,\n        \"body\",\n        allowUnsafeValidationDetails\n      )), hasUnion && validator.body.schema.anyOf?.length) {\n        const iterator = Object.values(\n          validator.body.schema.anyOf\n        );\n        for (let i = 0; i < iterator.length; i++) {\n          const type = iterator[i];\n          if (hasType(\"File\", type) || hasType(\"Files\", type)) {\n            const candidate = getSchemaValidator(type, {\n              // @ts-expect-error private property\n              modules: app.definitions.typebox,\n              dynamic: !app.config.aot,\n              // @ts-expect-error private property\n              models: app.definitions.type,\n              normalize: app.config.normalize,\n              additionalCoerce: coercePrimitiveRoot(),\n              sanitize: () => app.config.sanitize\n            });\n            if (candidate) {\n              const isFirst = fileUnions.length === 0, iterator2 = Object.entries(\n                type.properties\n              );\n              let validator2 = isFirst ? `\n` : \" else \";\n              validator2 += `if(fileUnions[${fileUnions.length}].Check(c.body)){`;\n              let validateFile = \"\", validatorLength = 0;\n              for (let i2 = 0; i2 < iterator2.length; i2++) {\n                const [k, v] = iterator2[i2];\n                !v.extension || v[Kind] !== \"File\" && v[Kind] !== \"Files\" || (validatorLength && (validateFile += \",\"), validateFile += `fileType(c.body.${k},${JSON.stringify(v.extension)},'body.${k}')`, validatorLength++);\n              }\n              validateFile && (validatorLength === 1 ? validator2 += `await ${validateFile}\n` : validatorLength > 1 && (validator2 += `await Promise.all([${validateFile}])\n`), validator2 += \"}\", fnLiteral += validator2, fileUnions.push(candidate));\n            }\n          }\n        }\n      } else if (hasNonUnionFileWithDefault || !hasUnion && (hasType(\n        \"File\",\n        unwrapImportSchema(validator.body.schema)\n      ) || hasType(\n        \"Files\",\n        unwrapImportSchema(validator.body.schema)\n      ))) {\n        let validateFile = \"\", i = 0;\n        for (const [k, v] of Object.entries(\n          unwrapImportSchema(validator.body.schema).properties\n        ))\n          !v.extension || v[Kind] !== \"File\" && v[Kind] !== \"Files\" || (i && (validateFile += \",\"), validateFile += `fileType(c.body.${k},${JSON.stringify(v.extension)},'body.${k}')`, i++);\n        i && (fnLiteral += `\n`), i === 1 ? fnLiteral += `await ${validateFile}\n` : i > 1 && (fnLiteral += `await Promise.all([${validateFile}])\n`);\n      }\n    }\n    validator.cookie && (validator.cookie.config = mergeCookie(\n      validator.cookie.config,\n      validator.cookie?.config ?? {}\n    ), fnLiteral += `let cookieValue={}\nfor(const [key,value] of Object.entries(c.cookie))cookieValue[key]=value.value\n`, validator.cookie.isOptional && (fnLiteral += \"if(isNotEmpty(c.cookie)){\"), validator.cookie.provider === \"standard\" ? (fnLiteral += `let vac=validator.cookie.Check(cookieValue)\nif(vac instanceof Promise)vac=await vac\nif(vac.issues){` + validation.validate(\"cookie\", void 0, \"vac.issues\") + `}else{cookieValue=vac.value}\n`, fnLiteral += `for(const k of Object.keys(cookieValue))c.cookie[k].value=cookieValue[k]\n`) : validator.body?.schema?.noValidate !== !0 && (fnLiteral += \"if(validator.cookie.Check(cookieValue)===false){\" + validation.validate(\"cookie\", \"cookieValue\") + \"}\", validator.cookie.hasTransform && (fnLiteral += coerceTransformDecodeError(\n      \"for(const [key,value] of Object.entries(validator.cookie.Decode(cookieValue))){c.cookie[key].value=value}\",\n      \"cookie\",\n      allowUnsafeValidationDetails\n    ))), validator.cookie.isOptional && (fnLiteral += \"}\"));\n  }\n  if (hooks?.beforeHandle || hasTrace) {\n    const reporter = report(\"beforeHandle\", {\n      total: hooks.beforeHandle?.length\n    });\n    let hasResolve = !1;\n    if (hooks.beforeHandle?.length)\n      for (let i = 0; i < hooks.beforeHandle.length; i++) {\n        const beforeHandle = hooks.beforeHandle[i], endUnit = reporter.resolveChild(beforeHandle.fn.name), returning = hasReturn(beforeHandle);\n        if (beforeHandle.subType === \"resolve\" || beforeHandle.subType === \"mapResolve\")\n          hasResolve || (hasResolve = !0, fnLiteral += `\nlet resolved\n`), fnLiteral += isAsync(beforeHandle) ? `resolved=await e.beforeHandle[${i}](c);\n` : `resolved=e.beforeHandle[${i}](c);\n`, beforeHandle.subType === \"mapResolve\" ? fnLiteral += \"if(resolved instanceof ElysiaCustomStatusResponse){\" + mapResponse(\"resolved\") + `}else{resolved.request=c.request\nresolved.store=c.store\nresolved.qi=c.qi\nresolved.path=c.path\nresolved.url=c.url\nresolved.redirect=c.redirect\nresolved.set=c.set\nresolved.error=c.error\nc=resolved}` : fnLiteral += \"if(resolved instanceof ElysiaCustomStatusResponse){\" + mapResponse(\"resolved\") + `}else Object.assign(c, resolved)\n`, endUnit();\n        else if (!returning)\n          fnLiteral += isAsync(beforeHandle) ? `await e.beforeHandle[${i}](c)\n` : `e.beforeHandle[${i}](c)\n`, endUnit();\n        else {\n          if (fnLiteral += isAsync(beforeHandle) ? `be=await e.beforeHandle[${i}](c)\n` : `be=e.beforeHandle[${i}](c)\n`, endUnit(\"be\"), fnLiteral += \"if(be!==undefined){\", reporter.resolve(), hooks.afterHandle?.length || hasTrace) {\n            report(\"handle\", {\n              name: isHandleFn ? handler.name : void 0\n            }).resolve();\n            const reporter2 = report(\"afterHandle\", {\n              total: hooks.afterHandle?.length\n            });\n            if (hooks.afterHandle?.length)\n              for (let i2 = 0; i2 < hooks.afterHandle.length; i2++) {\n                const hook = hooks.afterHandle[i2], returning2 = hasReturn(hook), endUnit2 = reporter2.resolveChild(\n                  hook.fn.name\n                );\n                fnLiteral += `c.response=c.responseValue=be\n`, returning2 ? (fnLiteral += isAsync(hook.fn) ? `af=await e.afterHandle[${i2}](c)\n` : `af=e.afterHandle[${i2}](c)\n`, fnLiteral += `if(af!==undefined) c.response=c.responseValue=be=af\n`) : fnLiteral += isAsync(hook.fn) ? `await e.afterHandle[${i2}](c, be)\n` : `e.afterHandle[${i2}](c, be)\n`, endUnit2(\"af\");\n              }\n            reporter2.resolve();\n          }\n          validator.response && (fnLiteral += validation.response(\"be\"));\n          const mapResponseReporter = report(\"mapResponse\", {\n            total: hooks.mapResponse?.length\n          });\n          if (hooks.mapResponse?.length) {\n            fnLiteral += `c.response=c.responseValue=be\n`;\n            for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n              const mapResponse2 = hooks.mapResponse[i2], endUnit2 = mapResponseReporter.resolveChild(\n                mapResponse2.fn.name\n              );\n              fnLiteral += `if(mr===undefined){mr=${isAsyncName(mapResponse2) ? \"await \" : \"\"}e.mapResponse[${i2}](c)\nif(mr!==undefined)be=c.response=c.responseValue=mr}`, endUnit2();\n            }\n          }\n          mapResponseReporter.resolve(), fnLiteral += afterResponse(), fnLiteral += encodeCookie(), fnLiteral += `return mapEarlyResponse(${saveResponse}be,c.set${mapResponseContext})}\n`;\n        }\n      }\n    reporter.resolve();\n  }\n  function reportHandler(name) {\n    const handleReporter = report(\"handle\", {\n      name,\n      alias: \"reportHandler\"\n    });\n    return () => {\n      hasTrace && (fnLiteral += 'if(r&&(r[Symbol.iterator]||r[Symbol.asyncIterator])&&typeof r.next===\"function\"){' + (maybeAsync ? \"\" : \"(async()=>{\") + `const stream=await tee(r,3)\nr=stream[0]\nconst listener=stream[1]\n` + (hasTrace || hooks.afterResponse?.length ? `afterHandlerStreamListener=stream[2]\n` : \"\") + `setImmediate(async ()=>{if(listener)for await(const v of listener){}\n`, handleReporter.resolve(), fnLiteral += \"})\" + (maybeAsync ? \"\" : \"})()\") + \"}else{\", handleReporter.resolve(), fnLiteral += `}\n`);\n    };\n  }\n  if (hooks.afterHandle?.length || hasTrace) {\n    const resolveHandler = reportHandler(\n      isHandleFn ? handler.name : void 0\n    );\n    hooks.afterHandle?.length ? fnLiteral += isAsyncHandler ? `let r=c.response=c.responseValue=await ${handle}\n` : `let r=c.response=c.responseValue=${handle}\n` : fnLiteral += isAsyncHandler ? `let r=await ${handle}\n` : `let r=${handle}\n`, resolveHandler();\n    const reporter = report(\"afterHandle\", {\n      total: hooks.afterHandle?.length\n    });\n    if (hooks.afterHandle?.length)\n      for (let i = 0; i < hooks.afterHandle.length; i++) {\n        const hook = hooks.afterHandle[i], returning = hasReturn(hook), endUnit = reporter.resolveChild(hook.fn.name);\n        returning ? (fnLiteral += isAsync(hook.fn) ? `af=await e.afterHandle[${i}](c)\n` : `af=e.afterHandle[${i}](c)\n`, endUnit(\"af\"), validator.response ? (fnLiteral += \"if(af!==undefined){\", reporter.resolve(), fnLiteral += validation.response(\"af\"), fnLiteral += \"c.response=c.responseValue=af}\") : (fnLiteral += \"if(af!==undefined){\", reporter.resolve(), fnLiteral += \"c.response=c.responseValue=af}\")) : (fnLiteral += isAsync(hook.fn) ? `await e.afterHandle[${i}](c)\n` : `e.afterHandle[${i}](c)\n`, endUnit());\n      }\n    reporter.resolve(), hooks.afterHandle?.length && (fnLiteral += `r=c.response\n`), validator.response && (fnLiteral += validation.response()), fnLiteral += encodeCookie();\n    const mapResponseReporter = report(\"mapResponse\", {\n      total: hooks.mapResponse?.length\n    });\n    if (hooks.mapResponse?.length)\n      for (let i = 0; i < hooks.mapResponse.length; i++) {\n        const mapResponse2 = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n          mapResponse2.fn.name\n        );\n        fnLiteral += `mr=${isAsyncName(mapResponse2) ? \"await \" : \"\"}e.mapResponse[${i}](c)\nif(mr!==undefined)r=c.response=c.responseValue=mr\n`, endUnit();\n      }\n    mapResponseReporter.resolve(), fnLiteral += mapResponse();\n  } else {\n    const resolveHandler = reportHandler(\n      isHandleFn ? handler.name : void 0\n    );\n    if (validator.response || hooks.mapResponse?.length || hasTrace) {\n      fnLiteral += isAsyncHandler ? `let r=await ${handle}\n` : `let r=${handle}\n`, resolveHandler(), validator.response && (fnLiteral += validation.response());\n      const mapResponseReporter = report(\"mapResponse\", {\n        total: hooks.mapResponse?.length\n      });\n      if (hooks.mapResponse?.length) {\n        fnLiteral += `\nc.response=c.responseValue=r\n`;\n        for (let i = 0; i < hooks.mapResponse.length; i++) {\n          const mapResponse2 = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n            mapResponse2.fn.name\n          );\n          fnLiteral += `\nif(mr===undefined){mr=${isAsyncName(mapResponse2) ? \"await \" : \"\"}e.mapResponse[${i}](c)\nif(mr!==undefined)r=c.response=c.responseValue=mr}\n`, endUnit();\n        }\n      }\n      mapResponseReporter.resolve(), fnLiteral += encodeCookie(), handler instanceof Response ? (fnLiteral += afterResponse(), fnLiteral += inference.set ? `if(isNotEmpty(c.set.headers)||c.set.status!==200||c.set.redirect||c.set.cookie)return mapResponse(${saveResponse}${handle}.clone(),c.set${mapResponseContext})\nelse return ${handle}.clone()` : `return ${handle}.clone()`, fnLiteral += `\n`) : fnLiteral += mapResponse();\n    } else if (hasCookie || hasTrace) {\n      fnLiteral += isAsyncHandler ? `let r=await ${handle}\n` : `let r=${handle}\n`, resolveHandler();\n      const mapResponseReporter = report(\"mapResponse\", {\n        total: hooks.mapResponse?.length\n      });\n      if (hooks.mapResponse?.length) {\n        fnLiteral += `c.response=c.responseValue= r\n`;\n        for (let i = 0; i < hooks.mapResponse.length; i++) {\n          const mapResponse2 = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n            mapResponse2.fn.name\n          );\n          fnLiteral += `if(mr===undefined){mr=${isAsyncName(mapResponse2) ? \"await \" : \"\"}e.mapResponse[${i}](c)\nif(mr!==undefined)r=c.response=c.responseValue=mr}`, endUnit();\n        }\n      }\n      mapResponseReporter.resolve(), fnLiteral += encodeCookie() + mapResponse();\n    } else {\n      resolveHandler();\n      const handled = isAsyncHandler ? `await ${handle}` : handle;\n      handler instanceof Response ? (fnLiteral += afterResponse(), fnLiteral += inference.set ? `if(isNotEmpty(c.set.headers)||c.set.status!==200||c.set.redirect||c.set.cookie)return mapResponse(${saveResponse}${handle}.clone(),c.set${mapResponseContext})\nelse return ${handle}.clone()\n` : `return ${handle}.clone()\n`) : fnLiteral += mapResponse(handled);\n    }\n  }\n  if (fnLiteral += `\n}catch(error){`, !maybeAsync && hooks.error?.length && (fnLiteral += \"return(async()=>{\"), fnLiteral += `const set=c.set\nif(!set.status||set.status<300)set.status=error?.status||500\n`, hasCookie && (fnLiteral += encodeCookie()), hasTrace && hooks.trace)\n    for (let i = 0; i < hooks.trace.length; i++)\n      fnLiteral += `report${i}?.resolve(error);reportChild${i}?.(error)\n`;\n  const errorReporter = report(\"error\", {\n    total: hooks.error?.length\n  });\n  if (hooks.error?.length) {\n    fnLiteral += `c.error=error\n`, hasValidation ? fnLiteral += `if(error instanceof TypeBoxError){c.code=\"VALIDATION\"\nc.set.status=422}else{c.code=error.code??error[ERROR_CODE]??\"UNKNOWN\"}` : fnLiteral += `c.code=error.code??error[ERROR_CODE]??\"UNKNOWN\"\n`, fnLiteral += `let er\n`, hooks.mapResponse?.length && (fnLiteral += `let mep\n`);\n    for (let i = 0; i < hooks.error.length; i++) {\n      const endUnit = errorReporter.resolveChild(hooks.error[i].fn.name);\n      if (isAsync(hooks.error[i]) ? fnLiteral += `er=await e.error[${i}](c)\n` : fnLiteral += `er=e.error[${i}](c)\nif(er instanceof Promise)er=await er\n`, endUnit(), hooks.mapResponse?.length) {\n        const mapResponseReporter = report(\"mapResponse\", {\n          total: hooks.mapResponse?.length\n        });\n        for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n          const mapResponse2 = hooks.mapResponse[i2], endUnit2 = mapResponseReporter.resolveChild(\n            mapResponse2.fn.name\n          );\n          fnLiteral += `c.response=c.responseValue=er\nmep=e.mapResponse[${i2}](c)\nif(mep instanceof Promise)er=await er\nif(mep!==undefined)er=mep\n`, endUnit2();\n        }\n        mapResponseReporter.resolve();\n      }\n      if (fnLiteral += `er=mapEarlyResponse(er,set${mapResponseContext})\n`, fnLiteral += \"if(er){\", hasTrace && hooks.trace) {\n        for (let i2 = 0; i2 < hooks.trace.length; i2++)\n          fnLiteral += `report${i2}.resolve()\n`;\n        errorReporter.resolve();\n      }\n      fnLiteral += \"return er}\";\n    }\n  }\n  errorReporter.resolve(), fnLiteral += \"return handleError(c,error,true)\", !maybeAsync && hooks.error?.length && (fnLiteral += \"})()\"), fnLiteral += \"}\";\n  const adapterVariables = adapter.inject ? Object.keys(adapter.inject).join(\",\") + \",\" : \"\";\n  let init = \"const {handler,handleError,hooks:e, \" + allocateIf(\"validator,\", hasValidation) + \"mapResponse,mapCompactResponse,mapEarlyResponse,isNotEmpty,utils:{\" + allocateIf(\"parseQuery,\", hasBody) + allocateIf(\"parseQueryFromURL,\", hasQuery) + \"},error:{\" + allocateIf(\"ValidationError,\", hasValidation) + allocateIf(\"ParseError\", hasBody) + \"},fileType,schema,definitions,tee,ERROR_CODE,\" + allocateIf(\"parseCookie,\", hasCookie) + allocateIf(\"signCookie,\", hasCookie) + allocateIf(\"decodeURIComponent,\", hasQuery) + \"ElysiaCustomStatusResponse,\" + allocateIf(\"ELYSIA_TRACE,\", hasTrace) + allocateIf(\"ELYSIA_REQUEST_ID,\", hasTrace) + allocateIf(\"parser,\", hooks.parse?.length) + allocateIf(\"getServer,\", inference.server) + allocateIf(\"fileUnions,\", fileUnions.length) + adapterVariables + allocateIf(\"TypeBoxError\", hasValidation) + `}=hooks\nconst trace=e.trace\nreturn ${maybeAsync ? \"async \" : \"\"}function handle(c){`;\n  hooks.beforeHandle?.length && (init += `let be\n`), hooks.afterHandle?.length && (init += `let af\n`), hooks.mapResponse?.length && (init += `let mr\n`), allowMeta && (init += `c.schema=schema\nc.defs=definitions\n`), fnLiteral = init + fnLiteral + \"}\", init = \"\";\n  try {\n    return Function(\n      \"hooks\",\n      `\"use strict\";\n` + fnLiteral\n    )({\n      handler,\n      hooks: lifeCycleToFn(hooks),\n      validator: hasValidation ? validator : void 0,\n      // @ts-expect-error\n      handleError: app.handleError,\n      mapResponse: adapterHandler.mapResponse,\n      mapCompactResponse: adapterHandler.mapCompactResponse,\n      mapEarlyResponse: adapterHandler.mapEarlyResponse,\n      isNotEmpty,\n      utils: {\n        parseQuery: hasBody ? parseQuery : void 0,\n        parseQueryFromURL: hasQuery ? validator.query?.provider === \"standard\" ? parseQueryStandardSchema : parseQueryFromURL : void 0\n      },\n      error: {\n        ValidationError: hasValidation ? ValidationError : void 0,\n        ParseError: hasBody ? ParseError : void 0\n      },\n      fileType,\n      schema: app.router.history,\n      // @ts-expect-error\n      definitions: app.definitions.type,\n      tee,\n      ERROR_CODE,\n      parseCookie: hasCookie ? parseCookie : void 0,\n      signCookie: hasCookie ? signCookie : void 0,\n      decodeURIComponent: hasQuery ? decode : void 0,\n      ElysiaCustomStatusResponse,\n      ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n      ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n      // @ts-expect-error private property\n      getServer: inference.server ? () => app.getServer() : void 0,\n      fileUnions: fileUnions.length ? fileUnions : void 0,\n      TypeBoxError: hasValidation ? TypeBoxError : void 0,\n      parser: app[\"~parser\"],\n      ...adapter.inject\n    });\n  } catch (error) {\n    const debugHooks = lifeCycleToFn(hooks);\n    console.log(\"[Composer] failed to generate optimized handler\"), console.log(\"---\"), console.log({\n      handler: typeof handler == \"function\" ? handler.toString() : handler,\n      instruction: fnLiteral,\n      hooks: {\n        ...debugHooks,\n        // @ts-ignore\n        transform: debugHooks?.transform?.map?.((x) => x.toString()),\n        // @ts-ignore\n        resolve: debugHooks?.resolve?.map?.((x) => x.toString()),\n        // @ts-ignore\n        beforeHandle: debugHooks?.beforeHandle?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        afterHandle: debugHooks?.afterHandle?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        mapResponse: debugHooks?.mapResponse?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        parse: debugHooks?.parse?.map?.((x) => x.toString()),\n        // @ts-ignore\n        error: debugHooks?.error?.map?.((x) => x.toString()),\n        // @ts-ignore\n        afterResponse: debugHooks?.afterResponse?.map?.(\n          (x) => x.toString()\n        ),\n        // @ts-ignore\n        stop: debugHooks?.stop?.map?.((x) => x.toString())\n      },\n      validator,\n      // @ts-expect-error\n      definitions: app.definitions.type,\n      error\n    }), console.log(\"---\"), process.exit(1);\n  }\n}, createOnRequestHandler = (app, addFn) => {\n  let fnLiteral = \"\";\n  const reporter = createReport({\n    trace: app.event.trace,\n    addFn: addFn ?? ((word) => {\n      fnLiteral += word;\n    })\n  })(\"request\", {\n    total: app.event.request?.length\n  });\n  if (app.event.request?.length) {\n    fnLiteral += \"try{\";\n    for (let i = 0; i < app.event.request.length; i++) {\n      const hook = app.event.request[i], withReturn = hasReturn(hook), maybeAsync = isAsync(hook), endUnit = reporter.resolveChild(app.event.request[i].fn.name);\n      withReturn ? (fnLiteral += `re=mapEarlyResponse(${maybeAsync ? \"await \" : \"\"}onRequest[${i}](c),c.set)\n`, endUnit(\"re\"), fnLiteral += `if(re!==undefined)return re\n`) : (fnLiteral += `${maybeAsync ? \"await \" : \"\"}onRequest[${i}](c)\n`, endUnit());\n    }\n    fnLiteral += \"}catch(error){return app.handleError(c,error,false)}\";\n  }\n  return reporter.resolve(), fnLiteral;\n}, createHoc = (app, fnName = \"map\") => {\n  const hoc = app.extender.higherOrderFunctions;\n  if (!hoc.length) return \"return \" + fnName;\n  const adapter = app[\"~adapter\"].composeGeneralHandler;\n  let handler = fnName;\n  for (let i = 0; i < hoc.length; i++)\n    handler = `hoc[${i}](${handler},${adapter.parameters})`;\n  return `return function hocMap(${adapter.parameters}){return ${handler}(${adapter.parameters})}`;\n}, composeGeneralHandler = (app) => {\n  const adapter = app[\"~adapter\"].composeGeneralHandler;\n  app.router.http.build();\n  const isWebstandard = app[\"~adapter\"].isWebStandard, hasTrace = app.event.trace?.length;\n  let fnLiteral = \"\";\n  const router = app.router;\n  let findDynamicRoute = router.http.root.WS ? \"const route=router.find(r.method==='GET'&&r.headers.get('upgrade')==='websocket'?'WS':r.method,p)\" : \"const route=router.find(r.method,p)\";\n  findDynamicRoute += router.http.root.ALL ? `??router.find('ALL',p)\n` : `\n`, isWebstandard && (findDynamicRoute += `if(r.method==='HEAD'){const route=router.find('GET',p)\nif(route){c.params=route.params\nconst _res=route.store.handler?route.store.handler(c):route.store.compile()(c)\nif(_res)return getResponseLength(_res).then((length)=>{_res.headers.set('content-length', length)\nreturn new Response(null,{status:_res.status,statusText:_res.statusText,headers:_res.headers})\n})}}`);\n  let afterResponse = `c.error=notFound\n`;\n  if (app.event.afterResponse?.length && !app.event.error) {\n    afterResponse = `\nc.error=notFound\n`;\n    const prefix = app.event.afterResponse.some(isAsync) ? \"async\" : \"\";\n    afterResponse += `\nsetImmediate(${prefix}()=>{if(c.responseValue instanceof ElysiaCustomStatusResponse) c.set.status=c.responseValue.code\n`;\n    for (let i = 0; i < app.event.afterResponse.length; i++) {\n      const fn2 = app.event.afterResponse[i].fn;\n      afterResponse += `\n${isAsyncName(fn2) ? \"await \" : \"\"}afterResponse[${i}](c)\n`;\n    }\n    afterResponse += `})\n`;\n  }\n  app.inference.query && (afterResponse += `\nif(c.qi===-1){c.query={}}else{c.query=parseQueryFromURL(c.url,c.qi+1)}`);\n  const error404 = adapter.error404(\n    !!app.event.request?.length,\n    !!app.event.error?.length,\n    afterResponse\n  );\n  findDynamicRoute += error404.code, findDynamicRoute += `\nc.params=route.params\nif(route.store.handler)return route.store.handler(c)\nreturn route.store.compile()(c)\n`;\n  let switchMap = \"\";\n  for (const [path, methods] of Object.entries(router.static)) {\n    switchMap += `case'${path}':`, app.config.strictPath !== !0 && (switchMap += `case'${getLoosePath(path)}':`);\n    const encoded = encodePath(path);\n    path !== encoded && (switchMap += `case'${encoded}':`), switchMap += \"switch(r.method){\", (\"GET\" in methods || \"WS\" in methods) && (switchMap += \"case 'GET':\", \"WS\" in methods && (switchMap += `if(r.headers.get('upgrade')==='websocket')return ht[${methods.WS}].composed(c)\n`, \"GET\" in methods || (\"ALL\" in methods ? switchMap += `return ht[${methods.ALL}].composed(c)\n` : switchMap += `break map\n`)), \"GET\" in methods && (switchMap += `return ht[${methods.GET}].composed(c)\n`)), isWebstandard && (\"GET\" in methods || \"ALL\" in methods) && !(\"HEAD\" in methods) && (switchMap += `case 'HEAD':const _res=ht[${methods.GET ?? methods.ALL}].composed(c)\nreturn getResponseLength(_res).then((length)=>{_res.headers.set('content-length', length)\nreturn new Response(null,{status:_res.status,statusText:_res.statusText,headers:_res.headers})\n})\n`);\n    for (const [method, index] of Object.entries(methods))\n      method === \"ALL\" || method === \"GET\" || method === \"WS\" || (switchMap += `case '${method}':return ht[${index}].composed(c)\n`);\n    \"ALL\" in methods ? switchMap += `default:return ht[${methods.ALL}].composed(c)\n` : switchMap += `default:break map\n`, switchMap += \"}\";\n  }\n  const maybeAsync = !!app.event.request?.some(isAsync), adapterVariables = adapter.inject ? Object.keys(adapter.inject).join(\",\") + \",\" : \"\";\n  fnLiteral += `\nconst {app,mapEarlyResponse,NotFoundError,randomId,handleError,status,redirect,getResponseLength,ElysiaCustomStatusResponse,` + // @ts-ignore\n  allocateIf(\"parseQueryFromURL,\", app.inference.query) + allocateIf(\"ELYSIA_TRACE,\", hasTrace) + allocateIf(\"ELYSIA_REQUEST_ID,\", hasTrace) + adapterVariables + `}=data\nconst store=app.singleton.store\nconst decorator=app.singleton.decorator\nconst staticRouter=app.router.static.http\nconst ht=app.router.history\nconst router=app.router.http\nconst trace=app.event.trace?.map(x=>typeof x==='function'?x:x.fn)??[]\nconst notFound=new NotFoundError()\nconst hoc=app.extender.higherOrderFunctions.map(x=>x.fn)\n`, app.event.request?.length && (fnLiteral += `const onRequest=app.event.request.map(x=>x.fn)\n`), app.event.afterResponse?.length && (fnLiteral += `const afterResponse=app.event.afterResponse.map(x=>x.fn)\n`), fnLiteral += error404.declare, app.event.trace?.length && (fnLiteral += \"const \" + app.event.trace.map((_, i) => `tr${i}=app.event.trace[${i}].fn`).join(\",\") + `\n`), fnLiteral += `${maybeAsync ? \"async \" : \"\"}function map(${adapter.parameters}){`, app.event.request?.length && (fnLiteral += `let re\n`), fnLiteral += adapter.createContext(app), app.event.trace?.length && (fnLiteral += \"c[ELYSIA_TRACE]=[\" + app.event.trace.map((_, i) => `tr${i}(c)`).join(\",\") + `]\n`), fnLiteral += createOnRequestHandler(app), switchMap && (fnLiteral += `\nmap: switch(p){\n` + switchMap + \"}\"), fnLiteral += findDynamicRoute + `}\n` + createHoc(app);\n  const handleError = composeErrorHandler(app);\n  app.handleError = handleError;\n  const fn = Function(\n    \"data\",\n    `\"use strict\";\n` + fnLiteral\n  )({\n    app,\n    mapEarlyResponse: app[\"~adapter\"].handler.mapEarlyResponse,\n    NotFoundError,\n    randomId,\n    handleError,\n    status,\n    redirect,\n    getResponseLength,\n    ElysiaCustomStatusResponse,\n    // @ts-ignore\n    parseQueryFromURL: app.inference.query ? parseQueryFromURL : void 0,\n    ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n    ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n    ...adapter.inject\n  });\n  return isBun && Bun.gc(!1), fn;\n}, composeErrorHandler = (app) => {\n  const hooks = app.event;\n  let fnLiteral = \"\";\n  const adapter = app[\"~adapter\"].composeError, adapterVariables = adapter.inject ? Object.keys(adapter.inject).join(\",\") + \",\" : \"\", hasTrace = !!app.event.trace?.length;\n  fnLiteral += \"const {mapResponse,ERROR_CODE,ElysiaCustomStatusResponse,\" + allocateIf(\"onError,\", app.event.error) + allocateIf(\"afterResponse,\", app.event.afterResponse) + allocateIf(\"trace,\", app.event.trace) + allocateIf(\"onMapResponse,\", app.event.mapResponse) + allocateIf(\"ELYSIA_TRACE,\", hasTrace) + allocateIf(\"ELYSIA_REQUEST_ID,\", hasTrace) + adapterVariables + `}=inject\n`, fnLiteral += `return ${app.event.error?.find(isAsync) || app.event.mapResponse?.find(isAsync) ? \"async \" : \"\"}function(context,error,skipGlobal){`, fnLiteral += \"\", hasTrace && (fnLiteral += `const id=context[ELYSIA_REQUEST_ID]\n`);\n  const report = createReport({\n    context: \"context\",\n    trace: hooks.trace,\n    addFn: (word) => {\n      fnLiteral += word;\n    }\n  }), afterResponse = () => {\n    if (!hooks.afterResponse?.length && !hasTrace) return \"\";\n    let afterResponse2 = \"\";\n    const prefix = hooks.afterResponse?.some(isAsync) ? \"async\" : \"\";\n    afterResponse2 += `\nsetImmediate(${prefix}()=>{`;\n    const reporter = createReport({\n      context: \"context\",\n      trace: hooks.trace,\n      addFn: (word) => {\n        afterResponse2 += word;\n      }\n    })(\"afterResponse\", {\n      total: hooks.afterResponse?.length,\n      name: \"context\"\n    });\n    if (hooks.afterResponse?.length && hooks.afterResponse)\n      for (let i = 0; i < hooks.afterResponse.length; i++) {\n        const fn = hooks.afterResponse[i].fn, endUnit = reporter.resolveChild(fn.name);\n        afterResponse2 += `\n${isAsyncName(fn) ? \"await \" : \"\"}afterResponse[${i}](context)\n`, endUnit();\n      }\n    return reporter.resolve(), afterResponse2 += `})\n`, afterResponse2;\n  };\n  fnLiteral += `const set=context.set\nlet _r\nif(!context.code)context.code=error.code??error[ERROR_CODE]\nif(!(context.error instanceof Error))context.error=error\nif(error instanceof ElysiaCustomStatusResponse){set.status=error.status=error.code\nerror.message=error.response}`, adapter.declare && (fnLiteral += adapter.declare);\n  const saveResponse = hasTrace || hooks.afterResponse?.length ? \"context.response = \" : \"\";\n  if (app.event.error)\n    for (let i = 0; i < app.event.error.length; i++) {\n      const handler = app.event.error[i], response = `${isAsync(handler) ? \"await \" : \"\"}onError[${i}](context)\n`;\n      if (fnLiteral += \"if(skipGlobal!==true){\", hasReturn(handler)) {\n        fnLiteral += `_r=${response}\nif(_r!==undefined){if(_r instanceof Response){` + afterResponse() + `return mapResponse(_r,set${adapter.mapResponseContext})}if(_r instanceof ElysiaCustomStatusResponse){error.status=error.code\nerror.message = error.response}if(set.status===200||!set.status)set.status=error.status\n`;\n        const mapResponseReporter2 = report(\"mapResponse\", {\n          total: hooks.mapResponse?.length,\n          name: \"context\"\n        });\n        if (hooks.mapResponse?.length)\n          for (let i2 = 0; i2 < hooks.mapResponse.length; i2++) {\n            const mapResponse = hooks.mapResponse[i2], endUnit = mapResponseReporter2.resolveChild(\n              mapResponse.fn.name\n            );\n            fnLiteral += `context.response=context.responseValue=_r_r=${isAsyncName(mapResponse) ? \"await \" : \"\"}onMapResponse[${i2}](context)\n`, endUnit();\n          }\n        mapResponseReporter2.resolve(), fnLiteral += afterResponse() + `return mapResponse(${saveResponse}_r,set${adapter.mapResponseContext})}`;\n      } else fnLiteral += response;\n      fnLiteral += \"}\";\n    }\n  fnLiteral += `if(error.constructor.name===\"ValidationError\"||error.constructor.name===\"TransformDecodeError\"){\nif(error.error)error=error.error\nset.status=error.status??422\n` + afterResponse() + adapter.validationError + `\n}\n`, fnLiteral += \"if(error instanceof Error){\" + afterResponse() + `\nif(typeof error.toResponse==='function')return context.response=context.responseValue=error.toResponse()\n` + adapter.unknownError + `\n}`;\n  const mapResponseReporter = report(\"mapResponse\", {\n    total: hooks.mapResponse?.length,\n    name: \"context\"\n  });\n  if (fnLiteral += `\nif(!context.response)context.response=context.responseValue=error.message??error\n`, hooks.mapResponse?.length) {\n    fnLiteral += `let mr\n`;\n    for (let i = 0; i < hooks.mapResponse.length; i++) {\n      const mapResponse = hooks.mapResponse[i], endUnit = mapResponseReporter.resolveChild(\n        mapResponse.fn.name\n      );\n      fnLiteral += `if(mr===undefined){mr=${isAsyncName(mapResponse) ? \"await \" : \"\"}onMapResponse[${i}](context)\nif(mr!==undefined)error=context.response=context.responseValue=mr}`, endUnit();\n    }\n  }\n  mapResponseReporter.resolve(), fnLiteral += afterResponse() + `\nreturn mapResponse(${saveResponse}error,set${adapter.mapResponseContext})}`;\n  const mapFn = (x) => typeof x == \"function\" ? x : x.fn;\n  return Function(\n    \"inject\",\n    `\"use strict\";\n` + fnLiteral\n  )({\n    mapResponse: app[\"~adapter\"].handler.mapResponse,\n    ERROR_CODE,\n    ElysiaCustomStatusResponse,\n    onError: app.event.error?.map(mapFn),\n    afterResponse: app.event.afterResponse?.map(mapFn),\n    trace: app.event.trace?.map(mapFn),\n    onMapResponse: app.event.mapResponse?.map(mapFn),\n    ELYSIA_TRACE: hasTrace ? ELYSIA_TRACE : void 0,\n    ELYSIA_REQUEST_ID: hasTrace ? ELYSIA_REQUEST_ID : void 0,\n    ...adapter.inject\n  });\n};\nexport {\n  composeErrorHandler,\n  composeGeneralHandler,\n  composeHandler,\n  createHoc,\n  createOnRequestHandler,\n  isAsync\n};\n", "import decode from \"fast-decode-uri-component\";\nconst KEY_HAS_PLUS = 1, KEY_NEEDS_DECODE = 2, VALUE_HAS_PLUS = 4, VALUE_NEEDS_DECODE = 8;\nfunction parseQueryFromURL(input, startIndex = 0, array, object) {\n  const result = /* @__PURE__ */ Object.create(null);\n  let flags = 0;\n  const inputLength = input.length;\n  let startingIndex = startIndex - 1, equalityIndex = startingIndex;\n  for (let i = 0; i < inputLength; i++)\n    switch (input.charCodeAt(i)) {\n      // '&'\n      case 38:\n        processKeyValuePair(input, i), startingIndex = i, equalityIndex = i, flags = 0;\n        break;\n      // '='\n      case 61:\n        equalityIndex <= startingIndex ? equalityIndex = i : flags |= VALUE_NEEDS_DECODE;\n        break;\n      // '+'\n      case 43:\n        equalityIndex > startingIndex ? flags |= VALUE_HAS_PLUS : flags |= KEY_HAS_PLUS;\n        break;\n      // '%'\n      case 37:\n        equalityIndex > startingIndex ? flags |= VALUE_NEEDS_DECODE : flags |= KEY_NEEDS_DECODE;\n        break;\n    }\n  return startingIndex < inputLength && processKeyValuePair(input, inputLength), result;\n  function processKeyValuePair(input2, endIndex) {\n    const hasBothKeyValuePair = equalityIndex > startingIndex, effectiveEqualityIndex = hasBothKeyValuePair ? equalityIndex : endIndex, keySlice = input2.slice(startingIndex + 1, effectiveEqualityIndex);\n    if (!hasBothKeyValuePair && keySlice.length === 0) return;\n    let finalKey = keySlice;\n    flags & KEY_HAS_PLUS && (finalKey = finalKey.replace(/\\+/g, \" \")), flags & KEY_NEEDS_DECODE && (finalKey = decode(finalKey) || finalKey);\n    let finalValue = \"\";\n    if (hasBothKeyValuePair) {\n      let valueSlice = input2.slice(equalityIndex + 1, endIndex);\n      flags & VALUE_HAS_PLUS && (valueSlice = valueSlice.replace(/\\+/g, \" \")), flags & VALUE_NEEDS_DECODE && (valueSlice = decode(valueSlice) || valueSlice), finalValue = valueSlice;\n    }\n    const currentValue = result[finalKey];\n    array?.[finalKey] ? finalValue.charCodeAt(0) === 91 ? (object?.[finalKey] ? finalValue = JSON.parse(finalValue) : finalValue = finalValue.slice(1, -1).split(\",\"), currentValue === void 0 ? result[finalKey] = finalValue : Array.isArray(currentValue) ? currentValue.push(...finalValue) : (result[finalKey] = finalValue, result[finalKey].unshift(currentValue))) : currentValue === void 0 ? result[finalKey] = finalValue : Array.isArray(currentValue) ? currentValue.push(finalValue) : result[finalKey] = [currentValue, finalValue] : result[finalKey] = finalValue;\n  }\n}\nfunction parseQueryStandardSchema(input, startIndex = 0) {\n  const result = /* @__PURE__ */ Object.create(null);\n  let flags = 0;\n  const inputLength = input.length;\n  let startingIndex = startIndex - 1, equalityIndex = startingIndex;\n  for (let i = 0; i < inputLength; i++)\n    switch (input.charCodeAt(i)) {\n      // '&'\n      case 38:\n        processKeyValuePair(input, i), startingIndex = i, equalityIndex = i, flags = 0;\n        break;\n      // '='\n      case 61:\n        equalityIndex <= startingIndex ? equalityIndex = i : flags |= VALUE_NEEDS_DECODE;\n        break;\n      // '+'\n      case 43:\n        equalityIndex > startingIndex ? flags |= VALUE_HAS_PLUS : flags |= KEY_HAS_PLUS;\n        break;\n      // '%'\n      case 37:\n        equalityIndex > startingIndex ? flags |= VALUE_NEEDS_DECODE : flags |= KEY_NEEDS_DECODE;\n        break;\n    }\n  return startingIndex < inputLength && processKeyValuePair(input, inputLength), result;\n  function processKeyValuePair(input2, endIndex) {\n    const hasBothKeyValuePair = equalityIndex > startingIndex, effectiveEqualityIndex = hasBothKeyValuePair ? equalityIndex : endIndex, keySlice = input2.slice(startingIndex + 1, effectiveEqualityIndex);\n    if (!hasBothKeyValuePair && keySlice.length === 0) return;\n    let finalKey = keySlice;\n    flags & KEY_HAS_PLUS && (finalKey = finalKey.replace(/\\+/g, \" \")), flags & KEY_NEEDS_DECODE && (finalKey = decode(finalKey) || finalKey);\n    let finalValue = \"\";\n    if (hasBothKeyValuePair) {\n      let valueSlice = input2.slice(equalityIndex + 1, endIndex);\n      flags & VALUE_HAS_PLUS && (valueSlice = valueSlice.replace(/\\+/g, \" \")), flags & VALUE_NEEDS_DECODE && (valueSlice = decode(valueSlice) || valueSlice), finalValue = valueSlice;\n    }\n    const currentValue = result[finalKey];\n    if (finalValue.charCodeAt(0) === 91 && finalValue.charCodeAt(finalValue.length - 1) === 93) {\n      try {\n        finalValue = JSON.parse(finalValue);\n      } catch {\n      }\n      currentValue === void 0 ? result[finalKey] = finalValue : Array.isArray(currentValue) ? currentValue.push(finalValue) : result[finalKey] = [currentValue, finalValue];\n    } else if (finalValue.charCodeAt(0) === 123 && finalValue.charCodeAt(finalValue.length - 1) === 125) {\n      try {\n        finalValue = JSON.parse(finalValue);\n      } catch {\n      }\n      currentValue === void 0 ? result[finalKey] = finalValue : Array.isArray(currentValue) ? currentValue.push(finalValue) : result[finalKey] = [currentValue, finalValue];\n    } else\n      finalValue.includes(\",\") && (finalValue = finalValue.split(\",\")), currentValue === void 0 ? result[finalKey] = finalValue : Array.isArray(currentValue) ? currentValue.push(finalValue) : result[finalKey] = [currentValue, finalValue];\n  }\n}\nfunction parseQuery(input) {\n  const result = /* @__PURE__ */ Object.create(null);\n  let flags = 0;\n  const inputLength = input.length;\n  let startingIndex = -1, equalityIndex = -1;\n  for (let i = 0; i < inputLength; i++)\n    switch (input.charCodeAt(i)) {\n      // '&'\n      case 38:\n        processKeyValuePair(input, i), startingIndex = i, equalityIndex = i, flags = 0;\n        break;\n      // '='\n      case 61:\n        equalityIndex <= startingIndex ? equalityIndex = i : flags |= VALUE_NEEDS_DECODE;\n        break;\n      // '+'\n      case 43:\n        equalityIndex > startingIndex ? flags |= VALUE_HAS_PLUS : flags |= KEY_HAS_PLUS;\n        break;\n      // '%'\n      case 37:\n        equalityIndex > startingIndex ? flags |= VALUE_NEEDS_DECODE : flags |= KEY_NEEDS_DECODE;\n        break;\n    }\n  return startingIndex < inputLength && processKeyValuePair(input, inputLength), result;\n  function processKeyValuePair(input2, endIndex) {\n    const hasBothKeyValuePair = equalityIndex > startingIndex, effectiveEqualityIndex = hasBothKeyValuePair ? equalityIndex : endIndex, keySlice = input2.slice(startingIndex + 1, effectiveEqualityIndex);\n    if (!hasBothKeyValuePair && keySlice.length === 0) return;\n    let finalKey = keySlice;\n    flags & KEY_HAS_PLUS && (finalKey = finalKey.replace(/\\+/g, \" \")), flags & KEY_NEEDS_DECODE && (finalKey = decode(finalKey) || finalKey);\n    let finalValue = \"\";\n    if (hasBothKeyValuePair) {\n      let valueSlice = input2.slice(equalityIndex + 1, endIndex);\n      flags & VALUE_HAS_PLUS && (valueSlice = valueSlice.replace(/\\+/g, \" \")), flags & VALUE_NEEDS_DECODE && (valueSlice = decode(valueSlice) || valueSlice), finalValue = valueSlice;\n    }\n    const currentValue = result[finalKey];\n    currentValue === void 0 ? result[finalKey] = finalValue : Array.isArray(currentValue) ? currentValue.push(finalValue) : result[finalKey] = [currentValue, finalValue];\n  }\n}\nexport {\n  parseQuery,\n  parseQueryFromURL,\n  parseQueryStandardSchema\n};\n", "import { ELYSIA_REQUEST_ID } from \"./utils.mjs\";\nconst ELYSIA_TRACE = Symbol(\"ElysiaTrace\"), createProcess = () => {\n  const { promise, resolve } = Promise.withResolvers(), { promise: end, resolve: resolveEnd } = Promise.withResolvers(), { promise: error, resolve: resolveError } = Promise.withResolvers(), callbacks = [], callbacksEnd = [];\n  return [\n    (callback) => (callback && callbacks.push(callback), promise),\n    (process) => {\n      const processes = [], resolvers = [];\n      let groupError = null;\n      for (let i = 0; i < (process.total ?? 0); i++) {\n        const { promise: promise2, resolve: resolve2 } = Promise.withResolvers(), { promise: end2, resolve: resolveEnd2 } = Promise.withResolvers(), { promise: error2, resolve: resolveError2 } = Promise.withResolvers(), callbacks2 = [], callbacksEnd2 = [];\n        processes.push((callback) => (callback && callbacks2.push(callback), promise2)), resolvers.push((process2) => {\n          const result2 = {\n            ...process2,\n            end: end2,\n            error: error2,\n            index: i,\n            onStop(callback) {\n              return callback && callbacksEnd2.push(callback), end2;\n            }\n          };\n          resolve2(result2);\n          for (let i2 = 0; i2 < callbacks2.length; i2++)\n            callbacks2[i2](result2);\n          return (error3 = null) => {\n            const end3 = performance.now();\n            error3 && (groupError = error3);\n            const detail = {\n              end: end3,\n              error: error3,\n              get elapsed() {\n                return end3 - process2.begin;\n              }\n            };\n            for (let i2 = 0; i2 < callbacksEnd2.length; i2++)\n              callbacksEnd2[i2](detail);\n            resolveEnd2(end3), resolveError2(error3);\n          };\n        });\n      }\n      const result = {\n        ...process,\n        end,\n        error,\n        onEvent(callback) {\n          for (let i = 0; i < processes.length; i++)\n            processes[i](callback);\n        },\n        onStop(callback) {\n          return callback && callbacksEnd.push(callback), end;\n        }\n      };\n      resolve(result);\n      for (let i = 0; i < callbacks.length; i++) callbacks[i](result);\n      return {\n        resolveChild: resolvers,\n        resolve(error2 = null) {\n          const end2 = performance.now();\n          !error2 && groupError && (error2 = groupError);\n          const detail = {\n            end: end2,\n            error: error2,\n            get elapsed() {\n              return end2 - process.begin;\n            }\n          };\n          for (let i = 0; i < callbacksEnd.length; i++)\n            callbacksEnd[i](detail);\n          resolveEnd(end2), resolveError(error2);\n        }\n      };\n    }\n  ];\n}, createTracer = (traceListener) => (context) => {\n  const [onRequest, resolveRequest] = createProcess(), [onParse, resolveParse] = createProcess(), [onTransform, resolveTransform] = createProcess(), [onBeforeHandle, resolveBeforeHandle] = createProcess(), [onHandle, resolveHandle] = createProcess(), [onAfterHandle, resolveAfterHandle] = createProcess(), [onError, resolveError] = createProcess(), [onMapResponse, resolveMapResponse] = createProcess(), [onAfterResponse, resolveAfterResponse] = createProcess();\n  return traceListener({\n    // @ts-ignore\n    id: context[ELYSIA_REQUEST_ID],\n    context,\n    set: context.set,\n    // @ts-ignore\n    onRequest,\n    // @ts-ignore\n    onParse,\n    // @ts-ignore\n    onTransform,\n    // @ts-ignore\n    onBeforeHandle,\n    // @ts-ignore\n    onHandle,\n    // @ts-ignore\n    onAfterHandle,\n    // @ts-ignore\n    onMapResponse,\n    // @ts-ignore\n    onAfterResponse,\n    // @ts-ignore\n    onError,\n    time: Date.now(),\n    store: context.store\n  }), {\n    request: resolveRequest,\n    parse: resolveParse,\n    transform: resolveTransform,\n    beforeHandle: resolveBeforeHandle,\n    handle: resolveHandle,\n    afterHandle: resolveAfterHandle,\n    error: resolveError,\n    mapResponse: resolveMapResponse,\n    afterResponse: resolveAfterResponse\n  };\n};\nexport {\n  ELYSIA_TRACE,\n  createTracer\n};\n", "import {\n  Kind,\n  OptionalKind,\n  TransformKind\n} from \"@sinclair/typebox\";\nimport { Value } from \"@sinclair/typebox/value\";\nimport { TypeCompiler } from \"@sinclair/typebox/compiler\";\nimport {\n  createMirror\n} from \"exact-mirror\";\nimport { t } from \"./type-system/index.mjs\";\nimport { mergeCookie, mergeDeep, randomId } from \"./utils.mjs\";\nimport { mapValueError } from \"./error.mjs\";\nconst isOptional = (schema) => schema ? schema?.[Kind] === \"Import\" && schema.References ? schema.References().some(isOptional) : (schema.schema && (schema = schema.schema), !!schema && OptionalKind in schema) : !1, hasAdditionalProperties = (_schema) => {\n  if (!_schema) return !1;\n  const schema = _schema?.schema ?? _schema;\n  if (schema[Kind] === \"Import\" && _schema.References)\n    return _schema.References().some(hasAdditionalProperties);\n  if (schema.anyOf) return schema.anyOf.some(hasAdditionalProperties);\n  if (schema.someOf) return schema.someOf.some(hasAdditionalProperties);\n  if (schema.allOf) return schema.allOf.some(hasAdditionalProperties);\n  if (schema.not) return schema.not.some(hasAdditionalProperties);\n  if (schema.type === \"object\") {\n    const properties = schema.properties;\n    if (\"additionalProperties\" in schema) return schema.additionalProperties;\n    if (\"patternProperties\" in schema) return !1;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (property.type === \"object\") {\n        if (hasAdditionalProperties(property)) return !0;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasAdditionalProperties(property.anyOf[i])) return !0;\n      }\n      return property.additionalProperties;\n    }\n    return !1;\n  }\n  return schema.type === \"array\" && schema.items && !Array.isArray(schema.items) ? hasAdditionalProperties(schema.items) : !1;\n}, hasType = (type, schema) => {\n  if (!schema) return !1;\n  if (Kind in schema && schema[Kind] === type) return !0;\n  if (schema.type === \"object\") {\n    const properties = schema.properties;\n    if (!properties) return !1;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (property.type === \"object\") {\n        if (hasType(type, property)) return !0;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasType(type, property.anyOf[i])) return !0;\n      }\n      if (Kind in property && property[Kind] === type) return !0;\n    }\n    return !1;\n  }\n  return !!schema.properties && Kind in schema.properties && schema.properties[Kind] === type;\n}, hasElysiaMeta = (meta, _schema) => {\n  if (!_schema) return !1;\n  const schema = _schema?.schema ?? _schema;\n  if (schema.elysiaMeta === meta) return !0;\n  if (schema[Kind] === \"Import\" && _schema.References)\n    return _schema.References().some((schema2) => hasElysiaMeta(meta, schema2));\n  if (schema.anyOf)\n    return schema.anyOf.some(\n      (schema2) => hasElysiaMeta(meta, schema2)\n    );\n  if (schema.someOf)\n    return schema.someOf.some(\n      (schema2) => hasElysiaMeta(meta, schema2)\n    );\n  if (schema.allOf)\n    return schema.allOf.some(\n      (schema2) => hasElysiaMeta(meta, schema2)\n    );\n  if (schema.not)\n    return schema.not.some((schema2) => hasElysiaMeta(meta, schema2));\n  if (schema.type === \"object\") {\n    const properties = schema.properties;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (property.type === \"object\") {\n        if (hasElysiaMeta(meta, property)) return !0;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasElysiaMeta(meta, property.anyOf[i])) return !0;\n      }\n      return schema.elysiaMeta === meta;\n    }\n    return !1;\n  }\n  return schema.type === \"array\" && schema.items && !Array.isArray(schema.items) ? hasElysiaMeta(meta, schema.items) : !1;\n}, hasProperty = (expectedProperty, _schema) => {\n  if (!_schema) return;\n  const schema = _schema.schema ?? _schema;\n  if (schema[Kind] === \"Import\" && _schema.References)\n    return _schema.References().some((schema2) => hasProperty(expectedProperty, schema2));\n  if (schema.type === \"object\") {\n    const properties = schema.properties;\n    if (!properties) return !1;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (expectedProperty in property) return !0;\n      if (property.type === \"object\") {\n        if (hasProperty(expectedProperty, property)) return !0;\n      } else if (property.anyOf) {\n        for (let i = 0; i < property.anyOf.length; i++)\n          if (hasProperty(expectedProperty, property.anyOf[i]))\n            return !0;\n      }\n    }\n    return !1;\n  }\n  return expectedProperty in schema;\n}, hasRef = (schema) => {\n  if (!schema) return !1;\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      if (hasRef(schema.oneOf[i])) return !0;\n  }\n  if (schema.anyOf) {\n    for (let i = 0; i < schema.anyOf.length; i++)\n      if (hasRef(schema.anyOf[i])) return !0;\n  }\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      if (hasRef(schema.oneOf[i])) return !0;\n  }\n  if (schema.allOf) {\n    for (let i = 0; i < schema.allOf.length; i++)\n      if (hasRef(schema.allOf[i])) return !0;\n  }\n  if (schema.not && hasRef(schema.not)) return !0;\n  if (schema.type === \"object\" && schema.properties) {\n    const properties = schema.properties;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (hasRef(property) || property.type === \"array\" && property.items && hasRef(property.items))\n        return !0;\n    }\n  }\n  return schema.type === \"array\" && schema.items && hasRef(schema.items) ? !0 : schema[Kind] === \"Ref\" && \"$ref\" in schema;\n}, hasTransform = (schema) => {\n  if (!schema) return !1;\n  if (schema.$ref && schema.$defs && schema.$ref in schema.$defs && hasTransform(schema.$defs[schema.$ref]))\n    return !0;\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      if (hasTransform(schema.oneOf[i])) return !0;\n  }\n  if (schema.anyOf) {\n    for (let i = 0; i < schema.anyOf.length; i++)\n      if (hasTransform(schema.anyOf[i])) return !0;\n  }\n  if (schema.allOf) {\n    for (let i = 0; i < schema.allOf.length; i++)\n      if (hasTransform(schema.allOf[i])) return !0;\n  }\n  if (schema.not && hasTransform(schema.not)) return !0;\n  if (schema.type === \"object\" && schema.properties) {\n    const properties = schema.properties;\n    for (const key of Object.keys(properties)) {\n      const property = properties[key];\n      if (hasTransform(property) || property.type === \"array\" && property.items && hasTransform(property.items))\n        return !0;\n    }\n  }\n  return schema.type === \"array\" && schema.items && hasTransform(schema.items) ? !0 : TransformKind in schema;\n}, replaceSchemaType = (schema, options, _config = {}) => {\n  const config = _config;\n  if (config.root = !0, !Array.isArray(options))\n    return options.original = schema, _replaceSchemaType(schema, options, config);\n  for (const option of options)\n    option.original = schema, schema = _replaceSchemaType(schema, option, config);\n  return schema;\n}, _replaceSchemaType = (schema, options, config) => {\n  if (!schema) return schema;\n  const root = config.root;\n  if (options.onlyFirst && schema.type === options.onlyFirst)\n    return options.to(schema) ?? schema;\n  if (options.untilObjectFound && !root && schema.type === \"object\")\n    return schema;\n  const fromSymbol = options.from[Kind];\n  if (schema.oneOf) {\n    for (let i = 0; i < schema.oneOf.length; i++)\n      schema.oneOf[i] = _replaceSchemaType(\n        schema.oneOf[i],\n        options,\n        config\n      );\n    return schema;\n  }\n  if (schema.anyOf) {\n    for (let i = 0; i < schema.anyOf.length; i++)\n      schema.anyOf[i] = _replaceSchemaType(\n        schema.anyOf[i],\n        options,\n        config\n      );\n    return schema;\n  }\n  if (schema.allOf) {\n    for (let i = 0; i < schema.allOf.length; i++)\n      schema.allOf[i] = _replaceSchemaType(\n        schema.allOf[i],\n        options,\n        config\n      );\n    return schema;\n  }\n  if (schema.not) return _replaceSchemaType(schema.not, options, config);\n  const isRoot = root && !!options.excludeRoot;\n  if (schema[Kind] === fromSymbol) {\n    const { anyOf, oneOf, allOf, not, properties: properties2, items, ...rest } = schema, to = options.to(rest);\n    if (!to) return schema;\n    let transform;\n    const composeProperties = (schema2) => {\n      const v = _composeProperties(schema2);\n      return v.$id && delete v.$id, v;\n    }, _composeProperties = (v) => {\n      if (properties2 && v.type === \"object\") {\n        const newProperties = {};\n        for (const [key, value2] of Object.entries(properties2))\n          newProperties[key] = _replaceSchemaType(\n            value2,\n            options,\n            {\n              ...config,\n              root: !1\n            }\n          );\n        return {\n          ...rest,\n          ...v,\n          properties: newProperties\n        };\n      }\n      if (items && v.type === \"array\")\n        return {\n          ...rest,\n          ...v,\n          items: _replaceSchemaType(items, options, {\n            ...config,\n            root: !1\n          })\n        };\n      const value = {\n        ...rest,\n        ...v\n      };\n      return delete value.required, properties2 && v.type === \"string\" && v.format === \"ObjectString\" && v.default === \"{}\" ? (transform = t.ObjectString(properties2, rest), value.properties = properties2) : items && v.type === \"string\" && v.format === \"ArrayString\" && v.default === \"[]\" && (transform = t.ArrayString(items, rest), value.items = items), value;\n    };\n    if (isRoot) {\n      if (properties2) {\n        const newProperties = {};\n        for (const [key, value] of Object.entries(properties2))\n          newProperties[key] = _replaceSchemaType(\n            value,\n            options,\n            {\n              ...config,\n              root: !1\n            }\n          );\n        return {\n          ...rest,\n          properties: newProperties\n        };\n      } else if (items?.map)\n        return {\n          ...rest,\n          items: items.map(\n            (v) => _replaceSchemaType(v, options, {\n              ...config,\n              root: !1\n            })\n          )\n        };\n      return rest;\n    }\n    if (to.anyOf)\n      for (let i = 0; i < to.anyOf.length; i++)\n        to.anyOf[i] = composeProperties(to.anyOf[i]);\n    else if (to.oneOf)\n      for (let i = 0; i < to.oneOf.length; i++)\n        to.oneOf[i] = composeProperties(to.oneOf[i]);\n    else if (to.allOf)\n      for (let i = 0; i < to.allOf.length; i++)\n        to.allOf[i] = composeProperties(to.allOf[i]);\n    else to.not && (to.not = composeProperties(to.not));\n    if (transform && (to[TransformKind] = transform[TransformKind]), to.anyOf || to.oneOf || to.allOf || to.not) return to;\n    if (properties2) {\n      const newProperties = {};\n      for (const [key, value] of Object.entries(properties2))\n        newProperties[key] = _replaceSchemaType(\n          value,\n          options,\n          {\n            ...config,\n            root: !1\n          }\n        );\n      return {\n        ...rest,\n        ...to,\n        properties: newProperties\n      };\n    } else if (items?.map)\n      return {\n        ...rest,\n        ...to,\n        items: items.map(\n          (v) => _replaceSchemaType(v, options, {\n            ...config,\n            root: !1\n          })\n        )\n      };\n    return {\n      ...rest,\n      ...to\n    };\n  }\n  const properties = schema?.properties;\n  if (properties && root && options.rootOnly !== !0)\n    for (const [key, value] of Object.entries(properties))\n      switch (value[Kind]) {\n        case fromSymbol:\n          const { anyOf, oneOf, allOf, not, type, ...rest } = value, to = options.to(rest);\n          if (!to) return schema;\n          if (to.anyOf)\n            for (let i = 0; i < to.anyOf.length; i++)\n              to.anyOf[i] = { ...rest, ...to.anyOf[i] };\n          else if (to.oneOf)\n            for (let i = 0; i < to.oneOf.length; i++)\n              to.oneOf[i] = { ...rest, ...to.oneOf[i] };\n          else if (to.allOf)\n            for (let i = 0; i < to.allOf.length; i++)\n              to.allOf[i] = { ...rest, ...to.allOf[i] };\n          else to.not && (to.not = { ...rest, ...to.not });\n          properties[key] = {\n            ...rest,\n            ..._replaceSchemaType(rest, options, {\n              ...config,\n              root: !1\n            })\n          };\n          break;\n        case \"Object\":\n        case \"Union\":\n          properties[key] = _replaceSchemaType(value, options, {\n            ...config,\n            root: !1\n          });\n          break;\n        default:\n          if (Array.isArray(value.items))\n            for (let i = 0; i < value.items.length; i++)\n              value.items[i] = _replaceSchemaType(\n                value.items[i],\n                options,\n                {\n                  ...config,\n                  root: !1\n                }\n              );\n          else value.anyOf || value.oneOf || value.allOf || value.not ? properties[key] = _replaceSchemaType(value, options, {\n            ...config,\n            root: !1\n          }) : value.type === \"array\" && (value.items = _replaceSchemaType(value.items, options, {\n            ...config,\n            root: !1\n          }));\n          break;\n      }\n  return schema.type === \"array\" && schema.items && (Array.isArray(schema.items) ? schema.items = schema.items.map(\n    (item) => _replaceSchemaType(item, options, {\n      ...config,\n      root: !1\n    })\n  ) : schema.items = _replaceSchemaType(schema.items, options, {\n    ...config,\n    root: !1\n  })), schema;\n}, createCleaner = (schema) => (value) => {\n  if (typeof value == \"object\")\n    try {\n      return Value.Clean(schema, value);\n    } catch {\n    }\n  return value;\n}, getSchemaValidator = (s, {\n  models = {},\n  dynamic = !1,\n  modules,\n  normalize = !1,\n  additionalProperties = !1,\n  forceAdditionalProperties = !1,\n  coerce = !1,\n  additionalCoerce = [],\n  validators,\n  sanitize\n} = {}) => {\n  if (validators = validators?.filter((x) => x), !s) {\n    if (!validators?.length) return;\n    s = validators[0], validators = validators.slice(1);\n  }\n  let doesHaveRef;\n  const replaceSchema = (schema2) => coerce ? replaceSchemaType(schema2, [\n    {\n      from: t.Number(),\n      to: (options) => t.Numeric(options),\n      untilObjectFound: !0\n    },\n    {\n      from: t.Boolean(),\n      to: (options) => t.BooleanString(options),\n      untilObjectFound: !0\n    },\n    ...Array.isArray(additionalCoerce) ? additionalCoerce : [additionalCoerce]\n  ]) : replaceSchemaType(schema2, additionalCoerce), mapSchema = (s2) => {\n    if (s2 && typeof s2 != \"string\" && \"~standard\" in s2)\n      return s2;\n    if (!s2) return;\n    let schema2;\n    if (typeof s2 != \"string\") schema2 = s2;\n    else if (schema2 = // @ts-expect-error private property\n    modules && s2 in modules.$defs ? modules.Import(s2) : models[s2], !schema2) return;\n    if (Kind in schema2)\n      if (schema2[Kind] === \"Import\")\n        hasRef(schema2.$defs[schema2.$ref]) || (schema2 = schema2.$defs[schema2.$ref], (coerce || additionalCoerce) && (schema2 = replaceSchema(schema2)));\n      else if (hasRef(schema2)) {\n        const id = randomId();\n        schema2 = t.Module({\n          // @ts-expect-error private property\n          ...modules?.$defs,\n          [id]: schema2\n        }).Import(id);\n      } else (coerce || additionalCoerce) && (schema2 = replaceSchema(schema2));\n    return schema2;\n  };\n  let schema = mapSchema(s), _validators = validators;\n  if (\"~standard\" in schema || validators?.length && validators.some(\n    (x) => x && typeof x != \"string\" && \"~standard\" in x\n  )) {\n    const typeboxSubValidator = (schema2) => {\n      let mirror;\n      if (normalize === !0 || normalize === \"exactMirror\")\n        try {\n          mirror = createMirror(schema2, {\n            TypeCompiler,\n            sanitize: sanitize?.(),\n            modules\n          });\n        } catch {\n          console.warn(\n            \"Failed to create exactMirror. Please report the following code to https://github.com/elysiajs/elysia/issues\"\n          ), console.warn(schema2), mirror = createCleaner(schema2);\n        }\n      const vali = getSchemaValidator(schema2, {\n        models,\n        modules,\n        dynamic,\n        normalize,\n        additionalProperties: !0,\n        forceAdditionalProperties: !0,\n        coerce,\n        additionalCoerce\n      });\n      return vali.Decode = mirror, (v) => vali.Check(v) ? {\n        value: vali.Decode(v)\n      } : {\n        issues: [...vali.Errors(v)]\n      };\n    }, mainCheck = schema[\"~standard\"] ? schema[\"~standard\"].validate : typeboxSubValidator(schema);\n    let checkers = [];\n    if (validators?.length) {\n      for (const validator2 of validators)\n        if (validator2 && typeof validator2 != \"string\") {\n          if (validator2?.[\"~standard\"]) {\n            checkers.push(validator2[\"~standard\"]);\n            continue;\n          }\n          if (Kind in validator2) {\n            checkers.push(typeboxSubValidator(validator2));\n            continue;\n          }\n        }\n    }\n    async function Check(value) {\n      let v = mainCheck(value);\n      if (v instanceof Promise && (v = await v), v.issues) return v;\n      const values = [];\n      v && typeof v == \"object\" && values.push(v.value);\n      for (let i = 0; i < checkers.length; i++) {\n        if (v = checkers[i].validate(value), v instanceof Promise && (v = await v), v.issues) return v;\n        v && typeof v == \"object\" && values.push(v.value);\n      }\n      if (!values.length) return { value: v };\n      if (values.length === 1) return { value: values[0] };\n      if (values.length === 2)\n        return { value: mergeDeep(values[0], values[1]) };\n      let newValue = mergeDeep(values[0], values[1]);\n      for (let i = 2; i < values.length; i++)\n        newValue = mergeDeep(newValue, values[i]);\n      return { value: newValue };\n    }\n    const validator = {\n      provider: \"standard\",\n      schema,\n      references: \"\",\n      checkFunc: () => {\n      },\n      code: \"\",\n      // @ts-ignore\n      Check,\n      // @ts-ignore\n      Errors: (value) => Check(value)?.then?.((x) => x?.issues),\n      Code: () => \"\",\n      // @ts-ignore\n      Decode: Check,\n      // @ts-ignore\n      Encode: (value) => value,\n      hasAdditionalProperties: !1,\n      hasDefault: !1,\n      isOptional: !1,\n      hasTransform: !1,\n      hasRef: !1\n    };\n    return validator.parse = (v) => {\n      try {\n        return validator.Decode(validator.Clean?.(v) ?? v);\n      } catch {\n        throw [...validator.Errors(v)].map(mapValueError);\n      }\n    }, validator.safeParse = (v) => {\n      try {\n        return {\n          success: !0,\n          data: validator.Decode(validator.Clean?.(v) ?? v),\n          error: null\n        };\n      } catch {\n        const errors = [...compiled.Errors(v)].map(mapValueError);\n        return {\n          success: !1,\n          data: null,\n          error: errors[0]?.summary,\n          errors\n        };\n      }\n    }, validator;\n  } else if (validators?.length) {\n    let hasAdditional = !1;\n    const validators2 = _validators, { schema: mergedObjectSchema, notObjects } = mergeObjectSchemas([\n      schema,\n      ...validators2.map(mapSchema)\n    ]);\n    notObjects && (schema = t.Intersect([\n      ...mergedObjectSchema ? [mergedObjectSchema] : [],\n      ...notObjects.map((x) => {\n        const schema2 = mapSchema(x);\n        return schema2.type === \"object\" && \"additionalProperties\" in schema2 && (!hasAdditional && schema2.additionalProperties === !1 && (hasAdditional = !0), delete schema2.additionalProperties), schema2;\n      })\n    ]), schema.type === \"object\" && hasAdditional && (schema.additionalProperties = !1));\n  } else\n    schema.type === \"object\" && (!(\"additionalProperties\" in schema) || forceAdditionalProperties) ? schema.additionalProperties = additionalProperties : schema = replaceSchemaType(schema, {\n      onlyFirst: \"object\",\n      from: t.Object({}),\n      // @ts-ignore\n      to({ properties, ...options }) {\n        if (properties && !(\"additionalProperties\" in schema))\n          return t.Object(properties, {\n            ...options,\n            additionalProperties: !1\n          });\n      }\n    });\n  if (dynamic)\n    if (Kind in schema) {\n      const validator = {\n        provider: \"typebox\",\n        schema,\n        references: \"\",\n        checkFunc: () => {\n        },\n        code: \"\",\n        // @ts-expect-error\n        Check: (value) => Value.Check(schema, value),\n        Errors: (value) => Value.Errors(schema, value),\n        Code: () => \"\",\n        Clean: createCleaner(schema),\n        Decode: (value) => Value.Decode(schema, value),\n        Encode: (value) => Value.Encode(schema, value),\n        get hasAdditionalProperties() {\n          return \"~hasAdditionalProperties\" in this ? this[\"~hasAdditionalProperties\"] : this[\"~hasAdditionalProperties\"] = hasAdditionalProperties(schema);\n        },\n        get hasDefault() {\n          return \"~hasDefault\" in this ? this[\"~hasDefault\"] : this[\"~hasDefault\"] = hasProperty(\n            \"default\",\n            schema\n          );\n        },\n        get isOptional() {\n          return \"~isOptional\" in this ? this[\"~isOptional\"] : this[\"~isOptional\"] = isOptional(schema);\n        },\n        get hasTransform() {\n          return \"~hasTransform\" in this ? this[\"~hasTransform\"] : this[\"~hasTransform\"] = hasTransform(schema);\n        },\n        \"~hasRef\": doesHaveRef,\n        get hasRef() {\n          return \"~hasRef\" in this ? this[\"~hasRef\"] : this[\"~hasRef\"] = hasTransform(schema);\n        }\n      };\n      if (schema.config && (validator.config = schema.config, validator?.schema?.config && delete validator.schema.config), normalize && schema.additionalProperties === !1)\n        if (normalize === !0 || normalize === \"exactMirror\")\n          try {\n            validator.Clean = createMirror(schema, {\n              TypeCompiler,\n              sanitize: sanitize?.(),\n              modules\n            });\n          } catch {\n            console.warn(\n              \"Failed to create exactMirror. Please report the following code to https://github.com/elysiajs/elysia/issues\"\n            ), console.warn(schema), validator.Clean = createCleaner(schema);\n          }\n        else validator.Clean = createCleaner(schema);\n      return validator.parse = (v) => {\n        try {\n          return validator.Decode(validator.Clean?.(v) ?? v);\n        } catch {\n          throw [...validator.Errors(v)].map(mapValueError);\n        }\n      }, validator.safeParse = (v) => {\n        try {\n          return {\n            success: !0,\n            data: validator.Decode(validator.Clean?.(v) ?? v),\n            error: null\n          };\n        } catch {\n          const errors = [...compiled.Errors(v)].map(mapValueError);\n          return {\n            success: !1,\n            data: null,\n            error: errors[0]?.summary,\n            errors\n          };\n        }\n      }, validator;\n    } else {\n      const validator = {\n        provider: \"standard\",\n        schema,\n        references: \"\",\n        checkFunc: () => {\n        },\n        code: \"\",\n        // @ts-ignore\n        Check: (v) => schema[\"~standard\"].validate(v),\n        // @ts-ignore\n        Errors(value) {\n          const response = schema[\"~standard\"].validate(value);\n          if (response instanceof Promise)\n            throw Error(\n              \"Async validation is not supported in non-dynamic schema\"\n            );\n          return response.issues;\n        },\n        Code: () => \"\",\n        // @ts-ignore\n        Decode(value) {\n          const response = schema[\"~standard\"].validate(value);\n          if (response instanceof Promise)\n            throw Error(\n              \"Async validation is not supported in non-dynamic schema\"\n            );\n          return response;\n        },\n        // @ts-ignore\n        Encode: (value) => value,\n        hasAdditionalProperties: !1,\n        hasDefault: !1,\n        isOptional: !1,\n        hasTransform: !1,\n        hasRef: !1\n      };\n      return validator.parse = (v) => {\n        try {\n          return validator.Decode(validator.Clean?.(v) ?? v);\n        } catch {\n          throw [...validator.Errors(v)].map(mapValueError);\n        }\n      }, validator.safeParse = (v) => {\n        try {\n          return {\n            success: !0,\n            data: validator.Decode(validator.Clean?.(v) ?? v),\n            error: null\n          };\n        } catch {\n          const errors = [...compiled.Errors(v)].map(mapValueError);\n          return {\n            success: !1,\n            data: null,\n            error: errors[0]?.summary,\n            errors\n          };\n        }\n      }, validator;\n    }\n  let compiled;\n  if (Kind in schema)\n    if (compiled = TypeCompiler.Compile(\n      schema,\n      Object.values(models).filter((x) => Kind in x)\n    ), compiled.provider = \"typebox\", schema.config && (compiled.config = schema.config, compiled?.schema?.config && delete compiled.schema.config), normalize === !0 || normalize === \"exactMirror\")\n      try {\n        compiled.Clean = createMirror(schema, {\n          TypeCompiler,\n          sanitize: sanitize?.(),\n          modules\n        });\n      } catch {\n        console.warn(\n          \"Failed to create exactMirror. Please report the following code to https://github.com/elysiajs/elysia/issues\"\n        ), console.dir(schema, {\n          depth: null\n        }), compiled.Clean = createCleaner(schema);\n      }\n    else normalize === \"typebox\" && (compiled.Clean = createCleaner(schema));\n  else\n    compiled = {\n      provider: \"standard\",\n      schema,\n      references: \"\",\n      checkFunc(value) {\n        const response = schema[\"~standard\"].validate(value);\n        if (response instanceof Promise)\n          throw Error(\n            \"Async validation is not supported in non-dynamic schema\"\n          );\n        return response;\n      },\n      code: \"\",\n      // @ts-ignore\n      Check: (v) => schema[\"~standard\"].validate(v),\n      // @ts-ignore\n      Errors(value) {\n        const response = schema[\"~standard\"].validate(value);\n        if (response instanceof Promise)\n          throw Error(\n            \"Async validation is not supported in non-dynamic schema\"\n          );\n        return response.issues;\n      },\n      Code: () => \"\",\n      // @ts-ignore\n      Decode(value) {\n        const response = schema[\"~standard\"].validate(value);\n        if (response instanceof Promise)\n          throw Error(\n            \"Async validation is not supported in non-dynamic schema\"\n          );\n        return response;\n      },\n      // @ts-ignore\n      Encode: (value) => value,\n      hasAdditionalProperties: !1,\n      hasDefault: !1,\n      isOptional: !1,\n      hasTransform: !1,\n      hasRef: !1\n    };\n  return compiled.parse = (v) => {\n    try {\n      return compiled.Decode(compiled.Clean?.(v) ?? v);\n    } catch {\n      throw [...compiled.Errors(v)].map(mapValueError);\n    }\n  }, compiled.safeParse = (v) => {\n    try {\n      return {\n        success: !0,\n        data: compiled.Decode(compiled.Clean?.(v) ?? v),\n        error: null\n      };\n    } catch {\n      const errors = [...compiled.Errors(v)].map(mapValueError);\n      return {\n        success: !1,\n        data: null,\n        error: errors[0]?.summary,\n        errors\n      };\n    }\n  }, Kind in schema && Object.assign(compiled, {\n    get hasAdditionalProperties() {\n      return \"~hasAdditionalProperties\" in this ? this[\"~hasAdditionalProperties\"] : this[\"~hasAdditionalProperties\"] = hasAdditionalProperties(compiled);\n    },\n    get hasDefault() {\n      return \"~hasDefault\" in this ? this[\"~hasDefault\"] : this[\"~hasDefault\"] = hasProperty(\"default\", compiled);\n    },\n    get isOptional() {\n      return \"~isOptional\" in this ? this[\"~isOptional\"] : this[\"~isOptional\"] = isOptional(compiled);\n    },\n    get hasTransform() {\n      return \"~hasTransform\" in this ? this[\"~hasTransform\"] : this[\"~hasTransform\"] = hasTransform(schema);\n    },\n    get hasRef() {\n      return \"~hasRef\" in this ? this[\"~hasRef\"] : this[\"~hasRef\"] = hasRef(schema);\n    },\n    \"~hasRef\": doesHaveRef\n  }), compiled;\n}, isUnion = (schema) => schema[Kind] === \"Union\" || !schema.schema && !!schema.anyOf, mergeObjectSchemas = (schemas) => {\n  if (schemas.length === 0)\n    return {\n      schema: void 0,\n      notObjects: []\n    };\n  if (schemas.length === 1)\n    return schemas[0].type === \"object\" ? {\n      schema: schemas[0],\n      notObjects: []\n    } : {\n      schema: void 0,\n      notObjects: schemas\n    };\n  let newSchema;\n  const notObjects = [];\n  let additionalPropertiesIsTrue = !1, additionalPropertiesIsFalse = !1;\n  for (const schema of schemas) {\n    if (schema.type !== \"object\") {\n      notObjects.push(schema);\n      continue;\n    }\n    if (\"additionalProperties\" in schema && (schema.additionalProperties === !0 ? additionalPropertiesIsTrue = !0 : schema.additionalProperties === !1 && (additionalPropertiesIsFalse = !0)), !newSchema) {\n      newSchema = schema;\n      continue;\n    }\n    newSchema = {\n      ...newSchema,\n      ...schema,\n      properties: {\n        ...newSchema.properties,\n        ...schema.properties\n      },\n      required: [...newSchema?.required ?? [], ...schema.required ?? []]\n    };\n  }\n  return newSchema && (newSchema.required && (newSchema.required = [...new Set(newSchema.required)]), additionalPropertiesIsFalse ? newSchema.additionalProperties = !1 : additionalPropertiesIsTrue && (newSchema.additionalProperties = !0)), {\n    schema: newSchema,\n    notObjects\n  };\n}, getResponseSchemaValidator = (s, {\n  models = {},\n  modules,\n  dynamic = !1,\n  normalize = !1,\n  additionalProperties = !1,\n  validators = [],\n  sanitize\n}) => {\n  if (validators = validators.filter((x) => x), !s) {\n    if (!validators?.length) return;\n    s = validators[0], validators = validators.slice(1);\n  }\n  let maybeSchemaOrRecord;\n  if (typeof s != \"string\") maybeSchemaOrRecord = s;\n  else if (maybeSchemaOrRecord = // @ts-expect-error private property\n  modules && s in modules.$defs ? modules.Import(s) : models[s], !maybeSchemaOrRecord) return;\n  if (!maybeSchemaOrRecord) return;\n  if (Kind in maybeSchemaOrRecord || \"~standard\" in maybeSchemaOrRecord)\n    return {\n      200: getSchemaValidator(\n        maybeSchemaOrRecord,\n        {\n          modules,\n          models,\n          additionalProperties,\n          dynamic,\n          normalize,\n          coerce: !1,\n          additionalCoerce: [],\n          validators: validators.map((x) => x[200]),\n          sanitize\n        }\n      )\n    };\n  const record = {};\n  return Object.keys(maybeSchemaOrRecord).forEach((status) => {\n    if (isNaN(+status)) return;\n    const maybeNameOrSchema = maybeSchemaOrRecord[+status];\n    if (typeof maybeNameOrSchema == \"string\") {\n      if (maybeNameOrSchema in models) {\n        const schema = models[maybeNameOrSchema];\n        if (!schema) return;\n        record[+status] = Kind in schema || \"~standard\" in schema ? getSchemaValidator(schema, {\n          modules,\n          models,\n          additionalProperties,\n          dynamic,\n          normalize,\n          coerce: !1,\n          additionalCoerce: [],\n          validators: validators.map((x) => x[+status]),\n          sanitize\n        }) : schema;\n      }\n      return;\n    }\n    record[+status] = Kind in maybeNameOrSchema || \"~standard\" in maybeNameOrSchema ? getSchemaValidator(maybeNameOrSchema, {\n      modules,\n      models,\n      additionalProperties,\n      dynamic,\n      normalize,\n      coerce: !1,\n      additionalCoerce: [],\n      validators: validators.map((x) => x[+status]),\n      sanitize\n    }) : maybeNameOrSchema;\n  }), record;\n};\nlet _stringToStructureCoercions;\nconst stringToStructureCoercions = () => (_stringToStructureCoercions || (_stringToStructureCoercions = [\n  {\n    from: t.Object({}),\n    to: () => t.ObjectString({}),\n    excludeRoot: !0\n  },\n  {\n    from: t.Array(t.Any()),\n    to: () => t.ArrayString(t.Any())\n  }\n]), _stringToStructureCoercions);\nlet _queryCoercions;\nconst queryCoercions = () => (_queryCoercions || (_queryCoercions = [\n  {\n    from: t.Object({}),\n    to: () => t.ObjectString({}),\n    excludeRoot: !0\n  },\n  {\n    from: t.Array(t.Any()),\n    to: () => t.ArrayQuery(t.Any())\n  }\n]), _queryCoercions);\nlet _coercePrimitiveRoot;\nconst coercePrimitiveRoot = () => (_coercePrimitiveRoot || (_coercePrimitiveRoot = [\n  {\n    from: t.Number(),\n    to: (options) => t.Numeric(options),\n    rootOnly: !0\n  },\n  {\n    from: t.Boolean(),\n    to: (options) => t.BooleanString(options),\n    rootOnly: !0\n  }\n]), _coercePrimitiveRoot), getCookieValidator = ({\n  validator,\n  modules,\n  defaultConfig = {},\n  config,\n  dynamic,\n  normalize = !1,\n  models,\n  validators,\n  sanitize\n}) => {\n  let cookieValidator = (\n    // @ts-ignore\n    validator?.provider ? validator : (\n      // @ts-ignore\n      getSchemaValidator(validator, {\n        modules,\n        dynamic,\n        models,\n        normalize,\n        additionalProperties: !0,\n        coerce: !0,\n        additionalCoerce: stringToStructureCoercions(),\n        validators,\n        sanitize\n      })\n    )\n  );\n  return cookieValidator ? cookieValidator.config = mergeCookie(cookieValidator.config, config) : (cookieValidator = getSchemaValidator(t.Cookie(t.Any()), {\n    modules,\n    dynamic,\n    models,\n    additionalProperties: !0,\n    validators,\n    sanitize\n  }), cookieValidator.config = defaultConfig), cookieValidator;\n}, unwrapImportSchema = (schema) => schema && schema[Kind] === \"Import\" && schema.$defs[schema.$ref][Kind] === \"Object\" ? schema.$defs[schema.$ref] : schema;\nexport {\n  coercePrimitiveRoot,\n  getCookieValidator,\n  getResponseSchemaValidator,\n  getSchemaValidator,\n  hasAdditionalProperties,\n  hasElysiaMeta,\n  hasProperty,\n  hasRef,\n  hasTransform,\n  hasType,\n  isOptional,\n  isUnion,\n  mergeObjectSchemas,\n  queryCoercions,\n  replaceSchemaType,\n  stringToStructureCoercions,\n  unwrapImportSchema\n};\n", "// src/index.ts\nimport { TypeCompiler } from \"@sinclair/typebox/compiler\";\nvar Kind = Symbol.for(\"TypeBox.Kind\");\nvar Hint = Symbol.for(\"TypeBox.Hint\");\nvar isSpecialProperty = (name) => /(\\ |-|\\t|\\n|\\.)/.test(name) || !isNaN(+name[0]);\nvar joinProperty = (v1, v2, isOptional = false) => {\n  if (typeof v2 === \"number\") return `${v1}[${v2}]`;\n  if (isSpecialProperty(v2)) return `${v1}${isOptional ? \"?.\" : \"\"}[\"${v2}\"]`;\n  return `${v1}${isOptional ? \"?\" : \"\"}.${v2}`;\n};\nvar encodeProperty = (v) => isSpecialProperty(v) ? `\"${v}\"` : v;\nvar sanitize = (key, sanitize2 = 0, schema) => {\n  if (schema.type !== \"string\" || schema.const || schema.trusted) return key;\n  let hof = \"\";\n  for (let i = sanitize2 - 1; i >= 0; i--) hof += `d.h${i}(`;\n  return hof + key + \")\".repeat(sanitize2);\n};\nvar mergeObjectIntersection = (schema) => {\n  if (!schema.allOf || Kind in schema && (schema[Kind] !== \"Intersect\" || schema.type !== \"object\"))\n    return schema;\n  const { allOf, ...newSchema } = schema;\n  newSchema.properties = {};\n  if (Kind in newSchema) newSchema[Kind] = \"Object\";\n  for (const type of allOf) {\n    if (type.type !== \"object\") continue;\n    const { properties, required, type: _, [Kind]: __, ...rest } = type;\n    if (required)\n      newSchema.required = newSchema.required ? newSchema.required.concat(required) : required;\n    Object.assign(newSchema, rest);\n    for (const property in type.properties)\n      newSchema.properties[property] = mergeObjectIntersection(\n        type.properties[property]\n      );\n  }\n  return newSchema;\n};\nvar handleRecord = (schema, property, instruction) => {\n  const child = schema.patternProperties[\"^(.*)$\"] ?? schema.patternProperties[Object.keys(schema.patternProperties)[0]];\n  if (!child) return property;\n  const i = instruction.array;\n  instruction.array++;\n  let v = `(()=>{const ar${i}s=Object.keys(${property}),ar${i}v={};for(let i=0;i<ar${i}s.length;i++){const ar${i}p=${property}[ar${i}s[i]];ar${i}v[ar${i}s[i]]=${mirror(child, `ar${i}p`, instruction)}`;\n  const optionals = instruction.optionalsInArray[i + 1];\n  if (optionals)\n    for (let oi = 0; oi < optionals.length; oi++) {\n      const target = `ar${i}v[ar${i}s[i]].${optionals[oi]}`;\n      v += `;if(${target}===undefined)delete ${target}`;\n    }\n  v += `}return ar${i}v})()`;\n  return v;\n};\nvar handleTuple = (schema, property, instruction) => {\n  const i = instruction.array;\n  instruction.array++;\n  const isRoot = property === \"v\" && !instruction.unions.length;\n  let v = \"\";\n  if (!isRoot) v = `(()=>{`;\n  v += `const ar${i}v=[`;\n  for (let i2 = 0; i2 < schema.length; i2++) {\n    if (i2 !== 0) v += \",\";\n    v += mirror(\n      schema[i2],\n      joinProperty(property, i2, instruction.parentIsOptional),\n      instruction\n    );\n  }\n  v += `];`;\n  if (!isRoot) v += `return ar${i}v})()`;\n  return v;\n};\nfunction deepClone(source, weak = /* @__PURE__ */ new WeakMap()) {\n  if (source === null || typeof source !== \"object\" || typeof source === \"function\")\n    return source;\n  if (weak.has(source)) return weak.get(source);\n  if (Array.isArray(source)) {\n    const copy = new Array(source.length);\n    weak.set(source, copy);\n    for (let i = 0; i < source.length; i++)\n      copy[i] = deepClone(source[i], weak);\n    return copy;\n  }\n  if (typeof source === \"object\") {\n    const keys = Object.keys(source).concat(\n      Object.getOwnPropertySymbols(source)\n    );\n    const cloned = {};\n    for (const key of keys)\n      cloned[key] = deepClone(source[key], weak);\n    return cloned;\n  }\n  return source;\n}\nvar handleUnion = (schemas, property, instruction) => {\n  if (instruction.TypeCompiler === void 0) {\n    if (!instruction.typeCompilerWanred) {\n      console.warn(\n        new Error(\n          \"[exact-mirror] TypeBox's TypeCompiler is required to use Union\"\n        )\n      );\n      instruction.typeCompilerWanred = true;\n    }\n    return property;\n  }\n  instruction.unionKeys[property] = 1;\n  const ui = instruction.unions.length;\n  const typeChecks = instruction.unions[ui] = [];\n  let v = `(()=>{\n`;\n  const unwrapRef = (type) => {\n    if (!(Kind in type) || !type.$ref) return type;\n    if (type[Kind] === \"This\") {\n      return deepClone(instruction.definitions[type.$ref]);\n    } else if (type[Kind] === \"Ref\") {\n      if (!instruction.modules)\n        console.warn(\n          new Error(\n            \"[exact-mirror] modules is required when using nested cyclic reference\"\n          )\n        );\n      else\n        return instruction.modules.Import(\n          type.$ref\n        );\n    }\n    return type;\n  };\n  for (let i = 0; i < schemas.length; i++) {\n    let type = unwrapRef(schemas[i]);\n    if (Array.isArray(type.anyOf))\n      for (let i2 = 0; i2 < type.anyOf.length; i2++)\n        type.anyOf[i2] = unwrapRef(type.anyOf[i2]);\n    else if (type.items) {\n      if (Array.isArray(type.items))\n        for (let i2 = 0; i2 < type.items.length; i2++)\n          type.items[i2] = unwrapRef(type.items[i2]);\n      else type.items = unwrapRef(type.items);\n    }\n    typeChecks.push(TypeCompiler.Compile(type));\n    v += `if(d.unions[${ui}][${i}].Check(${property})){return ${mirror(\n      type,\n      property,\n      {\n        ...instruction,\n        recursion: instruction.recursion + 1,\n        parentIsOptional: true\n      }\n    )}}\n`;\n  }\n  v += `return ${instruction.removeUnknownUnionType ? \"undefined\" : property}})()`;\n  return v;\n};\nvar mirror = (schema, property, instruction) => {\n  if (!schema) return \"\";\n  const isRoot = property === \"v\" && !instruction.unions.length;\n  if (Kind in schema && schema[Kind] === \"Import\" && schema.$ref in schema.$defs)\n    return mirror(schema.$defs[schema.$ref], property, {\n      ...instruction,\n      definitions: Object.assign(instruction.definitions, schema.$defs)\n    });\n  if (isRoot && schema.type !== \"object\" && schema.type !== \"array\" && !schema.anyOf)\n    return `return ${sanitize(\"v\", instruction.sanitize?.length, schema)}`;\n  if (instruction.recursion >= instruction.recursionLimit) return property;\n  let v = \"\";\n  if (schema.$id && Hint in schema)\n    instruction.definitions[schema.$id] = schema;\n  switch (schema.type) {\n    case \"object\":\n      if (schema[Kind] === \"Record\") {\n        v = handleRecord(schema, property, instruction);\n        break;\n      }\n      schema = mergeObjectIntersection(schema);\n      v += \"{\";\n      if (schema.additionalProperties) v += `...${property},`;\n      const keys = Object.keys(schema.properties);\n      for (let i2 = 0; i2 < keys.length; i2++) {\n        const key = keys[i2];\n        let isOptional = (\n          // all fields are optional\n          !schema.required || // field is explicitly required\n          schema.required && !schema.required.includes(key) || Array.isArray(schema.properties[key].anyOf)\n        );\n        const name = joinProperty(\n          property,\n          key,\n          instruction.parentIsOptional\n        );\n        if (isOptional) {\n          const index = instruction.array;\n          if (property.startsWith(\"ar\")) {\n            const refName = name.slice(name.indexOf(\".\") + 1);\n            const array = instruction.optionalsInArray;\n            if (array[index]) array[index].push(refName);\n            else array[index] = [refName];\n          } else {\n            instruction.optionals.push(name);\n          }\n        }\n        const child = schema.properties[key];\n        if (i2 !== 0) v += \",\";\n        v += `${encodeProperty(key)}:${isOptional ? `${name}===undefined?undefined:` : \"\"}${mirror(\n          child,\n          name,\n          {\n            ...instruction,\n            recursion: instruction.recursion + 1,\n            parentIsOptional: isOptional\n          }\n        )}`;\n      }\n      v += \"}\";\n      break;\n    case \"array\":\n      if (schema.items.type !== \"object\" && schema.items.type !== \"array\") {\n        if (Array.isArray(schema.items)) {\n          v = handleTuple(schema.items, property, instruction);\n          break;\n        } else if (isRoot) return \"return v\";\n        else if (Kind in schema.items && schema.items.$ref && (schema.items[Kind] === \"Ref\" || schema.items[Kind] === \"This\"))\n          v = mirror(\n            deepClone(instruction.definitions[schema.items.$ref]),\n            property,\n            {\n              ...instruction,\n              parentIsOptional: true,\n              recursion: instruction.recursion + 1\n            }\n          );\n        else {\n          v = property;\n          break;\n        }\n      }\n      const i = instruction.array;\n      instruction.array++;\n      let reference = property;\n      if (isRoot) v = `const ar${i}v=new Array(${property}.length);`;\n      else {\n        reference = `ar${i}s`;\n        v = `((${reference})=>{const ar${i}v=new Array(${reference}.length);`;\n      }\n      v += `for(let i=0;i<${reference}.length;i++){const ar${i}p=${reference}[i];ar${i}v[i]=${mirror(schema.items, `ar${i}p`, instruction)}`;\n      const optionals = instruction.optionalsInArray[i + 1];\n      if (optionals) {\n        for (let oi = 0; oi < optionals.length; oi++) {\n          const target = `ar${i}v[i].${optionals[oi]}`;\n          v += `;if(${target}===undefined)delete ${target}`;\n        }\n      }\n      v += `}`;\n      if (!isRoot) v += `return ar${i}v})(${property})`;\n      break;\n    default:\n      if (schema.$ref && schema.$ref in instruction.definitions)\n        return mirror(\n          instruction.definitions[schema.$ref],\n          property,\n          instruction\n        );\n      if (Array.isArray(schema.anyOf)) {\n        v = handleUnion(schema.anyOf, property, instruction);\n        break;\n      }\n      v = sanitize(property, instruction.sanitize?.length, schema);\n      break;\n  }\n  if (!isRoot) return v;\n  if (schema.type === \"array\") {\n    v = `${v}const x=ar0v;`;\n  } else {\n    v = `const x=${v}\n`;\n  }\n  for (let i = 0; i < instruction.optionals.length; i++) {\n    const key = instruction.optionals[i];\n    const prop = key.slice(1);\n    v += `if(${key}===undefined`;\n    if (instruction.unionKeys[key]) v += `||x${prop}===undefined`;\n    const shouldQuestion = prop.charCodeAt(0) !== 63 && schema.type !== \"array\";\n    v += `)delete x${shouldQuestion ? prop.charCodeAt(0) === 91 ? \"?.\" : \"?\" : \"\"}${prop}\n`;\n  }\n  return `${v}return x`;\n};\nvar createMirror = (schema, {\n  TypeCompiler: TypeCompiler2,\n  modules,\n  definitions,\n  sanitize: sanitize2,\n  recursionLimit = 8,\n  removeUnknownUnionType = false\n} = {}) => {\n  const unions = [];\n  if (typeof sanitize2 === \"function\") sanitize2 = [sanitize2];\n  const f = mirror(schema, \"v\", {\n    optionals: [],\n    optionalsInArray: [],\n    array: 0,\n    parentIsOptional: false,\n    unions,\n    unionKeys: {},\n    TypeCompiler: TypeCompiler2,\n    modules,\n    // @ts-ignore private property\n    definitions: definitions ?? modules?.$defs ?? {},\n    sanitize: sanitize2,\n    recursion: 0,\n    recursionLimit,\n    removeUnknownUnionType\n  });\n  if (!unions.length && !sanitize2?.length) return Function(\"v\", f);\n  let hof;\n  if (sanitize2?.length) {\n    hof = {};\n    for (let i = 0; i < sanitize2.length; i++) hof[`h${i}`] = sanitize2[i];\n  }\n  return Function(\n    \"d\",\n    `return function mirror(v){${f}}`\n  )({\n    unions,\n    ...hof\n  });\n};\nvar index_default = createMirror;\nexport {\n  createMirror,\n  deepClone,\n  index_default as default,\n  mergeObjectIntersection\n};\n", "import { isHTMLBundle } from \"./index.mjs\";\nimport { mapResponse } from \"./handler.mjs\";\nconst createNativeStaticHandler = (handle, hooks, set) => {\n  if (typeof handle == \"function\" || handle instanceof Blob) return;\n  if (isHTMLBundle(handle)) return () => handle;\n  const response = mapResponse(\n    handle,\n    set ?? {\n      headers: {}\n    }\n  );\n  if (!hooks.parse?.length && !hooks.transform?.length && !hooks.beforeHandle?.length && !hooks.afterHandle?.length)\n    return response instanceof Promise ? response.then((response2) => {\n      if (response2)\n        return response2.headers.has(\"content-type\") || response2.headers.append(\"content-type\", \"text/plain\"), response2.clone();\n    }) : (response.headers.has(\"content-type\") || response.headers.append(\"content-type\", \"text/plain\"), () => response.clone());\n};\nexport {\n  createNativeStaticHandler\n};\n", "import { isNumericString } from \"../utils.mjs\";\nimport { ValidationError } from \"../error.mjs\";\nconst websocket = {\n  open(ws) {\n    ws.data.open?.(ws);\n  },\n  message(ws, message) {\n    ws.data.message?.(ws, message);\n  },\n  drain(ws) {\n    ws.data.drain?.(ws);\n  },\n  close(ws, code, reason) {\n    ws.data.close?.(ws, code, reason);\n  }\n};\nclass ElysiaWS {\n  constructor(raw, data, body = void 0) {\n    this.raw = raw;\n    this.data = data;\n    this.body = body;\n    this.validator = raw.data?.validator, this.sendText = raw.sendText.bind(raw), this.sendBinary = raw.sendBinary.bind(raw), this.close = raw.close.bind(raw), this.terminate = raw.terminate.bind(raw), this.publishText = raw.publishText.bind(raw), this.publishBinary = raw.publishBinary.bind(raw), this.subscribe = raw.subscribe.bind(raw), this.unsubscribe = raw.unsubscribe.bind(raw), this.isSubscribed = raw.isSubscribed.bind(raw), this.cork = raw.cork.bind(raw), this.remoteAddress = raw.remoteAddress, this.binaryType = raw.binaryType, this.data = raw.data, this.send = this.send.bind(this), this.ping = this.ping.bind(this), this.pong = this.pong.bind(this), this.publish = this.publish.bind(this);\n  }\n  /**\n   * Sends a message to the client.\n   *\n   * @param data The data to send.\n   * @param compress Should the data be compressed? If the client does not support compression, this is ignored.\n   * @example\n   * ws.send(\"Hello!\");\n   * ws.send(\"Compress this.\", true);\n   * ws.send(new Uint8Array([1, 2, 3, 4]));\n   */\n  send(data, compress) {\n    return Buffer.isBuffer(data) ? this.raw.send(data, compress) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.send(data, compress));\n  }\n  /**\n   * Sends a ping.\n   *\n   * @param data The data to send\n   */\n  ping(data) {\n    return Buffer.isBuffer(data) ? this.raw.ping(data) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.ping(data));\n  }\n  /**\n   * Sends a pong.\n   *\n   * @param data The data to send\n   */\n  pong(data) {\n    return Buffer.isBuffer(data) ? this.raw.pong(data) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.pong(data));\n  }\n  /**\n   * Sends a message to subscribers of the topic.\n   *\n   * @param topic The topic name.\n   * @param data The data to send.\n   * @param compress Should the data be compressed? If the client does not support compression, this is ignored.\n   * @example\n   * ws.publish(\"chat\", \"Hello!\");\n   * ws.publish(\"chat\", \"Compress this.\", true);\n   * ws.publish(\"chat\", new Uint8Array([1, 2, 3, 4]));\n   */\n  publish(topic, data, compress) {\n    return Buffer.isBuffer(data) ? this.raw.publish(\n      topic,\n      data,\n      compress\n    ) : this.validator?.Check(data) === !1 ? this.raw.send(\n      new ValidationError(\"message\", this.validator, data).message\n    ) : (typeof data == \"object\" && (data = JSON.stringify(data)), this.raw.publish(topic, data, compress));\n  }\n  get readyState() {\n    return this.raw.readyState;\n  }\n  get id() {\n    return this.data.id;\n  }\n}\nconst createWSMessageParser = (parse) => {\n  const parsers = typeof parse == \"function\" ? [parse] : parse;\n  return async function(ws, message) {\n    if (typeof message == \"string\") {\n      const start = message?.charCodeAt(0);\n      if (start === 34 || start === 47 || start === 91 || start === 123)\n        try {\n          message = JSON.parse(message);\n        } catch {\n        }\n      else isNumericString(message) ? message = +message : message === \"true\" ? message = !0 : message === \"false\" ? message = !1 : message === \"null\" && (message = null);\n    }\n    if (parsers)\n      for (let i = 0; i < parsers.length; i++) {\n        let temp = parsers[i](ws, message);\n        if (temp instanceof Promise && (temp = await temp), temp !== void 0) return temp;\n      }\n    return message;\n  };\n}, createHandleWSResponse = (validateResponse) => {\n  const handleWSResponse = (ws, data) => {\n    if (data instanceof Promise)\n      return data.then((data2) => handleWSResponse(ws, data2));\n    if (Buffer.isBuffer(data)) return ws.send(data.toString());\n    if (data === void 0) return;\n    const send = (datum) => {\n      if (validateResponse?.Check(datum) === !1)\n        return ws.send(\n          new ValidationError(\"message\", validateResponse, datum).message\n        );\n      if (typeof datum == \"object\") return ws.send(JSON.stringify(datum));\n      ws.send(datum);\n    };\n    if (typeof data?.next != \"function\")\n      return void send(data);\n    const init = data.next();\n    if (init instanceof Promise)\n      return (async () => {\n        const first = await init;\n        if (validateResponse?.Check(first) === !1)\n          return ws.send(\n            new ValidationError(\"message\", validateResponse, first).message\n          );\n        if (send(first.value), !first.done)\n          for await (const datum of data) send(datum);\n      })();\n    if (send(init.value), !init.done) for (const datum of data) send(datum);\n  };\n  return handleWSResponse;\n};\nexport {\n  ElysiaWS,\n  createHandleWSResponse,\n  createWSMessageParser,\n  websocket\n};\n", "import { TransformDecodeError } from \"@sinclair/typebox/value\";\nimport {\n  ElysiaCustomStatusResponse,\n  status,\n  NotFoundError,\n  ValidationError\n} from \"./error.mjs\";\nimport { parseQuery } from \"./parse-query.mjs\";\nimport { redirect, signCookie, StatusMap } from \"./utils.mjs\";\nimport { parseCookie } from \"./cookies.mjs\";\nconst injectDefaultValues = (typeChecker, obj) => {\n  let schema = typeChecker.schema;\n  if (schema && (schema.$defs?.[schema.$ref] && (schema = schema.$defs[schema.$ref]), !!schema?.properties))\n    for (const [key, keySchema] of Object.entries(schema.properties))\n      obj[key] ??= keySchema.default;\n}, createDynamicHandler = (app) => {\n  const { mapResponse, mapEarlyResponse } = app[\"~adapter\"].handler, defaultHeader = app.setHeaders;\n  return async (request) => {\n    const url = request.url, s = url.indexOf(\"/\", 11), qi = url.indexOf(\"?\", s + 1), path = qi === -1 ? url.substring(s) : url.substring(s, qi), set = {\n      cookie: {},\n      status: 200,\n      headers: defaultHeader ? { ...defaultHeader } : {}\n    }, context = Object.assign(\n      {},\n      // @ts-expect-error\n      app.singleton.decorator,\n      {\n        set,\n        // @ts-expect-error\n        store: app.singleton.store,\n        request,\n        path,\n        qi,\n        error: status,\n        status,\n        redirect\n      }\n    );\n    try {\n      if (app.event.request)\n        for (let i = 0; i < app.event.request.length; i++) {\n          const onRequest = app.event.request[i].fn;\n          let response2 = onRequest(context);\n          if (response2 instanceof Promise && (response2 = await response2), response2 = mapEarlyResponse(response2, set), response2) return context.response = response2;\n        }\n      const methodKey = request.method === \"GET\" && request.headers.get(\"upgrade\")?.toLowerCase() === \"websocket\" ? \"WS\" : request.method, handler = app.router.dynamic.find(request.method, path) ?? app.router.dynamic.find(methodKey, path) ?? app.router.dynamic.find(\"ALL\", path);\n      if (!handler)\n        throw context.query = qi === -1 ? {} : parseQuery(url.substring(qi + 1)), new NotFoundError();\n      const { handle, hooks, validator, content, route } = handler.store;\n      let body;\n      if (request.method !== \"GET\" && request.method !== \"HEAD\")\n        if (content)\n          switch (content) {\n            case \"application/json\":\n              body = await request.json();\n              break;\n            case \"text/plain\":\n              body = await request.text();\n              break;\n            case \"application/x-www-form-urlencoded\":\n              body = parseQuery(await request.text());\n              break;\n            case \"application/octet-stream\":\n              body = await request.arrayBuffer();\n              break;\n            case \"multipart/form-data\":\n              body = {};\n              const form = await request.formData();\n              for (const key of form.keys()) {\n                if (body[key]) continue;\n                const value = form.getAll(key);\n                value.length === 1 ? body[key] = value[0] : body[key] = value;\n              }\n              break;\n          }\n        else {\n          let contentType;\n          if (request.body && (contentType = request.headers.get(\"content-type\")), contentType) {\n            const index = contentType.indexOf(\";\");\n            if (index !== -1 && (contentType = contentType.slice(0, index)), context.contentType = contentType, hooks.parse)\n              for (let i = 0; i < hooks.parse.length; i++) {\n                const hook = hooks.parse[i].fn;\n                if (typeof hook == \"string\")\n                  switch (hook) {\n                    case \"json\":\n                    case \"application/json\":\n                      body = await request.json();\n                      break;\n                    case \"text\":\n                    case \"text/plain\":\n                      body = await request.text();\n                      break;\n                    case \"urlencoded\":\n                    case \"application/x-www-form-urlencoded\":\n                      body = parseQuery(\n                        await request.text()\n                      );\n                      break;\n                    case \"arrayBuffer\":\n                    case \"application/octet-stream\":\n                      body = await request.arrayBuffer();\n                      break;\n                    case \"formdata\":\n                    case \"multipart/form-data\":\n                      body = {};\n                      const form = await request.formData();\n                      for (const key of form.keys()) {\n                        if (body[key]) continue;\n                        const value = form.getAll(key);\n                        value.length === 1 ? body[key] = value[0] : body[key] = value;\n                      }\n                      break;\n                    default:\n                      const parser = app[\"~parser\"][hook];\n                      if (parser) {\n                        let temp = parser(\n                          context,\n                          contentType\n                        );\n                        if (temp instanceof Promise && (temp = await temp), temp) {\n                          body = temp;\n                          break;\n                        }\n                      }\n                      break;\n                  }\n                else {\n                  let temp = hook(context, contentType);\n                  if (temp instanceof Promise && (temp = await temp), temp) {\n                    body = temp;\n                    break;\n                  }\n                }\n              }\n            if (delete context.contentType, body === void 0)\n              switch (contentType) {\n                case \"application/json\":\n                  body = await request.json();\n                  break;\n                case \"text/plain\":\n                  body = await request.text();\n                  break;\n                case \"application/x-www-form-urlencoded\":\n                  body = parseQuery(await request.text());\n                  break;\n                case \"application/octet-stream\":\n                  body = await request.arrayBuffer();\n                  break;\n                case \"multipart/form-data\":\n                  body = {};\n                  const form = await request.formData();\n                  for (const key of form.keys()) {\n                    if (body[key]) continue;\n                    const value = form.getAll(key);\n                    value.length === 1 ? body[key] = value[0] : body[key] = value;\n                  }\n                  break;\n              }\n          }\n        }\n      context.route = route, context.body = body, context.params = handler?.params || void 0, context.query = qi === -1 ? {} : parseQuery(url.substring(qi + 1)), context.headers = {};\n      for (const [key, value] of request.headers.entries())\n        context.headers[key] = value;\n      const cookieMeta = {\n        domain: app.config.cookie?.domain ?? // @ts-ignore\n        validator?.cookie?.config.domain,\n        expires: app.config.cookie?.expires ?? // @ts-ignore\n        validator?.cookie?.config.expires,\n        httpOnly: app.config.cookie?.httpOnly ?? // @ts-ignore\n        validator?.cookie?.config.httpOnly,\n        maxAge: app.config.cookie?.maxAge ?? // @ts-ignore\n        validator?.cookie?.config.maxAge,\n        // @ts-ignore\n        path: app.config.cookie?.path ?? validator?.cookie?.config.path,\n        priority: app.config.cookie?.priority ?? // @ts-ignore\n        validator?.cookie?.config.priority,\n        partitioned: app.config.cookie?.partitioned ?? // @ts-ignore\n        validator?.cookie?.config.partitioned,\n        sameSite: app.config.cookie?.sameSite ?? // @ts-ignore\n        validator?.cookie?.config.sameSite,\n        secure: app.config.cookie?.secure ?? // @ts-ignore\n        validator?.cookie?.config.secure,\n        secrets: app.config.cookie?.secrets ?? // @ts-ignore\n        validator?.cookie?.config.secrets,\n        // @ts-ignore\n        sign: app.config.cookie?.sign ?? validator?.cookie?.config.sign\n      }, cookieHeaderValue = request.headers.get(\"cookie\");\n      context.cookie = await parseCookie(\n        context.set,\n        cookieHeaderValue,\n        cookieMeta\n      );\n      const headerValidator = validator?.createHeaders?.();\n      headerValidator && injectDefaultValues(headerValidator, context.headers);\n      const paramsValidator = validator?.createParams?.();\n      paramsValidator && injectDefaultValues(paramsValidator, context.params);\n      const queryValidator = validator?.createQuery?.();\n      if (queryValidator && injectDefaultValues(queryValidator, context.query), hooks.transform)\n        for (let i = 0; i < hooks.transform.length; i++) {\n          const hook = hooks.transform[i];\n          let response2 = hook.fn(context);\n          if (response2 instanceof Promise && (response2 = await response2), response2 instanceof ElysiaCustomStatusResponse) {\n            const result = mapEarlyResponse(response2, context.set);\n            if (result)\n              return context.response = result;\n          }\n          hook.subType === \"derive\" && Object.assign(context, response2);\n        }\n      if (validator) {\n        if (headerValidator) {\n          const _header = structuredClone(context.headers);\n          for (const [key, value] of request.headers)\n            _header[key] = value;\n          if (validator.headers.Check(_header) === !1)\n            throw new ValidationError(\n              \"header\",\n              validator.headers,\n              _header\n            );\n        } else validator.headers?.Decode && (context.headers = validator.headers.Decode(context.headers));\n        if (paramsValidator?.Check(context.params) === !1)\n          throw new ValidationError(\n            \"params\",\n            validator.params,\n            context.params\n          );\n        if (validator.params?.Decode && (context.params = validator.params.Decode(context.params)), validator.query?.schema) {\n          let schema = validator.query.schema;\n          schema.$defs?.[schema.$ref] && (schema = schema.$defs[schema.$ref]);\n          const properties = schema.properties;\n          for (const property of Object.keys(properties)) {\n            const value = properties[property];\n            (value.type === \"array\" || value.items?.type === \"string\") && typeof context.query[property] == \"string\" && context.query[property] && (context.query[property] = context.query[property].split(\",\"));\n          }\n        }\n        if (queryValidator?.Check(context.query) === !1)\n          throw new ValidationError(\n            \"query\",\n            validator.query,\n            context.query\n          );\n        if (validator.query?.Decode && (context.query = validator.query.Decode(context.query)), validator.createCookie?.()) {\n          let cookieValue = {};\n          for (const [key, value] of Object.entries(context.cookie))\n            cookieValue[key] = value.value;\n          if (validator.cookie.Check(cookieValue) === !1)\n            throw new ValidationError(\n              \"cookie\",\n              validator.cookie,\n              cookieValue\n            );\n          validator.cookie?.Decode && (cookieValue = validator.cookie.Decode(\n            cookieValue\n          ));\n        }\n        if (validator.createBody?.()?.Check(body) === !1)\n          throw new ValidationError(\"body\", validator.body, body);\n        validator.body?.Decode && (context.body = validator.body.Decode(body));\n      }\n      if (hooks.beforeHandle)\n        for (let i = 0; i < hooks.beforeHandle.length; i++) {\n          const hook = hooks.beforeHandle[i];\n          let response2 = hook.fn(context);\n          if (response2 instanceof Promise && (response2 = await response2), response2 instanceof ElysiaCustomStatusResponse) {\n            const result = mapEarlyResponse(response2, context.set);\n            if (result)\n              return context.response = result;\n          }\n          if (hook.subType === \"resolve\") {\n            Object.assign(context, response2);\n            continue;\n          }\n          if (response2 !== void 0) {\n            if (context.response = response2, hooks.afterHandle)\n              for (let i2 = 0; i2 < hooks.afterHandle.length; i2++) {\n                let newResponse = hooks.afterHandle[i2].fn(\n                  context\n                );\n                newResponse instanceof Promise && (newResponse = await newResponse), newResponse && (response2 = newResponse);\n              }\n            const result = mapEarlyResponse(response2, context.set);\n            if (result) return context.response = result;\n          }\n        }\n      let response = typeof handle == \"function\" ? handle(context) : handle;\n      if (response instanceof Promise && (response = await response), hooks.afterHandle?.length) {\n        context.response = response;\n        for (let i = 0; i < hooks.afterHandle.length; i++) {\n          let response2 = hooks.afterHandle[i].fn(\n            context\n          );\n          response2 instanceof Promise && (response2 = await response2);\n          const isCustomStatuResponse = response2 instanceof ElysiaCustomStatusResponse, status2 = isCustomStatuResponse ? response2.code : set.status ? typeof set.status == \"string\" ? StatusMap[set.status] : set.status : 200;\n          isCustomStatuResponse && (set.status = status2, response2 = response2.response);\n          const responseValidator = validator?.createResponse?.()?.[status2];\n          if (responseValidator?.Check(response2) === !1)\n            if (responseValidator?.Clean) {\n              const temp = responseValidator.Clean(response2);\n              if (responseValidator?.Check(temp) === !1)\n                throw new ValidationError(\n                  \"response\",\n                  responseValidator,\n                  response2\n                );\n              response2 = temp;\n            } else\n              throw new ValidationError(\n                \"response\",\n                responseValidator,\n                response2\n              );\n          responseValidator?.Encode && (context.response = response2 = responseValidator.Encode(response2)), responseValidator?.Clean && (context.response = response2 = responseValidator.Clean(response2));\n          const result = mapEarlyResponse(response2, context.set);\n          if (result !== void 0) return context.response = result;\n        }\n      } else {\n        const isCustomStatuResponse = response instanceof ElysiaCustomStatusResponse, status2 = isCustomStatuResponse ? response.code : set.status ? typeof set.status == \"string\" ? StatusMap[set.status] : set.status : 200;\n        isCustomStatuResponse && (set.status = status2, response = response.response);\n        const responseValidator = validator?.createResponse?.()?.[status2];\n        if (responseValidator?.Check(response) === !1)\n          if (responseValidator?.Clean) {\n            const temp = responseValidator.Clean(response);\n            if (responseValidator?.Check(temp) === !1)\n              throw new ValidationError(\n                \"response\",\n                responseValidator,\n                response\n              );\n            response = temp;\n          } else\n            throw new ValidationError(\n              \"response\",\n              responseValidator,\n              response\n            );\n        responseValidator?.Encode && (response = responseValidator.Encode(response)), responseValidator?.Clean && (response = responseValidator.Clean(response));\n      }\n      if (context.set.cookie && cookieMeta?.sign) {\n        const secret = cookieMeta.secrets ? typeof cookieMeta.secrets == \"string\" ? cookieMeta.secrets : cookieMeta.secrets[0] : void 0;\n        if (cookieMeta.sign === !0) {\n          if (secret)\n            for (const [key, cookie] of Object.entries(\n              context.set.cookie\n            ))\n              context.set.cookie[key].value = await signCookie(\n                cookie.value,\n                secret\n              );\n        } else {\n          const properties = validator?.cookie?.schema?.properties;\n          if (secret)\n            for (const name of cookieMeta.sign)\n              name in properties && context.set.cookie[name]?.value && (context.set.cookie[name].value = await signCookie(\n                context.set.cookie[name].value,\n                secret\n              ));\n        }\n      }\n      return mapResponse(context.response = response, context.set);\n    } catch (error) {\n      const reportedError = error instanceof TransformDecodeError && error.error ? error.error : error;\n      return app.handleError(context, reportedError);\n    } finally {\n      app.event.afterResponse && setImmediate(async () => {\n        for (const afterResponse of app.event.afterResponse)\n          await afterResponse.fn(context);\n      });\n    }\n  };\n}, createDynamicErrorHandler = (app) => {\n  const { mapResponse } = app[\"~adapter\"].handler;\n  return async (context, error) => {\n    const errorContext = Object.assign(context, { error, code: error.code });\n    if (errorContext.set = context.set, app.event.error)\n      for (let i = 0; i < app.event.error.length; i++) {\n        let response = app.event.error[i].fn(errorContext);\n        if (response instanceof Promise && (response = await response), response != null)\n          return context.response = mapResponse(\n            response,\n            context.set\n          );\n      }\n    return new Response(\n      typeof error.cause == \"string\" ? error.cause : error.message,\n      {\n        headers: context.set.headers,\n        status: error.status ?? 500\n      }\n    );\n  };\n};\nexport {\n  createDynamicErrorHandler,\n  createDynamicHandler\n};\n", "import { nip19, SimplePool, type Event } from 'nostr-tools';\n\nconst RELAYS = [\n  'wss://yabu.me',\n  'wss://relay.damus.io',\n  'wss://relay.nostr.band'\n];\n\nexport interface NostrProfile {\n  name?: string;\n  display_name?: string;\n  about?: string;\n  picture?: string;\n  banner?: string;\n  nip05?: string;\n  lud16?: string;\n  website?: string;\n}\n\nexport interface Badge {\n  name?: string;\n  description?: string;\n  image?: string;\n  thumb?: string;\n}\n\nexport async function getProfileByNpub(npub: string): Promise<NostrProfile | null> {\n  try {\n    // npub\u3092hex\u306B\u5909\u63DB\n    const decoded = nip19.decode(npub);\n    if (decoded.type !== 'npub') {\n      throw new Error('Invalid npub format');\n    }\n    const pubkey = decoded.data;\n\n    // SimplePool\u3092\u4F7F\u3063\u3066\u30EA\u30EC\u30FC\u306B\u63A5\u7D9A\n    const pool = new SimplePool();\n\n    // kind0\u30A4\u30D9\u30F3\u30C8\u3092\u53D6\u5F97\uFF0810\u79D2\u30BF\u30A4\u30E0\u30A2\u30A6\u30C8\uFF09\n    const event = await Promise.race([\n      pool.get(RELAYS, {\n        kinds: [0],\n        authors: [pubkey],\n        limit: 1\n      }),\n      new Promise<null>((_, reject) =>\n        setTimeout(() => reject(new Error('Timeout')), 10000)\n      )\n    ]);\n\n    // \u30D7\u30FC\u30EB\u3092\u9589\u3058\u308B\n    pool.close(RELAYS);\n\n    if (!event) {\n      return null;\n    }\n\n    // content JSON\u3092\u30D1\u30FC\u30B9\n    const profile: NostrProfile = JSON.parse(event.content);\n    return profile;\n  } catch (error) {\n    console.error('Error fetching profile:', error);\n    return null;\n  }\n}\n\nexport async function getBadgesByNpub(npub: string): Promise<Badge[]> {\n  try {\n    // npub\u3092hex\u306B\u5909\u63DB\n    const decoded = nip19.decode(npub);\n    if (decoded.type !== 'npub') {\n      throw new Error('Invalid npub format');\n    }\n    const pubkey = decoded.data;\n\n    const pool = new SimplePool();\n\n    // kind 30008 (\u30D7\u30ED\u30D5\u30A3\u30FC\u30EB\u30D0\u30C3\u30B8) \u3092\u53D6\u5F97\n    const profileBadgesEvent = await Promise.race([\n      pool.get(RELAYS, {\n        kinds: [30008],\n        authors: [pubkey],\n        '#d': ['profile_badges']\n      }),\n      new Promise<null>((_, reject) =>\n        setTimeout(() => reject(new Error('Timeout')), 10000)\n      )\n    ]);\n\n    if (!profileBadgesEvent) {\n      pool.close(RELAYS);\n      return [];\n    }\n\n    // a\u30BF\u30B0\u3092\u89E3\u6790\u3057\u3066\u30D0\u30C3\u30B8\u5B9A\u7FA9\u306E\u53C2\u7167\u3092\u53D6\u5F97\n    const aTags = profileBadgesEvent.tags.filter(tag => tag[0] === 'a');\n\n    // \u6700\u59275\u3064\u307E\u3067\u53D6\u5F97\n    const badgeReferences = aTags.slice(0, 5);\n\n    if (badgeReferences.length === 0) {\n      pool.close(RELAYS);\n      return [];\n    }\n\n    // \u5404\u30D0\u30C3\u30B8\u5B9A\u7FA9\u3092\u53D6\u5F97\n    const badges: Badge[] = [];\n\n    for (const aTag of badgeReferences) {\n      const badgeAddress = aTag[1]; // format: kind:pubkey:d_tag\n      const parts = badgeAddress.split(':');\n\n      if (parts.length !== 3 || parts[0] !== '30009') {\n        continue;\n      }\n\n      const [, badgeAuthor, dTag] = parts;\n\n      // kind 30009 (\u30D0\u30C3\u30B8\u5B9A\u7FA9) \u3092\u53D6\u5F97\n      const badgeDefEvent = await Promise.race([\n        pool.get(RELAYS, {\n          kinds: [30009],\n          authors: [badgeAuthor],\n          '#d': [dTag]\n        }),\n        new Promise<null>((_, reject) =>\n          setTimeout(() => reject(new Error('Timeout')), 3000)\n        )\n      ]);\n\n      if (badgeDefEvent) {\n        const badge: Badge = {};\n\n        // \u30BF\u30B0\u304B\u3089\u60C5\u5831\u3092\u62BD\u51FA\n        for (const tag of badgeDefEvent.tags) {\n          if (tag[0] === 'name' && tag[1]) {\n            badge.name = tag[1];\n          } else if (tag[0] === 'description' && tag[1]) {\n            badge.description = tag[1];\n          } else if (tag[0] === 'image' && tag[1]) {\n            badge.image = tag[1];\n          } else if (tag[0] === 'thumb' && tag[1]) {\n            badge.thumb = tag[1];\n          }\n        }\n\n        badges.push(badge);\n      }\n    }\n\n    pool.close(RELAYS);\n    return badges;\n  } catch (error) {\n    console.error('Error fetching badges:', error);\n    return [];\n  }\n}\n", "var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pure.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex as bytesToHex2 } from \"@noble/hashes/utils\";\n\n// core.ts\nvar verifiedSymbol = Symbol(\"verified\");\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i2 = 0; i2 < event.tags.length; i2++) {\n    let tag = event.tags[i2];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] !== \"string\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction sortEvents(events) {\n  return events.sort((a, b) => {\n    if (a.created_at !== b.created_at) {\n      return b.created_at - a.created_at;\n    }\n    return a.id.localeCompare(b.id);\n  });\n}\n\n// pure.ts\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  Queue: () => Queue,\n  QueueNode: () => QueueNode,\n  binarySearch: () => binarySearch,\n  bytesToHex: () => bytesToHex,\n  hexToBytes: () => hexToBytes,\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nimport { bytesToHex, hexToBytes } from \"@noble/hashes/utils\";\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  try {\n    if (url.indexOf(\"://\") === -1)\n      url = \"wss://\" + url;\n    let p = new URL(url);\n    p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n    if (p.pathname.endsWith(\"/\"))\n      p.pathname = p.pathname.slice(0, -1);\n    if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n      p.port = \"\";\n    p.searchParams.sort();\n    p.hash = \"\";\n    return p.toString();\n  } catch (e) {\n    throw new Error(`Invalid URL: ${url}`);\n  }\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return b.created_at - event.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  const [idx, found] = binarySearch(sortedArray, (b) => {\n    if (event.id === b.id)\n      return 0;\n    if (event.created_at === b.created_at)\n      return -1;\n    return event.created_at - b.created_at;\n  });\n  if (!found) {\n    sortedArray.splice(idx, 0, event);\n  }\n  return sortedArray;\n}\nfunction binarySearch(arr, compare) {\n  let start = 0;\n  let end = arr.length - 1;\n  while (start <= end) {\n    const mid = Math.floor((start + end) / 2);\n    const cmp = compare(arr[mid]);\n    if (cmp === 0) {\n      return [mid, true];\n    }\n    if (cmp < 0) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return [start, false];\n}\nvar QueueNode = class {\n  value;\n  next = null;\n  prev = null;\n  constructor(message) {\n    this.value = message;\n  }\n};\nvar Queue = class {\n  first;\n  last;\n  constructor() {\n    this.first = null;\n    this.last = null;\n  }\n  enqueue(value) {\n    const newNode = new QueueNode(value);\n    if (!this.last) {\n      this.first = newNode;\n      this.last = newNode;\n    } else if (this.last === this.first) {\n      this.last = newNode;\n      this.last.prev = this.first;\n      this.first.next = newNode;\n    } else {\n      newNode.prev = this.last;\n      this.last.next = newNode;\n      this.last = newNode;\n    }\n    return true;\n  }\n  dequeue() {\n    if (!this.first)\n      return null;\n    if (this.first === this.last) {\n      const target2 = this.first;\n      this.first = null;\n      this.last = null;\n      return target2.value;\n    }\n    const target = this.first;\n    this.first = target.next;\n    if (this.first) {\n      this.first.prev = null;\n    }\n    return target.value;\n  }\n};\n\n// pure.ts\nvar JS = class {\n  generateSecretKey() {\n    return schnorr.utils.randomPrivateKey();\n  }\n  getPublicKey(secretKey) {\n    return bytesToHex2(schnorr.getPublicKey(secretKey));\n  }\n  finalizeEvent(t, secretKey) {\n    const event = t;\n    event.pubkey = bytesToHex2(schnorr.getPublicKey(secretKey));\n    event.id = getEventHash(event);\n    event.sig = bytesToHex2(schnorr.sign(getEventHash(event), secretKey));\n    event[verifiedSymbol] = true;\n    return event;\n  }\n  verifyEvent(event) {\n    if (typeof event[verifiedSymbol] === \"boolean\")\n      return event[verifiedSymbol];\n    const hash = getEventHash(event);\n    if (hash !== event.id) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n    try {\n      const valid = schnorr.verify(event.sig, hash, event.pubkey);\n      event[verifiedSymbol] = valid;\n      return valid;\n    } catch (err) {\n      event[verifiedSymbol] = false;\n      return false;\n    }\n  }\n};\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex2(eventHash);\n}\nvar i = new JS();\nvar generateSecretKey = i.generateSecretKey;\nvar getPublicKey = i.getPublicKey;\nvar finalizeEvent = i.finalizeEvent;\nvar verifyEvent = i.verifyEvent;\n\n// kinds.ts\nvar kinds_exports = {};\n__export(kinds_exports, {\n  Application: () => Application,\n  BadgeAward: () => BadgeAward,\n  BadgeDefinition: () => BadgeDefinition,\n  BlockedRelaysList: () => BlockedRelaysList,\n  BookmarkList: () => BookmarkList,\n  Bookmarksets: () => Bookmarksets,\n  Calendar: () => Calendar,\n  CalendarEventRSVP: () => CalendarEventRSVP,\n  ChannelCreation: () => ChannelCreation,\n  ChannelHideMessage: () => ChannelHideMessage,\n  ChannelMessage: () => ChannelMessage,\n  ChannelMetadata: () => ChannelMetadata,\n  ChannelMuteUser: () => ChannelMuteUser,\n  ClassifiedListing: () => ClassifiedListing,\n  ClientAuth: () => ClientAuth,\n  CommunitiesList: () => CommunitiesList,\n  CommunityDefinition: () => CommunityDefinition,\n  CommunityPostApproval: () => CommunityPostApproval,\n  Contacts: () => Contacts,\n  CreateOrUpdateProduct: () => CreateOrUpdateProduct,\n  CreateOrUpdateStall: () => CreateOrUpdateStall,\n  Curationsets: () => Curationsets,\n  Date: () => Date2,\n  DirectMessageRelaysList: () => DirectMessageRelaysList,\n  DraftClassifiedListing: () => DraftClassifiedListing,\n  DraftLong: () => DraftLong,\n  Emojisets: () => Emojisets,\n  EncryptedDirectMessage: () => EncryptedDirectMessage,\n  EventDeletion: () => EventDeletion,\n  FileMetadata: () => FileMetadata,\n  FileServerPreference: () => FileServerPreference,\n  Followsets: () => Followsets,\n  GenericRepost: () => GenericRepost,\n  Genericlists: () => Genericlists,\n  GiftWrap: () => GiftWrap,\n  HTTPAuth: () => HTTPAuth,\n  Handlerinformation: () => Handlerinformation,\n  Handlerrecommendation: () => Handlerrecommendation,\n  Highlights: () => Highlights,\n  InterestsList: () => InterestsList,\n  Interestsets: () => Interestsets,\n  JobFeedback: () => JobFeedback,\n  JobRequest: () => JobRequest,\n  JobResult: () => JobResult,\n  Label: () => Label,\n  LightningPubRPC: () => LightningPubRPC,\n  LiveChatMessage: () => LiveChatMessage,\n  LiveEvent: () => LiveEvent,\n  LongFormArticle: () => LongFormArticle,\n  Metadata: () => Metadata,\n  Mutelist: () => Mutelist,\n  NWCWalletInfo: () => NWCWalletInfo,\n  NWCWalletRequest: () => NWCWalletRequest,\n  NWCWalletResponse: () => NWCWalletResponse,\n  NostrConnect: () => NostrConnect,\n  OpenTimestamps: () => OpenTimestamps,\n  Pinlist: () => Pinlist,\n  PrivateDirectMessage: () => PrivateDirectMessage,\n  ProblemTracker: () => ProblemTracker,\n  ProfileBadges: () => ProfileBadges,\n  PublicChatsList: () => PublicChatsList,\n  Reaction: () => Reaction,\n  RecommendRelay: () => RecommendRelay,\n  RelayList: () => RelayList,\n  Relaysets: () => Relaysets,\n  Report: () => Report,\n  Reporting: () => Reporting,\n  Repost: () => Repost,\n  Seal: () => Seal,\n  SearchRelaysList: () => SearchRelaysList,\n  ShortTextNote: () => ShortTextNote,\n  Time: () => Time,\n  UserEmojiList: () => UserEmojiList,\n  UserStatuses: () => UserStatuses,\n  Zap: () => Zap,\n  ZapGoal: () => ZapGoal,\n  ZapRequest: () => ZapRequest,\n  classifyKind: () => classifyKind,\n  isAddressableKind: () => isAddressableKind,\n  isEphemeralKind: () => isEphemeralKind,\n  isKind: () => isKind,\n  isRegularKind: () => isRegularKind,\n  isReplaceableKind: () => isReplaceableKind\n});\nfunction isRegularKind(kind) {\n  return 1e3 <= kind && kind < 1e4 || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind);\n}\nfunction isReplaceableKind(kind) {\n  return [0, 3].includes(kind) || 1e4 <= kind && kind < 2e4;\n}\nfunction isEphemeralKind(kind) {\n  return 2e4 <= kind && kind < 3e4;\n}\nfunction isAddressableKind(kind) {\n  return 3e4 <= kind && kind < 4e4;\n}\nfunction classifyKind(kind) {\n  if (isRegularKind(kind))\n    return \"regular\";\n  if (isReplaceableKind(kind))\n    return \"replaceable\";\n  if (isEphemeralKind(kind))\n    return \"ephemeral\";\n  if (isAddressableKind(kind))\n    return \"parameterized\";\n  return \"unknown\";\n}\nfunction isKind(event, kind) {\n  const kindAsArray = kind instanceof Array ? kind : [kind];\n  return validateEvent(event) && kindAsArray.includes(event.kind) || false;\n}\nvar Metadata = 0;\nvar ShortTextNote = 1;\nvar RecommendRelay = 2;\nvar Contacts = 3;\nvar EncryptedDirectMessage = 4;\nvar EventDeletion = 5;\nvar Repost = 6;\nvar Reaction = 7;\nvar BadgeAward = 8;\nvar Seal = 13;\nvar PrivateDirectMessage = 14;\nvar GenericRepost = 16;\nvar ChannelCreation = 40;\nvar ChannelMetadata = 41;\nvar ChannelMessage = 42;\nvar ChannelHideMessage = 43;\nvar ChannelMuteUser = 44;\nvar OpenTimestamps = 1040;\nvar GiftWrap = 1059;\nvar FileMetadata = 1063;\nvar LiveChatMessage = 1311;\nvar ProblemTracker = 1971;\nvar Report = 1984;\nvar Reporting = 1984;\nvar Label = 1985;\nvar CommunityPostApproval = 4550;\nvar JobRequest = 5999;\nvar JobResult = 6999;\nvar JobFeedback = 7e3;\nvar ZapGoal = 9041;\nvar ZapRequest = 9734;\nvar Zap = 9735;\nvar Highlights = 9802;\nvar Mutelist = 1e4;\nvar Pinlist = 10001;\nvar RelayList = 10002;\nvar BookmarkList = 10003;\nvar CommunitiesList = 10004;\nvar PublicChatsList = 10005;\nvar BlockedRelaysList = 10006;\nvar SearchRelaysList = 10007;\nvar InterestsList = 10015;\nvar UserEmojiList = 10030;\nvar DirectMessageRelaysList = 10050;\nvar FileServerPreference = 10096;\nvar NWCWalletInfo = 13194;\nvar LightningPubRPC = 21e3;\nvar ClientAuth = 22242;\nvar NWCWalletRequest = 23194;\nvar NWCWalletResponse = 23195;\nvar NostrConnect = 24133;\nvar HTTPAuth = 27235;\nvar Followsets = 3e4;\nvar Genericlists = 30001;\nvar Relaysets = 30002;\nvar Bookmarksets = 30003;\nvar Curationsets = 30004;\nvar ProfileBadges = 30008;\nvar BadgeDefinition = 30009;\nvar Interestsets = 30015;\nvar CreateOrUpdateStall = 30017;\nvar CreateOrUpdateProduct = 30018;\nvar LongFormArticle = 30023;\nvar DraftLong = 30024;\nvar Emojisets = 30030;\nvar Application = 30078;\nvar LiveEvent = 30311;\nvar UserStatuses = 30315;\nvar ClassifiedListing = 30402;\nvar DraftClassifiedListing = 30403;\nvar Date2 = 31922;\nvar Time = 31923;\nvar Calendar = 31924;\nvar CalendarEventRSVP = 31925;\nvar Handlerrecommendation = 31989;\nvar Handlerinformation = 31990;\nvar CommunityDefinition = 34550;\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    return false;\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1) {\n    return false;\n  }\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    return false;\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at > filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    if (matchFilter(filters[i2], event)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction mergeFilters(...filters) {\n  let result = {};\n  for (let i2 = 0; i2 < filters.length; i2++) {\n    let filter = filters[i2];\n    Object.entries(filter).forEach(([property, values]) => {\n      if (property === \"kinds\" || property === \"ids\" || property === \"authors\" || property[0] === \"#\") {\n        result[property] = result[property] || [];\n        for (let v = 0; v < values.length; v++) {\n          let value = values[v];\n          if (!result[property].includes(value))\n            result[property].push(value);\n        }\n      }\n    });\n    if (filter.limit && (!result.limit || filter.limit > result.limit))\n      result.limit = filter.limit;\n    if (filter.until && (!result.until || filter.until > result.until))\n      result.until = filter.until;\n    if (filter.since && (!result.since || filter.since < result.since))\n      result.since = filter.since;\n  }\n  return result;\n}\nfunction getFilterLimit(filter) {\n  if (filter.ids && !filter.ids.length)\n    return 0;\n  if (filter.kinds && !filter.kinds.length)\n    return 0;\n  if (filter.authors && !filter.authors.length)\n    return 0;\n  for (const [key, value] of Object.entries(filter)) {\n    if (key[0] === \"#\" && Array.isArray(value) && !value.length)\n      return 0;\n  }\n  return Math.min(\n    Math.max(0, filter.limit ?? Infinity),\n    filter.ids?.length ?? Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isReplaceableKind(kind)) ? filter.authors.length * filter.kinds.length : Infinity,\n    filter.authors?.length && filter.kinds?.every((kind) => isAddressableKind(kind)) && filter[\"#d\"]?.length ? filter.authors.length * filter.kinds.length * filter[\"#d\"].length : Infinity\n  );\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  makeAuthEvent: () => makeAuthEvent\n});\nfunction makeAuthEvent(relayURL, challenge) {\n  return {\n    kind: ClientAuth,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relayURL],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n}\n\n// helpers.ts\nasync function yieldThread() {\n  return new Promise((resolve) => {\n    const ch = new MessageChannel();\n    const handler = () => {\n      ch.port1.removeEventListener(\"message\", handler);\n      resolve();\n    };\n    ch.port1.addEventListener(\"message\", handler);\n    ch.port2.postMessage(0);\n    ch.port1.start();\n  });\n}\nvar alwaysTrue = (t) => {\n  t[verifiedSymbol] = true;\n  return true;\n};\n\n// abstract-relay.ts\nvar SendingOnClosedConnection = class extends Error {\n  constructor(message, relay) {\n    super(`Tried to send message '${message} on a closed connection to ${relay}.`);\n    this.name = \"SendingOnClosedConnection\";\n  }\n};\nvar AbstractRelay = class {\n  url;\n  _connected = false;\n  onclose = null;\n  onnotice = (msg) => console.debug(`NOTICE from ${this.url}: ${msg}`);\n  baseEoseTimeout = 4400;\n  connectionTimeout = 4400;\n  publishTimeout = 4400;\n  pingFrequency = 2e4;\n  pingTimeout = 2e4;\n  openSubs = /* @__PURE__ */ new Map();\n  enablePing;\n  connectionTimeoutHandle;\n  connectionPromise;\n  openCountRequests = /* @__PURE__ */ new Map();\n  openEventPublishes = /* @__PURE__ */ new Map();\n  ws;\n  incomingMessageQueue = new Queue();\n  queueRunning = false;\n  challenge;\n  authPromise;\n  serial = 0;\n  verifyEvent;\n  _WebSocket;\n  constructor(url, opts) {\n    this.url = normalizeURL(url);\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation || WebSocket;\n    this.enablePing = opts.enablePing;\n  }\n  static async connect(url, opts) {\n    const relay = new AbstractRelay(url, opts);\n    await relay.connect();\n    return relay;\n  }\n  closeAllSubscriptions(reason) {\n    for (let [_, sub] of this.openSubs) {\n      sub.close(reason);\n    }\n    this.openSubs.clear();\n    for (let [_, ep] of this.openEventPublishes) {\n      ep.reject(new Error(reason));\n    }\n    this.openEventPublishes.clear();\n    for (let [_, cr] of this.openCountRequests) {\n      cr.reject(new Error(reason));\n    }\n    this.openCountRequests.clear();\n  }\n  get connected() {\n    return this._connected;\n  }\n  async connect() {\n    if (this.connectionPromise)\n      return this.connectionPromise;\n    this.challenge = void 0;\n    this.authPromise = void 0;\n    this.connectionPromise = new Promise((resolve, reject) => {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        reject(\"connection timed out\");\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection timed out\");\n      }, this.connectionTimeout);\n      try {\n        this.ws = new this._WebSocket(this.url);\n      } catch (err) {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(err);\n        return;\n      }\n      this.ws.onopen = () => {\n        clearTimeout(this.connectionTimeoutHandle);\n        this._connected = true;\n        if (this.enablePing) {\n          this.pingpong();\n        }\n        resolve();\n      };\n      this.ws.onerror = (ev) => {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(ev.message || \"websocket error\");\n        this._connected = false;\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection errored\");\n      };\n      this.ws.onclose = (ev) => {\n        clearTimeout(this.connectionTimeoutHandle);\n        reject(ev.message || \"websocket closed\");\n        this._connected = false;\n        this.connectionPromise = void 0;\n        this.onclose?.();\n        this.closeAllSubscriptions(\"relay connection closed\");\n      };\n      this.ws.onmessage = this._onmessage.bind(this);\n    });\n    return this.connectionPromise;\n  }\n  async waitForPingPong() {\n    return new Promise((res, err) => {\n      ;\n      this.ws && this.ws.on && this.ws.on(\"pong\", () => res(true)) || err(\"ws can't listen for pong\");\n      this.ws && this.ws.ping && this.ws.ping();\n    });\n  }\n  async waitForDummyReq() {\n    return new Promise((resolve, _) => {\n      const sub = this.subscribe([{ ids: [\"a\".repeat(64)] }], {\n        oneose: () => {\n          sub.close();\n          resolve(true);\n        },\n        eoseTimeout: this.pingTimeout + 1e3\n      });\n    });\n  }\n  async pingpong() {\n    if (this.ws?.readyState === 1) {\n      const result = await Promise.any([\n        this.ws && this.ws.ping && this.ws.on ? this.waitForPingPong() : this.waitForDummyReq(),\n        new Promise((res) => setTimeout(() => res(false), this.pingTimeout))\n      ]);\n      if (result) {\n        setTimeout(() => this.pingpong(), this.pingFrequency);\n      } else {\n        this.closeAllSubscriptions(\"pingpong timed out\");\n        this._connected = false;\n        this.onclose?.();\n        this.ws?.close();\n      }\n    }\n  }\n  async runQueue() {\n    this.queueRunning = true;\n    while (true) {\n      if (false === this.handleNext()) {\n        break;\n      }\n      await yieldThread();\n    }\n    this.queueRunning = false;\n  }\n  handleNext() {\n    const json = this.incomingMessageQueue.dequeue();\n    if (!json) {\n      return false;\n    }\n    const subid = getSubscriptionId(json);\n    if (subid) {\n      const so = this.openSubs.get(subid);\n      if (!so) {\n        return;\n      }\n      const id = getHex64(json, \"id\");\n      const alreadyHave = so.alreadyHaveEvent?.(id);\n      so.receivedEvent?.(this, id);\n      if (alreadyHave) {\n        return;\n      }\n    }\n    try {\n      let data = JSON.parse(json);\n      switch (data[0]) {\n        case \"EVENT\": {\n          const so = this.openSubs.get(data[1]);\n          const event = data[2];\n          if (this.verifyEvent(event) && matchFilters(so.filters, event)) {\n            so.onevent(event);\n          }\n          return;\n        }\n        case \"COUNT\": {\n          const id = data[1];\n          const payload = data[2];\n          const cr = this.openCountRequests.get(id);\n          if (cr) {\n            cr.resolve(payload.count);\n            this.openCountRequests.delete(id);\n          }\n          return;\n        }\n        case \"EOSE\": {\n          const so = this.openSubs.get(data[1]);\n          if (!so)\n            return;\n          so.receivedEose();\n          return;\n        }\n        case \"OK\": {\n          const id = data[1];\n          const ok = data[2];\n          const reason = data[3];\n          const ep = this.openEventPublishes.get(id);\n          if (ep) {\n            clearTimeout(ep.timeout);\n            if (ok)\n              ep.resolve(reason);\n            else\n              ep.reject(new Error(reason));\n            this.openEventPublishes.delete(id);\n          }\n          return;\n        }\n        case \"CLOSED\": {\n          const id = data[1];\n          const so = this.openSubs.get(id);\n          if (!so)\n            return;\n          so.closed = true;\n          so.close(data[2]);\n          return;\n        }\n        case \"NOTICE\":\n          this.onnotice(data[1]);\n          return;\n        case \"AUTH\": {\n          this.challenge = data[1];\n          return;\n        }\n      }\n    } catch (err) {\n      return;\n    }\n  }\n  async send(message) {\n    if (!this.connectionPromise)\n      throw new SendingOnClosedConnection(message, this.url);\n    this.connectionPromise.then(() => {\n      this.ws?.send(message);\n    });\n  }\n  async auth(signAuthEvent) {\n    const challenge = this.challenge;\n    if (!challenge)\n      throw new Error(\"can't perform auth, no challenge was received\");\n    if (this.authPromise)\n      return this.authPromise;\n    this.authPromise = new Promise(async (resolve, reject) => {\n      try {\n        let evt = await signAuthEvent(makeAuthEvent(this.url, challenge));\n        let timeout = setTimeout(() => {\n          let ep = this.openEventPublishes.get(evt.id);\n          if (ep) {\n            ep.reject(new Error(\"auth timed out\"));\n            this.openEventPublishes.delete(evt.id);\n          }\n        }, this.publishTimeout);\n        this.openEventPublishes.set(evt.id, { resolve, reject, timeout });\n        this.send('[\"AUTH\",' + JSON.stringify(evt) + \"]\");\n      } catch (err) {\n        console.warn(\"subscribe auth function failed:\", err);\n      }\n    });\n    return this.authPromise;\n  }\n  async publish(event) {\n    const ret = new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        const ep = this.openEventPublishes.get(event.id);\n        if (ep) {\n          ep.reject(new Error(\"publish timed out\"));\n          this.openEventPublishes.delete(event.id);\n        }\n      }, this.publishTimeout);\n      this.openEventPublishes.set(event.id, { resolve, reject, timeout });\n    });\n    this.send('[\"EVENT\",' + JSON.stringify(event) + \"]\");\n    return ret;\n  }\n  async count(filters, params) {\n    this.serial++;\n    const id = params?.id || \"count:\" + this.serial;\n    const ret = new Promise((resolve, reject) => {\n      this.openCountRequests.set(id, { resolve, reject });\n    });\n    this.send('[\"COUNT\",\"' + id + '\",' + JSON.stringify(filters).substring(1));\n    return ret;\n  }\n  subscribe(filters, params) {\n    const subscription = this.prepareSubscription(filters, params);\n    subscription.fire();\n    return subscription;\n  }\n  prepareSubscription(filters, params) {\n    this.serial++;\n    const id = params.id || (params.label ? params.label + \":\" : \"sub:\") + this.serial;\n    const subscription = new Subscription(this, id, filters, params);\n    this.openSubs.set(id, subscription);\n    return subscription;\n  }\n  close() {\n    this.closeAllSubscriptions(\"relay connection closed by us\");\n    this._connected = false;\n    this.onclose?.();\n    this.ws?.close();\n  }\n  _onmessage(ev) {\n    this.incomingMessageQueue.enqueue(ev.data);\n    if (!this.queueRunning) {\n      this.runQueue();\n    }\n  }\n};\nvar Subscription = class {\n  relay;\n  id;\n  closed = false;\n  eosed = false;\n  filters;\n  alreadyHaveEvent;\n  receivedEvent;\n  onevent;\n  oneose;\n  onclose;\n  eoseTimeout;\n  eoseTimeoutHandle;\n  constructor(relay, id, filters, params) {\n    this.relay = relay;\n    this.filters = filters;\n    this.id = id;\n    this.alreadyHaveEvent = params.alreadyHaveEvent;\n    this.receivedEvent = params.receivedEvent;\n    this.eoseTimeout = params.eoseTimeout || relay.baseEoseTimeout;\n    this.oneose = params.oneose;\n    this.onclose = params.onclose;\n    this.onevent = params.onevent || ((event) => {\n      console.warn(\n        `onevent() callback not defined for subscription '${this.id}' in relay ${this.relay.url}. event received:`,\n        event\n      );\n    });\n  }\n  fire() {\n    this.relay.send('[\"REQ\",\"' + this.id + '\",' + JSON.stringify(this.filters).substring(1));\n    this.eoseTimeoutHandle = setTimeout(this.receivedEose.bind(this), this.eoseTimeout);\n  }\n  receivedEose() {\n    if (this.eosed)\n      return;\n    clearTimeout(this.eoseTimeoutHandle);\n    this.eosed = true;\n    this.oneose?.();\n  }\n  close(reason = \"closed by caller\") {\n    if (!this.closed && this.relay.connected) {\n      try {\n        this.relay.send('[\"CLOSE\",' + JSON.stringify(this.id) + \"]\");\n      } catch (err) {\n        if (err instanceof SendingOnClosedConnection) {\n        } else {\n          throw err;\n        }\n      }\n      this.closed = true;\n    }\n    this.relay.openSubs.delete(this.id);\n    this.onclose?.(reason);\n  }\n};\n\n// relay.ts\nvar _WebSocket;\ntry {\n  _WebSocket = WebSocket;\n} catch {\n}\nvar Relay = class extends AbstractRelay {\n  constructor(url) {\n    super(url, { verifyEvent, websocketImplementation: _WebSocket });\n  }\n  static async connect(url) {\n    const relay = new Relay(url);\n    await relay.connect();\n    return relay;\n  }\n};\n\n// abstract-pool.ts\nvar AbstractSimplePool = class {\n  relays = /* @__PURE__ */ new Map();\n  seenOn = /* @__PURE__ */ new Map();\n  trackRelays = false;\n  verifyEvent;\n  enablePing;\n  trustedRelayURLs = /* @__PURE__ */ new Set();\n  _WebSocket;\n  constructor(opts) {\n    this.verifyEvent = opts.verifyEvent;\n    this._WebSocket = opts.websocketImplementation;\n    this.enablePing = opts.enablePing;\n  }\n  async ensureRelay(url, params) {\n    url = normalizeURL(url);\n    let relay = this.relays.get(url);\n    if (!relay) {\n      relay = new AbstractRelay(url, {\n        verifyEvent: this.trustedRelayURLs.has(url) ? alwaysTrue : this.verifyEvent,\n        websocketImplementation: this._WebSocket,\n        enablePing: this.enablePing\n      });\n      relay.onclose = () => {\n        this.relays.delete(url);\n      };\n      if (params?.connectionTimeout)\n        relay.connectionTimeout = params.connectionTimeout;\n      this.relays.set(url, relay);\n    }\n    await relay.connect();\n    return relay;\n  }\n  close(relays) {\n    relays.map(normalizeURL).forEach((url) => {\n      this.relays.get(url)?.close();\n      this.relays.delete(url);\n    });\n  }\n  subscribe(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    const request = [];\n    for (let i2 = 0; i2 < relays.length; i2++) {\n      const url = normalizeURL(relays[i2]);\n      if (!request.find((r) => r.url === url)) {\n        request.push({ url, filter });\n      }\n    }\n    return this.subscribeMap(request, params);\n  }\n  subscribeMany(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    const request = [];\n    const uniqUrls = [];\n    for (let i2 = 0; i2 < relays.length; i2++) {\n      const url = normalizeURL(relays[i2]);\n      if (uniqUrls.indexOf(url) === -1) {\n        uniqUrls.push(url);\n        request.push({ url, filter });\n      }\n    }\n    return this.subscribeMap(request, params);\n  }\n  subscribeMap(requests, params) {\n    params.onauth = params.onauth || params.doauth;\n    const grouped = /* @__PURE__ */ new Map();\n    for (const req of requests) {\n      const { url, filter } = req;\n      if (!grouped.has(url))\n        grouped.set(url, []);\n      grouped.get(url).push(filter);\n    }\n    const groupedRequests = Array.from(grouped.entries()).map(([url, filters]) => ({ url, filters }));\n    if (this.trackRelays) {\n      params.receivedEvent = (relay, id) => {\n        let set = this.seenOn.get(id);\n        if (!set) {\n          set = /* @__PURE__ */ new Set();\n          this.seenOn.set(id, set);\n        }\n        set.add(relay);\n      };\n    }\n    const _knownIds = /* @__PURE__ */ new Set();\n    const subs = [];\n    const eosesReceived = [];\n    let handleEose = (i2) => {\n      if (eosesReceived[i2])\n        return;\n      eosesReceived[i2] = true;\n      if (eosesReceived.filter((a) => a).length === requests.length) {\n        params.oneose?.();\n        handleEose = () => {\n        };\n      }\n    };\n    const closesReceived = [];\n    let handleClose = (i2, reason) => {\n      if (closesReceived[i2])\n        return;\n      handleEose(i2);\n      closesReceived[i2] = reason;\n      if (closesReceived.filter((a) => a).length === requests.length) {\n        params.onclose?.(closesReceived);\n        handleClose = () => {\n        };\n      }\n    };\n    const localAlreadyHaveEventHandler = (id) => {\n      if (params.alreadyHaveEvent?.(id)) {\n        return true;\n      }\n      const have = _knownIds.has(id);\n      _knownIds.add(id);\n      return have;\n    };\n    const allOpened = Promise.all(\n      groupedRequests.map(async ({ url, filters }, i2) => {\n        let relay;\n        try {\n          relay = await this.ensureRelay(url, {\n            connectionTimeout: params.maxWait ? Math.max(params.maxWait * 0.8, params.maxWait - 1e3) : void 0\n          });\n        } catch (err) {\n          handleClose(i2, err?.message || String(err));\n          return;\n        }\n        let subscription = relay.subscribe(filters, {\n          ...params,\n          oneose: () => handleEose(i2),\n          onclose: (reason) => {\n            if (reason.startsWith(\"auth-required: \") && params.onauth) {\n              relay.auth(params.onauth).then(() => {\n                relay.subscribe(filters, {\n                  ...params,\n                  oneose: () => handleEose(i2),\n                  onclose: (reason2) => {\n                    handleClose(i2, reason2);\n                  },\n                  alreadyHaveEvent: localAlreadyHaveEventHandler,\n                  eoseTimeout: params.maxWait\n                });\n              }).catch((err) => {\n                handleClose(i2, `auth was required and attempted, but failed with: ${err}`);\n              });\n            } else {\n              handleClose(i2, reason);\n            }\n          },\n          alreadyHaveEvent: localAlreadyHaveEventHandler,\n          eoseTimeout: params.maxWait\n        });\n        subs.push(subscription);\n      })\n    );\n    return {\n      async close(reason) {\n        await allOpened;\n        subs.forEach((sub) => {\n          sub.close(reason);\n        });\n      }\n    };\n  }\n  subscribeEose(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    const subcloser = this.subscribe(relays, filter, {\n      ...params,\n      oneose() {\n        subcloser.close(\"closed automatically on eose\");\n      }\n    });\n    return subcloser;\n  }\n  subscribeManyEose(relays, filter, params) {\n    params.onauth = params.onauth || params.doauth;\n    const subcloser = this.subscribeMany(relays, filter, {\n      ...params,\n      oneose() {\n        subcloser.close(\"closed automatically on eose\");\n      }\n    });\n    return subcloser;\n  }\n  async querySync(relays, filter, params) {\n    return new Promise(async (resolve) => {\n      const events = [];\n      this.subscribeEose(relays, filter, {\n        ...params,\n        onevent(event) {\n          events.push(event);\n        },\n        onclose(_) {\n          resolve(events);\n        }\n      });\n    });\n  }\n  async get(relays, filter, params) {\n    filter.limit = 1;\n    const events = await this.querySync(relays, filter, params);\n    events.sort((a, b) => b.created_at - a.created_at);\n    return events[0] || null;\n  }\n  publish(relays, event, options) {\n    return relays.map(normalizeURL).map(async (url, i2, arr) => {\n      if (arr.indexOf(url) !== i2) {\n        return Promise.reject(\"duplicate url\");\n      }\n      let r = await this.ensureRelay(url);\n      return r.publish(event).catch(async (err) => {\n        if (err instanceof Error && err.message.startsWith(\"auth-required: \") && options?.onauth) {\n          await r.auth(options.onauth);\n          return r.publish(event);\n        }\n        throw err;\n      }).then((reason) => {\n        if (this.trackRelays) {\n          let set = this.seenOn.get(event.id);\n          if (!set) {\n            set = /* @__PURE__ */ new Set();\n            this.seenOn.set(event.id, set);\n          }\n          set.add(r);\n        }\n        return reason;\n      });\n    });\n  }\n  listConnectionStatus() {\n    const map = /* @__PURE__ */ new Map();\n    this.relays.forEach((relay, url) => map.set(url, relay.connected));\n    return map;\n  }\n  destroy() {\n    this.relays.forEach((conn) => conn.close());\n    this.relays = /* @__PURE__ */ new Map();\n  }\n};\n\n// pool.ts\nvar _WebSocket2;\ntry {\n  _WebSocket2 = WebSocket;\n} catch {\n}\nvar SimplePool = class extends AbstractSimplePool {\n  constructor(options) {\n    super({ verifyEvent, websocketImplementation: _WebSocket2, ...options });\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  Bech32MaxSize: () => Bech32MaxSize,\n  NostrTypeGuard: () => NostrTypeGuard,\n  decode: () => decode,\n  decodeNostrURI: () => decodeNostrURI,\n  encodeBytes: () => encodeBytes,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex3, concatBytes, hexToBytes as hexToBytes2 } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar NostrTypeGuard = {\n  isNProfile: (value) => /^nprofile1[a-z\\d]+$/.test(value || \"\"),\n  isNEvent: (value) => /^nevent1[a-z\\d]+$/.test(value || \"\"),\n  isNAddr: (value) => /^naddr1[a-z\\d]+$/.test(value || \"\"),\n  isNSec: (value) => /^nsec1[a-z\\d]{58}$/.test(value || \"\"),\n  isNPub: (value) => /^npub1[a-z\\d]{58}$/.test(value || \"\"),\n  isNote: (value) => /^note1[a-z\\d]+$/.test(value || \"\"),\n  isNcryptsec: (value) => /^ncryptsec1[a-z\\d]+$/.test(value || \"\")\n};\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction integerToUint8Array(number) {\n  const uint8Array = new Uint8Array(4);\n  uint8Array[0] = number >> 24 & 255;\n  uint8Array[1] = number >> 16 & 255;\n  uint8Array[2] = number >> 8 & 255;\n  uint8Array[3] = number & 255;\n  return uint8Array;\n}\nfunction decodeNostrURI(nip19code) {\n  try {\n    if (nip19code.startsWith(\"nostr:\"))\n      nip19code = nip19code.substring(6);\n    return decode(nip19code);\n  } catch (_err) {\n    return { type: \"invalid\", data: null };\n  }\n}\nfunction decode(code) {\n  let { prefix, words } = bech32.decode(code, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (tlv[3] && tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex3(tlv[2][0]) : void 0,\n          kind: tlv[3]?.[0] ? parseInt(bytesToHex3(tlv[3][0]), 16) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex3(tlv[2][0]),\n          kind: parseInt(bytesToHex3(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nsec\":\n      return { type: prefix, data };\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex3(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      throw new Error(`not enough data to read on TLV ${t}`);\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(key) {\n  return encodeBytes(\"nsec\", key);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hexToBytes2(hex));\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hexToBytes2(hex));\n}\nfunction encodeBech32(prefix, data) {\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction encodeBytes(prefix, bytes) {\n  return encodeBech32(prefix, bytes);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes2(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  return encodeBech32(\"nprofile\", data);\n}\nfunction neventEncode(event) {\n  let kindArray;\n  if (event.kind !== void 0) {\n    kindArray = integerToUint8Array(event.kind);\n  }\n  let data = encodeTLV({\n    0: [hexToBytes2(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes2(event.author)] : [],\n    3: kindArray ? [new Uint8Array(kindArray)] : []\n  });\n  return encodeBech32(\"nevent\", data);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes2(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  return encodeBech32(\"naddr\", data);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).reverse().forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { bytesToHex as bytesToHex4, randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { cbc } from \"@noble/ciphers/aes\";\nimport { base64 } from \"@scure/base\";\nfunction encrypt(secretKey, pubkey, text) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex4(secretKey) : secretKey;\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let ciphertext = cbc(normalizedKey, iv).encrypt(plaintext);\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nfunction decrypt(secretKey, pubkey, data) {\n  const privkey = secretKey instanceof Uint8Array ? bytesToHex4(secretKey) : secretKey;\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let iv = base64.decode(ivb64);\n  let ciphertext = base64.decode(ctb64);\n  let plaintext = cbc(normalizedKey, iv).decrypt(ciphertext);\n  return utf8Decoder.decode(plaintext);\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  isNip05: () => isNip05,\n  isValid: () => isValid,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w_-]+(\\.[\\w_-]+)+)$/;\nvar isNip05 = (value) => NIP05_REGEX.test(value || \"\");\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch (_) {\n  null;\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${query}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    return json.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [, name = \"_\", domain] = match;\n  try {\n    const url = `https://${domain}/.well-known/nostr.json?name=${name}`;\n    const res = await _fetch(url, { redirect: \"manual\" });\n    if (res.status !== 200) {\n      throw Error(\"Wrong response code\");\n    }\n    const json = await res.json();\n    const pubkey = json.names[name];\n    return pubkey ? { pubkey, relays: json.relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nasync function isValid(pubkey, nip05) {\n  const res = await queryProfile(nip05);\n  return res ? res.pubkey === pubkey : false;\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: [],\n    quotes: []\n  };\n  let maybeParent;\n  let maybeRoot;\n  for (let i2 = event.tags.length - 1; i2 >= 0; i2--) {\n    const tag = event.tags[i2];\n    if (tag[0] === \"e\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl, eTagMarker, eTagAuthor] = tag;\n      const eventPointer = {\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : [],\n        author: eTagAuthor\n      };\n      if (eTagMarker === \"root\") {\n        result.root = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"reply\") {\n        result.reply = eventPointer;\n        continue;\n      }\n      if (eTagMarker === \"mention\") {\n        result.mentions.push(eventPointer);\n        continue;\n      }\n      if (!maybeParent) {\n        maybeParent = eventPointer;\n      } else {\n        maybeRoot = eventPointer;\n      }\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (tag[0] === \"q\" && tag[1]) {\n      const [_, eTagEventId, eTagRelayUrl] = tag;\n      result.quotes.push({\n        id: eTagEventId,\n        relays: eTagRelayUrl ? [eTagRelayUrl] : []\n      });\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n      continue;\n    }\n  }\n  if (!result.root) {\n    result.root = maybeRoot || maybeParent || result.reply;\n  }\n  if (!result.reply) {\n    result.reply = maybeParent || result.root;\n  }\n  ;\n  [result.reply, result.root].forEach((ref) => {\n    if (!ref)\n      return;\n    let idx = result.mentions.indexOf(ref);\n    if (idx !== -1) {\n      result.mentions.splice(idx, 1);\n    }\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays?.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  result.mentions.forEach((ref) => {\n    if (ref.author) {\n      let author = result.profiles.find((p) => p.pubkey === ref.author);\n      if (author && author.relays) {\n        if (!ref.relays) {\n          ref.relays = [];\n        }\n        author.relays.forEach((url) => {\n          if (ref.relays.indexOf(url) === -1)\n            ref.relays.push(url);\n        });\n        author.relays = ref.relays;\n      }\n    }\n  });\n  return result;\n}\n\n// nip11.ts\nvar nip11_exports = {};\n__export(nip11_exports, {\n  fetchRelayInformation: () => fetchRelayInformation,\n  useFetchImplementation: () => useFetchImplementation2\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function fetchRelayInformation(url) {\n  return await (await fetch(url.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\"), {\n    headers: { Accept: \"application/nostr+json\" }\n  })).json();\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  fastEventHash: () => fastEventHash,\n  getPow: () => getPow,\n  minePow: () => minePow\n});\nimport { bytesToHex as bytesToHex5 } from \"@noble/hashes/utils\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction getPow(hex) {\n  let count = 0;\n  for (let i2 = 0; i2 < 64; i2 += 8) {\n    const nibble = parseInt(hex.substring(i2, i2 + 8), 16);\n    if (nibble === 0) {\n      count += 32;\n    } else {\n      count += Math.clz32(nibble);\n      break;\n    }\n  }\n  return count;\n}\nfunction minePow(unsigned, difficulty) {\n  let count = 0;\n  const event = unsigned;\n  const tag = [\"nonce\", count.toString(), difficulty.toString()];\n  event.tags.push(tag);\n  while (true) {\n    const now2 = Math.floor(new Date().getTime() / 1e3);\n    if (now2 !== event.created_at) {\n      count = 0;\n      event.created_at = now2;\n    }\n    tag[1] = (++count).toString();\n    event.id = fastEventHash(event);\n    if (getPow(event.id) >= difficulty) {\n      break;\n    }\n  }\n  return event;\n}\nfunction fastEventHash(evt) {\n  return bytesToHex5(\n    sha2562(utf8Encoder.encode(JSON.stringify([0, evt.pubkey, evt.created_at, evt.kind, evt.tags, evt.content])))\n  );\n}\n\n// nip17.ts\nvar nip17_exports = {};\n__export(nip17_exports, {\n  unwrapEvent: () => unwrapEvent2,\n  unwrapManyEvents: () => unwrapManyEvents2,\n  wrapEvent: () => wrapEvent2,\n  wrapManyEvents: () => wrapManyEvents2\n});\n\n// nip59.ts\nvar nip59_exports = {};\n__export(nip59_exports, {\n  createRumor: () => createRumor,\n  createSeal: () => createSeal,\n  createWrap: () => createWrap,\n  unwrapEvent: () => unwrapEvent,\n  unwrapManyEvents: () => unwrapManyEvents,\n  wrapEvent: () => wrapEvent,\n  wrapManyEvents: () => wrapManyEvents\n});\n\n// nip44.ts\nvar nip44_exports = {};\n__export(nip44_exports, {\n  decrypt: () => decrypt2,\n  encrypt: () => encrypt2,\n  getConversationKey: () => getConversationKey,\n  v2: () => v2\n});\nimport { chacha20 } from \"@noble/ciphers/chacha\";\nimport { equalBytes } from \"@noble/ciphers/utils\";\nimport { secp256k1 as secp256k12 } from \"@noble/curves/secp256k1\";\nimport { extract as hkdf_extract, expand as hkdf_expand } from \"@noble/hashes/hkdf\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nimport { concatBytes as concatBytes2, randomBytes as randomBytes2 } from \"@noble/hashes/utils\";\nimport { base64 as base642 } from \"@scure/base\";\nvar minPlaintextSize = 1;\nvar maxPlaintextSize = 65535;\nfunction getConversationKey(privkeyA, pubkeyB) {\n  const sharedX = secp256k12.getSharedSecret(privkeyA, \"02\" + pubkeyB).subarray(1, 33);\n  return hkdf_extract(sha2563, sharedX, \"nip44-v2\");\n}\nfunction getMessageKeys(conversationKey, nonce) {\n  const keys = hkdf_expand(sha2563, conversationKey, nonce, 76);\n  return {\n    chacha_key: keys.subarray(0, 32),\n    chacha_nonce: keys.subarray(32, 44),\n    hmac_key: keys.subarray(44, 76)\n  };\n}\nfunction calcPaddedLen(len) {\n  if (!Number.isSafeInteger(len) || len < 1)\n    throw new Error(\"expected positive integer\");\n  if (len <= 32)\n    return 32;\n  const nextPower = 1 << Math.floor(Math.log2(len - 1)) + 1;\n  const chunk = nextPower <= 256 ? 32 : nextPower / 8;\n  return chunk * (Math.floor((len - 1) / chunk) + 1);\n}\nfunction writeU16BE(num) {\n  if (!Number.isSafeInteger(num) || num < minPlaintextSize || num > maxPlaintextSize)\n    throw new Error(\"invalid plaintext size: must be between 1 and 65535 bytes\");\n  const arr = new Uint8Array(2);\n  new DataView(arr.buffer).setUint16(0, num, false);\n  return arr;\n}\nfunction pad(plaintext) {\n  const unpadded = utf8Encoder.encode(plaintext);\n  const unpaddedLen = unpadded.length;\n  const prefix = writeU16BE(unpaddedLen);\n  const suffix = new Uint8Array(calcPaddedLen(unpaddedLen) - unpaddedLen);\n  return concatBytes2(prefix, unpadded, suffix);\n}\nfunction unpad(padded) {\n  const unpaddedLen = new DataView(padded.buffer).getUint16(0);\n  const unpadded = padded.subarray(2, 2 + unpaddedLen);\n  if (unpaddedLen < minPlaintextSize || unpaddedLen > maxPlaintextSize || unpadded.length !== unpaddedLen || padded.length !== 2 + calcPaddedLen(unpaddedLen))\n    throw new Error(\"invalid padding\");\n  return utf8Decoder.decode(unpadded);\n}\nfunction hmacAad(key, message, aad) {\n  if (aad.length !== 32)\n    throw new Error(\"AAD associated data must be 32 bytes\");\n  const combined = concatBytes2(aad, message);\n  return hmac(sha2563, key, combined);\n}\nfunction decodePayload(payload) {\n  if (typeof payload !== \"string\")\n    throw new Error(\"payload must be a valid string\");\n  const plen = payload.length;\n  if (plen < 132 || plen > 87472)\n    throw new Error(\"invalid payload length: \" + plen);\n  if (payload[0] === \"#\")\n    throw new Error(\"unknown encryption version\");\n  let data;\n  try {\n    data = base642.decode(payload);\n  } catch (error) {\n    throw new Error(\"invalid base64: \" + error.message);\n  }\n  const dlen = data.length;\n  if (dlen < 99 || dlen > 65603)\n    throw new Error(\"invalid data length: \" + dlen);\n  const vers = data[0];\n  if (vers !== 2)\n    throw new Error(\"unknown encryption version \" + vers);\n  return {\n    nonce: data.subarray(1, 33),\n    ciphertext: data.subarray(33, -32),\n    mac: data.subarray(-32)\n  };\n}\nfunction encrypt2(plaintext, conversationKey, nonce = randomBytes2(32)) {\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const padded = pad(plaintext);\n  const ciphertext = chacha20(chacha_key, chacha_nonce, padded);\n  const mac = hmacAad(hmac_key, ciphertext, nonce);\n  return base642.encode(concatBytes2(new Uint8Array([2]), nonce, ciphertext, mac));\n}\nfunction decrypt2(payload, conversationKey) {\n  const { nonce, ciphertext, mac } = decodePayload(payload);\n  const { chacha_key, chacha_nonce, hmac_key } = getMessageKeys(conversationKey, nonce);\n  const calculatedMac = hmacAad(hmac_key, ciphertext, nonce);\n  if (!equalBytes(calculatedMac, mac))\n    throw new Error(\"invalid MAC\");\n  const padded = chacha20(chacha_key, chacha_nonce, ciphertext);\n  return unpad(padded);\n}\nvar v2 = {\n  utils: {\n    getConversationKey,\n    calcPaddedLen\n  },\n  encrypt: encrypt2,\n  decrypt: decrypt2\n};\n\n// nip59.ts\nvar TWO_DAYS = 2 * 24 * 60 * 60;\nvar now = () => Math.round(Date.now() / 1e3);\nvar randomNow = () => Math.round(now() - Math.random() * TWO_DAYS);\nvar nip44ConversationKey = (privateKey, publicKey) => getConversationKey(privateKey, publicKey);\nvar nip44Encrypt = (data, privateKey, publicKey) => encrypt2(JSON.stringify(data), nip44ConversationKey(privateKey, publicKey));\nvar nip44Decrypt = (data, privateKey) => JSON.parse(decrypt2(data.content, nip44ConversationKey(privateKey, data.pubkey)));\nfunction createRumor(event, privateKey) {\n  const rumor = {\n    created_at: now(),\n    content: \"\",\n    tags: [],\n    ...event,\n    pubkey: getPublicKey(privateKey)\n  };\n  rumor.id = getEventHash(rumor);\n  return rumor;\n}\nfunction createSeal(rumor, privateKey, recipientPublicKey) {\n  return finalizeEvent(\n    {\n      kind: Seal,\n      content: nip44Encrypt(rumor, privateKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: []\n    },\n    privateKey\n  );\n}\nfunction createWrap(seal, recipientPublicKey) {\n  const randomKey = generateSecretKey();\n  return finalizeEvent(\n    {\n      kind: GiftWrap,\n      content: nip44Encrypt(seal, randomKey, recipientPublicKey),\n      created_at: randomNow(),\n      tags: [[\"p\", recipientPublicKey]]\n    },\n    randomKey\n  );\n}\nfunction wrapEvent(event, senderPrivateKey, recipientPublicKey) {\n  const rumor = createRumor(event, senderPrivateKey);\n  const seal = createSeal(rumor, senderPrivateKey, recipientPublicKey);\n  return createWrap(seal, recipientPublicKey);\n}\nfunction wrapManyEvents(event, senderPrivateKey, recipientsPublicKeys) {\n  if (!recipientsPublicKeys || recipientsPublicKeys.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  const wrappeds = [wrapEvent(event, senderPrivateKey, senderPublicKey)];\n  recipientsPublicKeys.forEach((recipientPublicKey) => {\n    wrappeds.push(wrapEvent(event, senderPrivateKey, recipientPublicKey));\n  });\n  return wrappeds;\n}\nfunction unwrapEvent(wrap, recipientPrivateKey) {\n  const unwrappedSeal = nip44Decrypt(wrap, recipientPrivateKey);\n  return nip44Decrypt(unwrappedSeal, recipientPrivateKey);\n}\nfunction unwrapManyEvents(wrappedEvents, recipientPrivateKey) {\n  let unwrappedEvents = [];\n  wrappedEvents.forEach((e) => {\n    unwrappedEvents.push(unwrapEvent(e, recipientPrivateKey));\n  });\n  unwrappedEvents.sort((a, b) => a.created_at - b.created_at);\n  return unwrappedEvents;\n}\n\n// nip17.ts\nfunction createEvent(recipients, message, conversationTitle, replyTo) {\n  const baseEvent = {\n    created_at: Math.ceil(Date.now() / 1e3),\n    kind: PrivateDirectMessage,\n    tags: [],\n    content: message\n  };\n  const recipientsArray = Array.isArray(recipients) ? recipients : [recipients];\n  recipientsArray.forEach(({ publicKey, relayUrl }) => {\n    baseEvent.tags.push(relayUrl ? [\"p\", publicKey, relayUrl] : [\"p\", publicKey]);\n  });\n  if (replyTo) {\n    baseEvent.tags.push([\"e\", replyTo.eventId, replyTo.relayUrl || \"\", \"reply\"]);\n  }\n  if (conversationTitle) {\n    baseEvent.tags.push([\"subject\", conversationTitle]);\n  }\n  return baseEvent;\n}\nfunction wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo) {\n  const event = createEvent(recipient, message, conversationTitle, replyTo);\n  return wrapEvent(event, senderPrivateKey, recipient.publicKey);\n}\nfunction wrapManyEvents2(senderPrivateKey, recipients, message, conversationTitle, replyTo) {\n  if (!recipients || recipients.length === 0) {\n    throw new Error(\"At least one recipient is required.\");\n  }\n  const senderPublicKey = getPublicKey(senderPrivateKey);\n  return [{ publicKey: senderPublicKey }, ...recipients].map(\n    (recipient) => wrapEvent2(senderPrivateKey, recipient, message, conversationTitle, replyTo)\n  );\n}\nvar unwrapEvent2 = unwrapEvent;\nvar unwrapManyEvents2 = unwrapManyEvents;\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  let kind;\n  const tags = [...t.tags ?? [], [\"e\", reposted.id, relayUrl], [\"p\", reposted.pubkey]];\n  if (reposted.kind === ShortTextNote) {\n    kind = Repost;\n  } else {\n    kind = GenericRepost;\n    tags.push([\"k\", String(reposted.kind)]);\n  }\n  return finalizeEvent(\n    {\n      kind,\n      tags,\n      content: t.content === \"\" || reposted.tags?.find((tag) => tag[0] === \"-\") ? \"\" : JSON.stringify(reposted),\n      created_at: t.created_at\n    },\n    privateKey\n  );\n}\nfunction getRepostedEventPointer(event) {\n  if (![Repost, GenericRepost].includes(event.kind)) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifyEvent(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter((tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\"));\n  return finalizeEvent(\n    {\n      ...t,\n      kind: Reaction,\n      tags: [...t.tags ?? [], ...inheritedTags, [\"e\", reacted.id], [\"p\", reacted.pubkey]],\n      content: t.content ?? \"+\"\n    },\n    privateKey\n  );\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== Reaction) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i2 = event.tags.length - 1; i2 >= 0 && (lastETag === void 0 || lastPTag === void 0); i2--) {\n    const tag = event.tags[i2];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  parse: () => parse3\n});\nvar noCharacter = /\\W/m;\nvar noURLCharacter = /\\W |\\W$|$|,| /m;\nfunction* parse3(content) {\n  const max = content.length;\n  let prevIndex = 0;\n  let index = 0;\n  while (index < max) {\n    let u = content.indexOf(\":\", index);\n    if (u === -1) {\n      break;\n    }\n    if (content.substring(u - 5, u) === \"nostr\") {\n      const m = content.substring(u + 60).match(noCharacter);\n      const end = m ? u + 60 + m.index : max;\n      try {\n        let pointer;\n        let { data, type } = decode(content.substring(u + 1, end));\n        switch (type) {\n          case \"npub\":\n            pointer = { pubkey: data };\n            break;\n          case \"nsec\":\n          case \"note\":\n            index = end + 1;\n            continue;\n          default:\n            pointer = data;\n        }\n        if (prevIndex !== u - 5) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - 5) };\n        }\n        yield { type: \"reference\", pointer };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = u + 1;\n        continue;\n      }\n    } else if (content.substring(u - 5, u) === \"https\" || content.substring(u - 4, u) === \"http\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 5 : 4;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        if (/\\.(png|jpe?g|gif|webp)$/i.test(url.pathname)) {\n          yield { type: \"image\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (/\\.(mp4|avi|webm|mkv)$/i.test(url.pathname)) {\n          yield { type: \"video\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        if (/\\.(mp3|aac|ogg|opus)$/i.test(url.pathname)) {\n          yield { type: \"audio\", url: url.toString() };\n          index = end;\n          prevIndex = index;\n          continue;\n        }\n        yield { type: \"url\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else if (content.substring(u - 3, u) === \"wss\" || content.substring(u - 2, u) === \"ws\") {\n      const m = content.substring(u + 4).match(noURLCharacter);\n      const end = m ? u + 4 + m.index : max;\n      const prefixLen = content[u - 1] === \"s\" ? 3 : 2;\n      try {\n        let url = new URL(content.substring(u - prefixLen, end));\n        if (url.hostname.indexOf(\".\") === -1) {\n          throw new Error(\"invalid ws url\");\n        }\n        if (prevIndex !== u - prefixLen) {\n          yield { type: \"text\", text: content.substring(prevIndex, u - prefixLen) };\n        }\n        yield { type: \"relay\", url: url.toString() };\n        index = end;\n        prevIndex = index;\n        continue;\n      } catch (_err) {\n        index = end + 1;\n        continue;\n      }\n    } else {\n      index = u + 1;\n      continue;\n    }\n  }\n  if (prevIndex !== max) {\n    yield { type: \"text\", text: content.substring(prevIndex) };\n  }\n}\n\n// nip28.ts\nvar nip28_exports = {};\n__export(nip28_exports, {\n  channelCreateEvent: () => channelCreateEvent,\n  channelHideMessageEvent: () => channelHideMessageEvent,\n  channelMessageEvent: () => channelMessageEvent,\n  channelMetadataEvent: () => channelMetadataEvent,\n  channelMuteUserEvent: () => channelMuteUserEvent\n});\nvar channelCreateEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelCreation,\n      tags: [...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMetadataEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMetadata,\n      tags: [[\"e\", t.channel_create_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMessageEvent = (t, privateKey) => {\n  const tags = [[\"e\", t.channel_create_event_id, t.relay_url, \"root\"]];\n  if (t.reply_to_channel_message_event_id) {\n    tags.push([\"e\", t.reply_to_channel_message_event_id, t.relay_url, \"reply\"]);\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMessage,\n      tags: [...tags, ...t.tags ?? []],\n      content: t.content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelHideMessageEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelHideMessage,\n      tags: [[\"e\", t.channel_message_event_id], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\nvar channelMuteUserEvent = (t, privateKey) => {\n  let content;\n  if (typeof t.content === \"object\") {\n    content = JSON.stringify(t.content);\n  } else if (typeof t.content === \"string\") {\n    content = t.content;\n  } else {\n    return void 0;\n  }\n  return finalizeEvent(\n    {\n      kind: ChannelMuteUser,\n      tags: [[\"p\", t.pubkey_to_mute], ...t.tags ?? []],\n      content,\n      created_at: t.created_at\n    },\n    privateKey\n  );\n};\n\n// nip30.ts\nvar nip30_exports = {};\n__export(nip30_exports, {\n  EMOJI_SHORTCODE_REGEX: () => EMOJI_SHORTCODE_REGEX,\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar EMOJI_SHORTCODE_REGEX = /:(\\w+):/;\nvar regex = () => new RegExp(`\\\\B${EMOJI_SHORTCODE_REGEX.source}\\\\B`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    try {\n      const [shortcode, name] = match;\n      yield {\n        shortcode,\n        name,\n        start: match.index,\n        end: match.index + shortcode.length\n      };\n    } catch (_e) {\n    }\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (shortcode, name) => {\n    return replacer({\n      shortcode,\n      name\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation3,\n  validateGithub: () => validateGithub\n});\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch3(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip47.ts\nvar nip47_exports = {};\n__export(nip47_exports, {\n  makeNwcRequestEvent: () => makeNwcRequestEvent,\n  parseConnectionString: () => parseConnectionString\n});\nfunction parseConnectionString(connectionString) {\n  const { host, pathname, searchParams } = new URL(connectionString);\n  const pubkey = pathname || host;\n  const relay = searchParams.get(\"relay\");\n  const secret = searchParams.get(\"secret\");\n  if (!pubkey || !relay || !secret) {\n    throw new Error(\"invalid connection string\");\n  }\n  return { pubkey, relay, secret };\n}\nasync function makeNwcRequestEvent(pubkey, secretKey, invoice) {\n  const content = {\n    method: \"pay_invoice\",\n    params: {\n      invoice\n    }\n  };\n  const encryptedContent = encrypt(secretKey, pubkey, JSON.stringify(content));\n  const eventTemplate = {\n    kind: NWCWalletRequest,\n    created_at: Math.round(Date.now() / 1e3),\n    content: encryptedContent,\n    tags: [[\"p\", pubkey]]\n  };\n  return finalizeEvent(eventTemplate, secretKey);\n}\n\n// nip54.ts\nvar nip54_exports = {};\n__export(nip54_exports, {\n  normalizeIdentifier: () => normalizeIdentifier\n});\nfunction normalizeIdentifier(name) {\n  name = name.trim().toLowerCase();\n  name = name.normalize(\"NFKC\");\n  return Array.from(name).map((char) => {\n    if (/\\p{Letter}/u.test(char) || /\\p{Number}/u.test(char)) {\n      return char;\n    }\n    return \"-\";\n  }).join(\"\");\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getSatoshisAmountFromBolt11: () => getSatoshisAmountFromBolt11,\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation4,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch4;\ntry {\n  _fetch4 = fetch;\n} catch {\n}\nfunction useFetchImplementation4(fetchImplementation) {\n  _fetch4 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = new URL(`/.well-known/lnurlp/${name}`, `https://${domain}`).toString();\n    } else {\n      return null;\n    }\n    let res = await _fetch4(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest(params) {\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: params.comment || \"\",\n    tags: [\n      [\"p\", \"pubkey\" in params ? params.pubkey : params.event.pubkey],\n      [\"amount\", params.amount.toString()],\n      [\"relays\", ...params.relays]\n    ]\n  };\n  if (\"event\" in params) {\n    zr.tags.push([\"e\", params.event.id]);\n    if (isReplaceableKind(params.event.kind)) {\n      const a = [\"a\", `${params.event.kind}:${params.event.pubkey}:`];\n      zr.tags.push(a);\n    } else if (isAddressableKind(params.event.kind)) {\n      let d = params.event.tags.find(([t, v]) => t === \"d\" && v);\n      if (!d)\n        throw new Error(\"d tag not found or is empty\");\n      const a = [\"a\", `${params.event.kind}:${params.event.pubkey}:${d[1]}`];\n      zr.tags.push(a);\n    }\n    zr.tags.push([\"k\", params.event.kind.toString()]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifyEvent(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(([t]) => t === \"e\" || t === \"p\" || t === \"a\");\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [...tagsFromZapRequest, [\"P\", zr.pubkey], [\"bolt11\", bolt11], [\"description\", zapRequest]]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\nfunction getSatoshisAmountFromBolt11(bolt11) {\n  if (bolt11.length < 50) {\n    return 0;\n  }\n  bolt11 = bolt11.substring(0, 50);\n  const idx = bolt11.lastIndexOf(\"1\");\n  if (idx === -1) {\n    return 0;\n  }\n  const hrp = bolt11.substring(0, idx);\n  if (!hrp.startsWith(\"lnbc\")) {\n    return 0;\n  }\n  const amount = hrp.substring(4);\n  if (amount.length < 1) {\n    return 0;\n  }\n  const char = amount[amount.length - 1];\n  const digit = char.charCodeAt(0) - \"0\".charCodeAt(0);\n  const isDigit = digit >= 0 && digit <= 9;\n  let cutPoint = amount.length - 1;\n  if (isDigit) {\n    cutPoint++;\n  }\n  if (cutPoint < 1) {\n    return 0;\n  }\n  const num = parseInt(amount.substring(0, cutPoint));\n  switch (char) {\n    case \"m\":\n      return num * 1e5;\n    case \"u\":\n      return num * 100;\n    case \"n\":\n      return num / 10;\n    case \"p\":\n      return num / 1e4;\n    default:\n      return num * 1e8;\n  }\n}\n\n// nip98.ts\nvar nip98_exports = {};\n__export(nip98_exports, {\n  getToken: () => getToken,\n  hashPayload: () => hashPayload,\n  unpackEventFromToken: () => unpackEventFromToken,\n  validateEvent: () => validateEvent2,\n  validateEventKind: () => validateEventKind,\n  validateEventMethodTag: () => validateEventMethodTag,\n  validateEventPayloadTag: () => validateEventPayloadTag,\n  validateEventTimestamp: () => validateEventTimestamp,\n  validateEventUrlTag: () => validateEventUrlTag,\n  validateToken: () => validateToken\n});\nimport { sha256 as sha2564 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex6 } from \"@noble/hashes/utils\";\nimport { base64 as base643 } from \"@scure/base\";\nvar _authorizationScheme = \"Nostr \";\nasync function getToken(loginUrl, httpMethod, sign, includeAuthorizationScheme = false, payload) {\n  const event = {\n    kind: HTTPAuth,\n    tags: [\n      [\"u\", loginUrl],\n      [\"method\", httpMethod]\n    ],\n    created_at: Math.round(new Date().getTime() / 1e3),\n    content: \"\"\n  };\n  if (payload) {\n    event.tags.push([\"payload\", hashPayload(payload)]);\n  }\n  const signedEvent = await sign(event);\n  const authorizationScheme = includeAuthorizationScheme ? _authorizationScheme : \"\";\n  return authorizationScheme + base643.encode(utf8Encoder.encode(JSON.stringify(signedEvent)));\n}\nasync function validateToken(token, url, method) {\n  const event = await unpackEventFromToken(token).catch((error) => {\n    throw error;\n  });\n  const valid = await validateEvent2(event, url, method).catch((error) => {\n    throw error;\n  });\n  return valid;\n}\nasync function unpackEventFromToken(token) {\n  if (!token) {\n    throw new Error(\"Missing token\");\n  }\n  token = token.replace(_authorizationScheme, \"\");\n  const eventB64 = utf8Decoder.decode(base643.decode(token));\n  if (!eventB64 || eventB64.length === 0 || !eventB64.startsWith(\"{\")) {\n    throw new Error(\"Invalid token\");\n  }\n  const event = JSON.parse(eventB64);\n  return event;\n}\nfunction validateEventTimestamp(event) {\n  if (!event.created_at) {\n    return false;\n  }\n  return Math.round(new Date().getTime() / 1e3) - event.created_at < 60;\n}\nfunction validateEventKind(event) {\n  return event.kind === HTTPAuth;\n}\nfunction validateEventUrlTag(event, url) {\n  const urlTag = event.tags.find((t) => t[0] === \"u\");\n  if (!urlTag) {\n    return false;\n  }\n  return urlTag.length > 0 && urlTag[1] === url;\n}\nfunction validateEventMethodTag(event, method) {\n  const methodTag = event.tags.find((t) => t[0] === \"method\");\n  if (!methodTag) {\n    return false;\n  }\n  return methodTag.length > 0 && methodTag[1].toLowerCase() === method.toLowerCase();\n}\nfunction hashPayload(payload) {\n  const hash = sha2564(utf8Encoder.encode(JSON.stringify(payload)));\n  return bytesToHex6(hash);\n}\nfunction validateEventPayloadTag(event, payload) {\n  const payloadTag = event.tags.find((t) => t[0] === \"payload\");\n  if (!payloadTag) {\n    return false;\n  }\n  const payloadHash = hashPayload(payload);\n  return payloadTag.length > 0 && payloadTag[1] === payloadHash;\n}\nasync function validateEvent2(event, url, method, body) {\n  if (!verifyEvent(event)) {\n    throw new Error(\"Invalid nostr event, signature invalid\");\n  }\n  if (!validateEventKind(event)) {\n    throw new Error(\"Invalid nostr event, kind invalid\");\n  }\n  if (!validateEventTimestamp(event)) {\n    throw new Error(\"Invalid nostr event, created_at timestamp invalid\");\n  }\n  if (!validateEventUrlTag(event, url)) {\n    throw new Error(\"Invalid nostr event, url tag invalid\");\n  }\n  if (!validateEventMethodTag(event, method)) {\n    throw new Error(\"Invalid nostr event, method tag invalid\");\n  }\n  if (Boolean(body) && typeof body === \"object\" && Object.keys(body).length > 0) {\n    if (!validateEventPayloadTag(event, body)) {\n      throw new Error(\"Invalid nostr event, payload tag does not match request body hash\");\n    }\n  }\n  return true;\n}\nexport {\n  Relay,\n  SimplePool,\n  finalizeEvent,\n  fakejson_exports as fj,\n  generateSecretKey,\n  getEventHash,\n  getFilterLimit,\n  getPublicKey,\n  kinds_exports as kinds,\n  matchFilter,\n  matchFilters,\n  mergeFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip10_exports as nip10,\n  nip11_exports as nip11,\n  nip13_exports as nip13,\n  nip17_exports as nip17,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip27_exports as nip27,\n  nip28_exports as nip28,\n  nip30_exports as nip30,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip44_exports as nip44,\n  nip47_exports as nip47,\n  nip54_exports as nip54,\n  nip57_exports as nip57,\n  nip59_exports as nip59,\n  nip98_exports as nip98,\n  parseReferences,\n  serializeEvent,\n  sortEvents,\n  utils_exports as utils,\n  validateEvent,\n  verifiedSymbol,\n  verifyEvent\n};\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n", "// prettier-ignore\nimport {\n  wrapCipher, Cipher, CipherWithOutput,\n  createView, setBigUint64, equalBytes, u32, u8,\n} from './utils.js';\nimport { ghash, polyval } from './_polyval.js';\nimport { bytes as abytes } from './_assert.js';\n\n/*\nAES (Advanced Encryption Standard) aka Rijndael block cipher.\n\nData is split into 128-bit blocks. Encrypted in 10/12/14 rounds (128/192/256 bits). In every round:\n1. **S-box**, table substitution\n2. **Shift rows**, cyclic shift left of all rows of data array\n3. **Mix columns**, multiplying every column by fixed polynomial\n4. **Add round key**, round_key xor i-th column of array\n\nResources:\n- FIPS-197 https://csrc.nist.gov/files/pubs/fips/197/final/docs/fips-197.pdf\n- Original proposal: https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/aes-development/rijndael-ammended.pdf\n*/\n\nconst BLOCK_SIZE = 16;\nconst BLOCK_SIZE32 = 4;\nconst EMPTY_BLOCK = new Uint8Array(BLOCK_SIZE);\nconst POLY = 0x11b; // 1 + x + x**3 + x**4 + x**8\n\n// TODO: remove multiplication, binary ops only\nfunction mul2(n: number) {\n  return (n << 1) ^ (POLY & -(n >> 7));\n}\n\nfunction mul(a: number, b: number) {\n  let res = 0;\n  for (; b > 0; b >>= 1) {\n    // Montgomery ladder\n    res ^= a & -(b & 1); // if (b&1) res ^=a (but const-time).\n    a = mul2(a); // a = 2*a\n  }\n  return res;\n}\n\n// AES S-box is generated using finite field inversion,\n// an affine transform, and xor of a constant 0x63.\nconst sbox = /* @__PURE__ */ (() => {\n  let t = new Uint8Array(256);\n  for (let i = 0, x = 1; i < 256; i++, x ^= mul2(x)) t[i] = x;\n  const box = new Uint8Array(256);\n  box[0] = 0x63; // first elm\n  for (let i = 0; i < 255; i++) {\n    let x = t[255 - i];\n    x |= x << 8;\n    box[t[i]] = (x ^ (x >> 4) ^ (x >> 5) ^ (x >> 6) ^ (x >> 7) ^ 0x63) & 0xff;\n  }\n  return box;\n})();\n\n// Inverted S-box\nconst invSbox = /* @__PURE__ */ sbox.map((_, j) => sbox.indexOf(j));\n\n// Rotate u32 by 8\nconst rotr32_8 = (n: number) => (n << 24) | (n >>> 8);\nconst rotl32_8 = (n: number) => (n << 8) | (n >>> 24);\n\n// T-table is optimization suggested in 5.2 of original proposal (missed from FIPS-197). Changes:\n// - LE instead of BE\n// - bigger tables: T0 and T1 are merged into T01 table and T2 & T3 into T23;\n//   so index is u16, instead of u8. This speeds up things, unexpectedly\nfunction genTtable(sbox: Uint8Array, fn: (n: number) => number) {\n  if (sbox.length !== 256) throw new Error('Wrong sbox length');\n  const T0 = new Uint32Array(256).map((_, j) => fn(sbox[j]));\n  const T1 = T0.map(rotl32_8);\n  const T2 = T1.map(rotl32_8);\n  const T3 = T2.map(rotl32_8);\n  const T01 = new Uint32Array(256 * 256);\n  const T23 = new Uint32Array(256 * 256);\n  const sbox2 = new Uint16Array(256 * 256);\n  for (let i = 0; i < 256; i++) {\n    for (let j = 0; j < 256; j++) {\n      const idx = i * 256 + j;\n      T01[idx] = T0[i] ^ T1[j];\n      T23[idx] = T2[i] ^ T3[j];\n      sbox2[idx] = (sbox[i] << 8) | sbox[j];\n    }\n  }\n  return { sbox, sbox2, T0, T1, T2, T3, T01, T23 };\n}\n\nconst tableEncoding = /* @__PURE__ */ genTtable(\n  sbox,\n  (s: number) => (mul(s, 3) << 24) | (s << 16) | (s << 8) | mul(s, 2)\n);\nconst tableDecoding = /* @__PURE__ */ genTtable(\n  invSbox,\n  (s) => (mul(s, 11) << 24) | (mul(s, 13) << 16) | (mul(s, 9) << 8) | mul(s, 14)\n);\n\nconst xPowers = /* @__PURE__ */ (() => {\n  const p = new Uint8Array(16);\n  for (let i = 0, x = 1; i < 16; i++, x = mul2(x)) p[i] = x;\n  return p;\n})();\n\nexport function expandKeyLE(key: Uint8Array): Uint32Array {\n  abytes(key);\n  const len = key.length;\n  if (![16, 24, 32].includes(len))\n    throw new Error(`aes: wrong key size: should be 16, 24 or 32, got: ${len}`);\n  const { sbox2 } = tableEncoding;\n  const k32 = u32(key);\n  const Nk = k32.length;\n  const subByte = (n: number) => applySbox(sbox2, n, n, n, n);\n  const xk = new Uint32Array(len + 28); // expanded key\n  xk.set(k32);\n  // 4.3.1 Key expansion\n  for (let i = Nk; i < xk.length; i++) {\n    let t = xk[i - 1];\n    if (i % Nk === 0) t = subByte(rotr32_8(t)) ^ xPowers[i / Nk - 1];\n    else if (Nk > 6 && i % Nk === 4) t = subByte(t);\n    xk[i] = xk[i - Nk] ^ t;\n  }\n  return xk;\n}\n\nexport function expandKeyDecLE(key: Uint8Array): Uint32Array {\n  const encKey = expandKeyLE(key);\n  const xk = encKey.slice();\n  const Nk = encKey.length;\n  const { sbox2 } = tableEncoding;\n  const { T0, T1, T2, T3 } = tableDecoding;\n  // Inverse key by chunks of 4 (rounds)\n  for (let i = 0; i < Nk; i += 4) {\n    for (let j = 0; j < 4; j++) xk[i + j] = encKey[Nk - i - 4 + j];\n  }\n  encKey.fill(0);\n  // apply InvMixColumn except first & last round\n  for (let i = 4; i < Nk - 4; i++) {\n    const x = xk[i];\n    const w = applySbox(sbox2, x, x, x, x);\n    xk[i] = T0[w & 0xff] ^ T1[(w >>> 8) & 0xff] ^ T2[(w >>> 16) & 0xff] ^ T3[w >>> 24];\n  }\n  return xk;\n}\n\n// Apply tables\nfunction apply0123(\n  T01: Uint32Array,\n  T23: Uint32Array,\n  s0: number,\n  s1: number,\n  s2: number,\n  s3: number\n) {\n  return (\n    T01[((s0 << 8) & 0xff00) | ((s1 >>> 8) & 0xff)] ^\n    T23[((s2 >>> 8) & 0xff00) | ((s3 >>> 24) & 0xff)]\n  );\n}\n\nfunction applySbox(sbox2: Uint16Array, s0: number, s1: number, s2: number, s3: number) {\n  return (\n    sbox2[(s0 & 0xff) | (s1 & 0xff00)] |\n    (sbox2[((s2 >>> 16) & 0xff) | ((s3 >>> 16) & 0xff00)] << 16)\n  );\n}\n\nfunction encrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableEncoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s1, s2, s3);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s2, s3, s0);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s3, s0, s1);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s0, s1, s2);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // last round (without mixcolumns, so using SBOX2 table)\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s1, s2, s3);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s2, s3, s0);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s3, s0, s1);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s0, s1, s2);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction decrypt(xk: Uint32Array, s0: number, s1: number, s2: number, s3: number) {\n  const { sbox2, T01, T23 } = tableDecoding;\n  let k = 0;\n  (s0 ^= xk[k++]), (s1 ^= xk[k++]), (s2 ^= xk[k++]), (s3 ^= xk[k++]);\n  const rounds = xk.length / 4 - 2;\n  for (let i = 0; i < rounds; i++) {\n    const t0 = xk[k++] ^ apply0123(T01, T23, s0, s3, s2, s1);\n    const t1 = xk[k++] ^ apply0123(T01, T23, s1, s0, s3, s2);\n    const t2 = xk[k++] ^ apply0123(T01, T23, s2, s1, s0, s3);\n    const t3 = xk[k++] ^ apply0123(T01, T23, s3, s2, s1, s0);\n    (s0 = t0), (s1 = t1), (s2 = t2), (s3 = t3);\n  }\n  // Last round\n  const t0 = xk[k++] ^ applySbox(sbox2, s0, s3, s2, s1);\n  const t1 = xk[k++] ^ applySbox(sbox2, s1, s0, s3, s2);\n  const t2 = xk[k++] ^ applySbox(sbox2, s2, s1, s0, s3);\n  const t3 = xk[k++] ^ applySbox(sbox2, s3, s2, s1, s0);\n  return { s0: t0, s1: t1, s2: t2, s3: t3 };\n}\n\nfunction getDst(len: number, dst?: Uint8Array) {\n  if (!dst) return new Uint8Array(len);\n  abytes(dst);\n  if (dst.length < len)\n    throw new Error(`aes: wrong destination length, expected at least ${len}, got: ${dst.length}`);\n  return dst;\n}\n\n// TODO: investigate merging with ctr32\nfunction ctrCounter(xk: Uint32Array, nonce: Uint8Array, src: Uint8Array, dst?: Uint8Array) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  const srcLen = src.length;\n  dst = getDst(srcLen, dst);\n  const ctr = nonce;\n  const c32 = u32(ctr);\n  // Fill block (empty, ctr=0)\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    // Full 128 bit counter with wrap around\n    let carry = 1;\n    for (let i = ctr.length - 1; i >= 0; i--) {\n      carry = (carry + (ctr[i] & 0xff)) | 0;\n      ctr[i] = carry & 0xff;\n      carry >>>= 8;\n    }\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than block)\n  // It's possible to handle > u32 fast, but is it worth it?\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n// AES CTR with overflowing 32 bit counter\n// It's possible to do 32le significantly simpler (and probably faster) by using u32.\n// But, we need both, and perf bottleneck is in ghash anyway.\nfunction ctr32(\n  xk: Uint32Array,\n  isLE: boolean,\n  nonce: Uint8Array,\n  src: Uint8Array,\n  dst?: Uint8Array\n) {\n  abytes(nonce, BLOCK_SIZE);\n  abytes(src);\n  dst = getDst(src.length, dst);\n  const ctr = nonce; // write new value to nonce, so it can be re-used\n  const c32 = u32(ctr);\n  const view = createView(ctr);\n  const src32 = u32(src);\n  const dst32 = u32(dst);\n  const ctrPos = isLE ? 0 : 12;\n  const srcLen = src.length;\n  // Fill block (empty, ctr=0)\n  let ctrNum = view.getUint32(ctrPos, isLE); // read current counter value\n  let { s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]);\n  // process blocks\n  for (let i = 0; i + 4 <= src32.length; i += 4) {\n    dst32[i + 0] = src32[i + 0] ^ s0;\n    dst32[i + 1] = src32[i + 1] ^ s1;\n    dst32[i + 2] = src32[i + 2] ^ s2;\n    dst32[i + 3] = src32[i + 3] ^ s3;\n    ctrNum = (ctrNum + 1) >>> 0; // u32 wrap\n    view.setUint32(ctrPos, ctrNum, isLE);\n    ({ s0, s1, s2, s3 } = encrypt(xk, c32[0], c32[1], c32[2], c32[3]));\n  }\n  // leftovers (less than a block)\n  const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n  if (start < srcLen) {\n    const b32 = new Uint32Array([s0, s1, s2, s3]);\n    const buf = u8(b32);\n    for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n  }\n  return dst;\n}\n\n/**\n * CTR: counter mode. Creates stream cipher.\n * Requires good IV. Parallelizable. OK, but no MAC.\n */\nexport const ctr = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function ctr(key: Uint8Array, nonce: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(nonce, BLOCK_SIZE);\n    function processCtr(buf: Uint8Array, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const n = nonce.slice();\n      const out = ctrCounter(xk, n, buf, dst);\n      xk.fill(0);\n      n.fill(0);\n      return out;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCtr(plaintext, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCtr(ciphertext, dst),\n    };\n  }\n);\n\nfunction validateBlockDecrypt(data: Uint8Array) {\n  abytes(data);\n  if (data.length % BLOCK_SIZE !== 0) {\n    throw new Error(\n      `aes/(cbc-ecb).decrypt ciphertext should consist of blocks with size ${BLOCK_SIZE}`\n    );\n  }\n}\n\nfunction validateBlockEncrypt(plaintext: Uint8Array, pcks5: boolean, dst?: Uint8Array) {\n  let outLen = plaintext.length;\n  const remaining = outLen % BLOCK_SIZE;\n  if (!pcks5 && remaining !== 0)\n    throw new Error('aec/(cbc-ecb): unpadded plaintext with disabled padding');\n  const b = u32(plaintext);\n  if (pcks5) {\n    let left = BLOCK_SIZE - remaining;\n    if (!left) left = BLOCK_SIZE; // if no bytes left, create empty padding block\n    outLen = outLen + left;\n  }\n  const out = getDst(outLen, dst);\n  const o = u32(out);\n  return { b, o, out };\n}\n\nfunction validatePCKS(data: Uint8Array, pcks5: boolean) {\n  if (!pcks5) return data;\n  const len = data.length;\n  if (!len) throw new Error(`aes/pcks5: empty ciphertext not allowed`);\n  const lastByte = data[len - 1];\n  if (lastByte <= 0 || lastByte > 16) throw new Error(`aes/pcks5: wrong padding byte: ${lastByte}`);\n  const out = data.subarray(0, -lastByte);\n  for (let i = 0; i < lastByte; i++)\n    if (data[len - i - 1] !== lastByte) throw new Error(`aes/pcks5: wrong padding`);\n  return out;\n}\n\nfunction padPCKS(left: Uint8Array) {\n  const tmp = new Uint8Array(16);\n  const tmp32 = u32(tmp);\n  tmp.set(left);\n  const paddingByte = BLOCK_SIZE - left.length;\n  for (let i = BLOCK_SIZE - paddingByte; i < BLOCK_SIZE; i++) tmp[i] = paddingByte;\n  return tmp32;\n}\n\nexport type BlockOpts = { disablePadding?: boolean };\n\n/**\n * ECB: Electronic CodeBook. Simple deterministic replacement.\n * Dangerous: always map x to y. See [AES Penguin](https://words.filippo.io/the-ecb-penguin/).\n */\nexport const ecb = wrapCipher(\n  { blockSize: 16 },\n  function ecb(key: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        abytes(plaintext);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const xk = expandKeyLE(key);\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = encrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          const { s0, s1, s2, s3 } = encrypt(xk, tmp32[0], tmp32[1], tmp32[2], tmp32[3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        for (let i = 0; i + 4 <= b.length; ) {\n          const { s0, s1, s2, s3 } = decrypt(xk, b[i + 0], b[i + 1], b[i + 2], b[i + 3]);\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CBC: Cipher-Block-Chaining. Key is previous round\u2019s block.\n * Fragile: needs proper padding. Unauthenticated: needs MAC.\n */\nexport const cbc = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cbc(key: Uint8Array, iv: Uint8Array, opts: BlockOpts = {}): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    const pcks5 = !opts.disablePadding;\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => {\n        const xk = expandKeyLE(key);\n        const { b, o, out: _out } = validateBlockEncrypt(plaintext, pcks5, dst);\n        const n32 = u32(iv);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        let i = 0;\n        for (; i + 4 <= b.length; ) {\n          (s0 ^= b[i + 0]), (s1 ^= b[i + 1]), (s2 ^= b[i + 2]), (s3 ^= b[i + 3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        if (pcks5) {\n          const tmp32 = padPCKS(plaintext.subarray(i * 4));\n          (s0 ^= tmp32[0]), (s1 ^= tmp32[1]), (s2 ^= tmp32[2]), (s3 ^= tmp32[3]);\n          ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n          (o[i++] = s0), (o[i++] = s1), (o[i++] = s2), (o[i++] = s3);\n        }\n        xk.fill(0);\n        return _out;\n      },\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => {\n        validateBlockDecrypt(ciphertext);\n        const xk = expandKeyDecLE(key);\n        const n32 = u32(iv);\n        const out = getDst(ciphertext.length, dst);\n        const b = u32(ciphertext);\n        const o = u32(out);\n        // prettier-ignore\n        let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n        for (let i = 0; i + 4 <= b.length; ) {\n          // prettier-ignore\n          const ps0 = s0, ps1 = s1, ps2 = s2, ps3 = s3;\n          (s0 = b[i + 0]), (s1 = b[i + 1]), (s2 = b[i + 2]), (s3 = b[i + 3]);\n          const { s0: o0, s1: o1, s2: o2, s3: o3 } = decrypt(xk, s0, s1, s2, s3);\n          (o[i++] = o0 ^ ps0), (o[i++] = o1 ^ ps1), (o[i++] = o2 ^ ps2), (o[i++] = o3 ^ ps3);\n        }\n        xk.fill(0);\n        return validatePCKS(out, pcks5);\n      },\n    };\n  }\n);\n\n/**\n * CFB: Cipher Feedback Mode. The input for the block cipher is the previous cipher output.\n * Unauthenticated: needs MAC.\n */\nexport const cfb = wrapCipher(\n  { blockSize: 16, nonceLength: 16 },\n  function cfb(key: Uint8Array, iv: Uint8Array): CipherWithOutput {\n    abytes(key);\n    abytes(iv, 16);\n    function processCfb(src: Uint8Array, isEncrypt: boolean, dst?: Uint8Array) {\n      const xk = expandKeyLE(key);\n      const srcLen = src.length;\n      dst = getDst(srcLen, dst);\n      const src32 = u32(src);\n      const dst32 = u32(dst);\n      const next32 = isEncrypt ? dst32 : src32;\n      const n32 = u32(iv);\n      // prettier-ignore\n      let s0 = n32[0], s1 = n32[1], s2 = n32[2], s3 = n32[3];\n      for (let i = 0; i + 4 <= src32.length; ) {\n        const { s0: e0, s1: e1, s2: e2, s3: e3 } = encrypt(xk, s0, s1, s2, s3);\n        dst32[i + 0] = src32[i + 0] ^ e0;\n        dst32[i + 1] = src32[i + 1] ^ e1;\n        dst32[i + 2] = src32[i + 2] ^ e2;\n        dst32[i + 3] = src32[i + 3] ^ e3;\n        (s0 = next32[i++]), (s1 = next32[i++]), (s2 = next32[i++]), (s3 = next32[i++]);\n      }\n      // leftovers (less than block)\n      const start = BLOCK_SIZE * Math.floor(src32.length / BLOCK_SIZE32);\n      if (start < srcLen) {\n        ({ s0, s1, s2, s3 } = encrypt(xk, s0, s1, s2, s3));\n        const buf = u8(new Uint32Array([s0, s1, s2, s3]));\n        for (let i = start, pos = 0; i < srcLen; i++, pos++) dst[i] = src[i] ^ buf[pos];\n        buf.fill(0);\n      }\n      xk.fill(0);\n      return dst;\n    }\n    return {\n      encrypt: (plaintext: Uint8Array, dst?: Uint8Array) => processCfb(plaintext, true, dst),\n      decrypt: (ciphertext: Uint8Array, dst?: Uint8Array) => processCfb(ciphertext, false, dst),\n    };\n  }\n);\n\n// TODO: merge with chacha, however gcm has bitLen while chacha has byteLen\nfunction computeTag(\n  fn: typeof ghash,\n  isLE: boolean,\n  key: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n) {\n  const h = fn.create(key, data.length + (AAD?.length || 0));\n  if (AAD) h.update(AAD);\n  h.update(data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  if (AAD) setBigUint64(view, 0, BigInt(AAD.length * 8), isLE);\n  setBigUint64(view, 8, BigInt(data.length * 8), isLE);\n  h.update(num);\n  return h.digest();\n}\n\n/**\n * GCM: Galois/Counter Mode.\n * Good, modern version of CTR, parallel, with MAC.\n * Be careful: MACs can be forged.\n */\nexport const gcm = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function gcm(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    abytes(nonce);\n    // Nonce can be pretty much anything (even 1 byte). But smaller nonces less secure.\n    if (nonce.length === 0) throw new Error('aes/gcm: empty nonce');\n    const tagLength = 16;\n    function _computeTag(authKey: Uint8Array, tagMask: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(ghash, false, authKey, data, AAD);\n      for (let i = 0; i < tagMask.length; i++) tag[i] ^= tagMask[i];\n      return tag;\n    }\n    function deriveKeys() {\n      const xk = expandKeyLE(key);\n      const authKey = EMPTY_BLOCK.slice();\n      const counter = EMPTY_BLOCK.slice();\n      ctr32(xk, false, counter, counter, authKey);\n      if (nonce.length === 12) {\n        counter.set(nonce);\n      } else {\n        // Spec (NIST 800-38d) supports variable size nonce.\n        // Not supported for now, but can be useful.\n        const nonceLen = EMPTY_BLOCK.slice();\n        const view = createView(nonceLen);\n        setBigUint64(view, 8, BigInt(nonce.length * 8), false);\n        // ghash(nonce || u64be(0) || u64be(nonceLen*8))\n        ghash.create(authKey).update(nonce).update(nonceLen).digestInto(counter);\n      }\n      const tagMask = ctr32(xk, false, counter, EMPTY_BLOCK);\n      return { xk, authKey, counter, tagMask };\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const out = new Uint8Array(plaintext.length + tagLength);\n        ctr32(xk, false, counter, plaintext, out);\n        const tag = _computeTag(authKey, tagMask, out.subarray(0, out.length - tagLength));\n        out.set(tag, plaintext.length);\n        xk.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        if (ciphertext.length < tagLength)\n          throw new Error(`aes/gcm: ciphertext less than tagLen (${tagLength})`);\n        const { xk, authKey, counter, tagMask } = deriveKeys();\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = _computeTag(authKey, tagMask, data);\n        if (!equalBytes(tag, passedTag)) throw new Error('aes/gcm: invalid ghash tag');\n        const out = ctr32(xk, false, counter, data);\n        authKey.fill(0);\n        tagMask.fill(0);\n        xk.fill(0);\n        return out;\n      },\n    };\n  }\n);\n\nconst limit = (name: string, min: number, max: number) => (value: number) => {\n  if (!Number.isSafeInteger(value) || min > value || value > max)\n    throw new Error(`${name}: invalid value=${value}, must be [${min}..${max}]`);\n};\n\n/**\n * AES-GCM-SIV: classic AES-GCM with nonce-misuse resistance.\n * Guarantees that, when a nonce is repeated, the only security loss is that identical\n * plaintexts will produce identical ciphertexts.\n * RFC 8452, https://datatracker.ietf.org/doc/html/rfc8452\n */\nexport const siv = wrapCipher(\n  { blockSize: 16, nonceLength: 12, tagLength: 16 },\n  function siv(key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): Cipher {\n    const tagLength = 16;\n    // From RFC 8452: Section 6\n    const AAD_LIMIT = limit('AAD', 0, 2 ** 36);\n    const PLAIN_LIMIT = limit('plaintext', 0, 2 ** 36);\n    const NONCE_LIMIT = limit('nonce', 12, 12);\n    const CIPHER_LIMIT = limit('ciphertext', 16, 2 ** 36 + 16);\n    abytes(nonce);\n    NONCE_LIMIT(nonce.length);\n    if (AAD) {\n      abytes(AAD);\n      AAD_LIMIT(AAD.length);\n    }\n    function deriveKeys() {\n      const len = key.length;\n      if (len !== 16 && len !== 24 && len !== 32)\n        throw new Error(`key length must be 16, 24 or 32 bytes, got: ${len} bytes`);\n      const xk = expandKeyLE(key);\n      const encKey = new Uint8Array(len);\n      const authKey = new Uint8Array(16);\n      const n32 = u32(nonce);\n      // prettier-ignore\n      let s0 = 0, s1 = n32[0], s2 = n32[1], s3 = n32[2];\n      let counter = 0;\n      for (const derivedKey of [authKey, encKey].map(u32)) {\n        const d32 = u32(derivedKey);\n        for (let i = 0; i < d32.length; i += 2) {\n          // aes(u32le(0) || nonce)[:8] || aes(u32le(1) || nonce)[:8] ...\n          const { s0: o0, s1: o1 } = encrypt(xk, s0, s1, s2, s3);\n          d32[i + 0] = o0;\n          d32[i + 1] = o1;\n          s0 = ++counter; // increment counter inside state\n        }\n      }\n      xk.fill(0);\n      return { authKey, encKey: expandKeyLE(encKey) };\n    }\n    function _computeTag(encKey: Uint32Array, authKey: Uint8Array, data: Uint8Array) {\n      const tag = computeTag(polyval, true, authKey, data, AAD);\n      // Compute the expected tag by XORing S_s and the nonce, clearing the\n      // most significant bit of the last byte and encrypting with the\n      // message-encryption key.\n      for (let i = 0; i < 12; i++) tag[i] ^= nonce[i];\n      tag[15] &= 0x7f; // Clear the highest bit\n      // encrypt tag as block\n      const t32 = u32(tag);\n      // prettier-ignore\n      let s0 = t32[0], s1 = t32[1], s2 = t32[2], s3 = t32[3];\n      ({ s0, s1, s2, s3 } = encrypt(encKey, s0, s1, s2, s3));\n      (t32[0] = s0), (t32[1] = s1), (t32[2] = s2), (t32[3] = s3);\n      return tag;\n    }\n    // actual decrypt/encrypt of message.\n    function processSiv(encKey: Uint32Array, tag: Uint8Array, input: Uint8Array) {\n      let block = tag.slice();\n      block[15] |= 0x80; // Force highest bit\n      return ctr32(encKey, true, block, input);\n    }\n    return {\n      encrypt: (plaintext: Uint8Array) => {\n        abytes(plaintext);\n        PLAIN_LIMIT(plaintext.length);\n        const { encKey, authKey } = deriveKeys();\n        const tag = _computeTag(encKey, authKey, plaintext);\n        const out = new Uint8Array(plaintext.length + tagLength);\n        out.set(tag, plaintext.length);\n        out.set(processSiv(encKey, tag, plaintext));\n        encKey.fill(0);\n        authKey.fill(0);\n        return out;\n      },\n      decrypt: (ciphertext: Uint8Array) => {\n        abytes(ciphertext);\n        CIPHER_LIMIT(ciphertext.length);\n        const tag = ciphertext.subarray(-tagLength);\n        const { encKey, authKey } = deriveKeys();\n        const plaintext = processSiv(encKey, tag, ciphertext.subarray(0, -tagLength));\n        const expectedTag = _computeTag(encKey, authKey, plaintext);\n        encKey.fill(0);\n        authKey.fill(0);\n        if (!equalBytes(tag, expectedTag)) throw new Error('invalid polyval tag');\n        return plaintext;\n      },\n    };\n  }\n);\n\nfunction isBytes32(a: unknown): a is Uint8Array {\n  return (\n    a != null &&\n    typeof a === 'object' &&\n    (a instanceof Uint32Array || a.constructor.name === 'Uint32Array')\n  );\n}\n\nfunction encryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_encryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = encrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\nfunction decryptBlock(xk: Uint32Array, block: Uint8Array) {\n  abytes(block, 16);\n  if (!isBytes32(xk)) throw new Error('_decryptBlock accepts result of expandKeyLE');\n  const b32 = u32(block);\n  let { s0, s1, s2, s3 } = decrypt(xk, b32[0], b32[1], b32[2], b32[3]);\n  (b32[0] = s0), (b32[1] = s1), (b32[2] = s2), (b32[3] = s3);\n  return block;\n}\n\n// Highly unsafe private functions for implementing new modes or ciphers based on AES\n// Can change at any time, no API guarantees\nexport const unsafe = {\n  expandKeyLE,\n  expandKeyDecLE,\n  encrypt,\n  decrypt,\n  encryptBlock,\n  decryptBlock,\n  ctrCounter,\n  ctr32,\n};\n", "/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */\nimport { bytes as abytes, isBytes } from './_assert.js';\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u16 = (arr: TypedArray) =>\n  new Uint16Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 2));\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// big-endian hardware is rare. Just in case someone still decides to run ciphers:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`string expected, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * @example bytesToUtf8(new Uint8Array([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  else if (isBytes(data)) data = data.slice();\n  else throw new Error(`Uint8Array expected, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts: T2\n): T1 & T2 {\n  if (opts == null || typeof opts !== 'object') throw new Error('options must be defined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n}\n\n// This will allow to re-use with composable things like packed & base encoders\n// Also, we probably can make tags composable\nexport type Cipher = {\n  encrypt(plaintext: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array): Uint8Array;\n};\n\nexport type AsyncCipher = {\n  encrypt(plaintext: Uint8Array): Promise<Uint8Array>;\n  decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;\n};\n\nexport type CipherWithOutput = Cipher & {\n  encrypt(plaintext: Uint8Array, output?: Uint8Array): Uint8Array;\n  decrypt(ciphertext: Uint8Array, output?: Uint8Array): Uint8Array;\n};\n\n// Params is outside return type, so it is accessible before calling constructor\n// If function support multiple nonceLength's, we return best one\nexport type CipherParams = { blockSize: number; nonceLength?: number; tagLength?: number };\nexport type CipherCons<T extends any[]> = (key: Uint8Array, ...args: T) => Cipher;\n/**\n * @__NO_SIDE_EFFECTS__\n */\nexport const wrapCipher = <C extends CipherCons<any>, P extends CipherParams>(\n  params: P,\n  c: C\n): C & P => {\n  Object.assign(c, params);\n  return c as C & P;\n};\n\nexport type XorStream = (\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  output?: Uint8Array,\n  counter?: number\n) => Uint8Array;\n\n// Polyfill for Safari 14\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\nexport function u64Lengths(ciphertext: Uint8Array, AAD?: Uint8Array) {\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(ciphertext.length), true);\n  return num;\n}\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('hash must be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "import { createView, toBytes, Input, Hash, u32 } from './utils.js';\nimport { bytes as abytes, exists as aexists, output as aoutput } from './_assert.js';\n\n// GHash from AES-GCM and its little-endian \"mirror image\" Polyval from AES-SIV.\n// Implemented in terms of GHash with conversion function for keys\n// GCM GHASH from NIST SP800-38d, SIV from RFC 8452.\n// https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n\n// GHASH   modulo: x^128 + x^7   + x^2   + x     + 1\n// POLYVAL modulo: x^128 + x^127 + x^126 + x^121 + 1\n\nconst BLOCK_SIZE = 16;\n// TODO: rewrite\n// temporary padding buffer\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\nconst ZEROS32 = u32(ZEROS16);\nconst POLY = 0xe1; // v = 2*v % POLY\n\n// v = 2*v % POLY\n// NOTE: because x + x = 0 (add/sub is same), mul2(x) != x+x\n// We can multiply any number using montgomery ladder and this function (works as double, add is simple xor)\nconst mul2 = (s0: number, s1: number, s2: number, s3: number) => {\n  const hiBit = s3 & 1;\n  return {\n    s3: (s2 << 31) | (s3 >>> 1),\n    s2: (s1 << 31) | (s2 >>> 1),\n    s1: (s0 << 31) | (s1 >>> 1),\n    s0: (s0 >>> 1) ^ ((POLY << 24) & -(hiBit & 1)), // reduce % poly\n  };\n};\n\nconst swapLE = (n: number) =>\n  (((n >>> 0) & 0xff) << 24) |\n  (((n >>> 8) & 0xff) << 16) |\n  (((n >>> 16) & 0xff) << 8) |\n  ((n >>> 24) & 0xff) |\n  0;\n\n/**\n * `mulX_POLYVAL(ByteReverse(H))` from spec\n * @param k mutated in place\n */\nexport function _toGHASHKey(k: Uint8Array): Uint8Array {\n  k.reverse();\n  const hiBit = k[15] & 1;\n  // k >>= 1\n  let carry = 0;\n  for (let i = 0; i < k.length; i++) {\n    const t = k[i];\n    k[i] = (t >>> 1) | carry;\n    carry = (t & 1) << 7;\n  }\n  k[0] ^= -hiBit & 0xe1; // if (hiBit) n ^= 0xe1000000000000000000000000000000;\n  return k;\n}\n\ntype Value = { s0: number; s1: number; s2: number; s3: number };\n\nconst estimateWindow = (bytes: number) => {\n  if (bytes > 64 * 1024) return 8;\n  if (bytes > 1024) return 4;\n  return 2;\n};\n\nclass GHASH implements Hash<GHASH> {\n  readonly blockLen = BLOCK_SIZE;\n  readonly outputLen = BLOCK_SIZE;\n  protected s0 = 0;\n  protected s1 = 0;\n  protected s2 = 0;\n  protected s3 = 0;\n  protected finished = false;\n  protected t: Value[];\n  private W: number;\n  private windowSize: number;\n  // We select bits per window adaptively based on expectedLength\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    abytes(key, 16);\n    const kView = createView(key);\n    let k0 = kView.getUint32(0, false);\n    let k1 = kView.getUint32(4, false);\n    let k2 = kView.getUint32(8, false);\n    let k3 = kView.getUint32(12, false);\n    // generate table of doubled keys (half of montgomery ladder)\n    const doubles: Value[] = [];\n    for (let i = 0; i < 128; i++) {\n      doubles.push({ s0: swapLE(k0), s1: swapLE(k1), s2: swapLE(k2), s3: swapLE(k3) });\n      ({ s0: k0, s1: k1, s2: k2, s3: k3 } = mul2(k0, k1, k2, k3));\n    }\n    const W = estimateWindow(expectedLength || 1024);\n    if (![1, 2, 4, 8].includes(W))\n      throw new Error(`ghash: wrong window size=${W}, should be 2, 4 or 8`);\n    this.W = W;\n    const bits = 128; // always 128 bits;\n    const windows = bits / W;\n    const windowSize = (this.windowSize = 2 ** W);\n    const items: Value[] = [];\n    // Create precompute table for window of W bits\n    for (let w = 0; w < windows; w++) {\n      // truth table: 00, 01, 10, 11\n      for (let byte = 0; byte < windowSize; byte++) {\n        // prettier-ignore\n        let s0 = 0, s1 = 0, s2 = 0, s3 = 0;\n        for (let j = 0; j < W; j++) {\n          const bit = (byte >>> (W - j - 1)) & 1;\n          if (!bit) continue;\n          const { s0: d0, s1: d1, s2: d2, s3: d3 } = doubles[W * w + j];\n          (s0 ^= d0), (s1 ^= d1), (s2 ^= d2), (s3 ^= d3);\n        }\n        items.push({ s0, s1, s2, s3 });\n      }\n    }\n    this.t = items;\n  }\n  protected _updateBlock(s0: number, s1: number, s2: number, s3: number) {\n    (s0 ^= this.s0), (s1 ^= this.s1), (s2 ^= this.s2), (s3 ^= this.s3);\n    const { W, t, windowSize } = this;\n    // prettier-ignore\n    let o0 = 0, o1 = 0, o2 = 0, o3 = 0;\n    const mask = (1 << W) - 1; // 2**W will kill performance.\n    let w = 0;\n    for (const num of [s0, s1, s2, s3]) {\n      for (let bytePos = 0; bytePos < 4; bytePos++) {\n        const byte = (num >>> (8 * bytePos)) & 0xff;\n        for (let bitPos = 8 / W - 1; bitPos >= 0; bitPos--) {\n          const bit = (byte >>> (W * bitPos)) & mask;\n          const { s0: e0, s1: e1, s2: e2, s3: e3 } = t[w * windowSize + bit];\n          (o0 ^= e0), (o1 ^= e1), (o2 ^= e2), (o3 ^= e3);\n          w += 1;\n        }\n      }\n    }\n    this.s0 = o0;\n    this.s1 = o1;\n    this.s2 = o2;\n    this.s3 = o3;\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    const left = data.length % BLOCK_SIZE;\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(b32[i * 4 + 0], b32[i * 4 + 1], b32[i * 4 + 2], b32[i * 4 + 3]);\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(ZEROS32[0], ZEROS32[1], ZEROS32[2], ZEROS32[3]);\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  destroy() {\n    const { t } = this;\n    // clean precompute table\n    for (const elm of t) {\n      (elm.s0 = 0), (elm.s1 = 0), (elm.s2 = 0), (elm.s3 = 0);\n    }\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out;\n  }\n  digest(): Uint8Array {\n    const res = new Uint8Array(BLOCK_SIZE);\n    this.digestInto(res);\n    this.destroy();\n    return res;\n  }\n}\n\nclass Polyval extends GHASH {\n  constructor(key: Input, expectedLength?: number) {\n    key = toBytes(key);\n    const ghKey = _toGHASHKey(key.slice());\n    super(ghKey, expectedLength);\n    ghKey.fill(0);\n  }\n  update(data: Input): this {\n    data = toBytes(data);\n    aexists(this);\n    const b32 = u32(data);\n    const left = data.length % BLOCK_SIZE;\n    const blocks = Math.floor(data.length / BLOCK_SIZE);\n    for (let i = 0; i < blocks; i++) {\n      this._updateBlock(\n        swapLE(b32[i * 4 + 3]),\n        swapLE(b32[i * 4 + 2]),\n        swapLE(b32[i * 4 + 1]),\n        swapLE(b32[i * 4 + 0])\n      );\n    }\n    if (left) {\n      ZEROS16.set(data.subarray(blocks * BLOCK_SIZE));\n      this._updateBlock(\n        swapLE(ZEROS32[3]),\n        swapLE(ZEROS32[2]),\n        swapLE(ZEROS32[1]),\n        swapLE(ZEROS32[0])\n      );\n      ZEROS32.fill(0); // clean tmp buffer\n    }\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // tmp ugly hack\n    const { s0, s1, s2, s3 } = this;\n    const o32 = u32(out);\n    o32[0] = s0;\n    o32[1] = s1;\n    o32[2] = s2;\n    o32[3] = s3;\n    return out.reverse();\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nfunction wrapConstructorWithKey<H extends Hash<H>>(\n  hashCons: (key: Input, expectedLength?: number) => Hash<H>\n) {\n  const hashC = (msg: Input, key: Input): Uint8Array =>\n    hashCons(key, msg.length).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(16), 0);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input, expectedLength?: number) => hashCons(key, expectedLength);\n  return hashC;\n}\n\nexport const ghash = wrapConstructorWithKey(\n  (key, expectedLength) => new GHASH(key, expectedLength)\n);\nexport const polyval = wrapConstructorWithKey(\n  (key, expectedLength) => new Polyval(key, expectedLength)\n);\n", "// prettier-ignore\nimport {\n  wrapCipher, CipherWithOutput, XorStream, createView, equalBytes, setBigUint64,\n} from './utils.js';\nimport { poly1305 } from './_poly1305.js';\nimport { createCipher, rotl } from './_arx.js';\nimport { bytes as abytes } from './_assert.js';\n\n// ChaCha20 stream cipher was released in 2008. ChaCha aims to increase\n// the diffusion per round, but had slightly less cryptanalysis.\n// https://cr.yp.to/chacha.html, http://cr.yp.to/chacha/chacha-20080128.pdf\n\n/**\n * ChaCha core function.\n */\n// prettier-ignore\nfunction chachaCore(\n  s: Uint32Array, k: Uint32Array, n: Uint32Array, out: Uint32Array, cnt: number, rounds = 20\n): void {\n  let y00 = s[0], y01 = s[1], y02 = s[2], y03 = s[3], // \"expa\"   \"nd 3\"  \"2-by\"  \"te k\"\n      y04 = k[0], y05 = k[1], y06 = k[2], y07 = k[3], // Key      Key     Key     Key\n      y08 = k[4], y09 = k[5], y10 = k[6], y11 = k[7], // Key      Key     Key     Key\n      y12 = cnt,  y13 = n[0], y14 = n[1], y15 = n[2]; // Counter  Counter\tNonce   Nonce\n  // Save state to temporary variables\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  for (let r = 0; r < rounds; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  // Write output\n  let oi = 0;\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n/**\n * hchacha helper method, used primarily in xchacha, to hash\n * key and nonce into key' and nonce'.\n * Same as chachaCore, but there doesn't seem to be a way to move the block\n * out without 25% performance hit.\n */\n// prettier-ignore\nexport function hchacha(\n  s: Uint32Array, k: Uint32Array, i: Uint32Array, o32: Uint32Array\n) {\n  let x00 = s[0], x01 = s[1], x02 = s[2], x03 = s[3],\n      x04 = k[0], x05 = k[1], x06 = k[2], x07 = k[3],\n      x08 = k[4], x09 = k[5], x10 = k[6], x11 = k[7],\n      x12 = i[0], x13 = i[1], x14 = i[2], x15 = i[3];\n  for (let r = 0; r < 20; r += 2) {\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 16);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 12);\n    x00 = (x00 + x04) | 0; x12 = rotl(x12 ^ x00, 8);\n    x08 = (x08 + x12) | 0; x04 = rotl(x04 ^ x08, 7);\n\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 16);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 12);\n    x01 = (x01 + x05) | 0; x13 = rotl(x13 ^ x01, 8);\n    x09 = (x09 + x13) | 0; x05 = rotl(x05 ^ x09, 7);\n\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 16);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 12);\n    x02 = (x02 + x06) | 0; x14 = rotl(x14 ^ x02, 8);\n    x10 = (x10 + x14) | 0; x06 = rotl(x06 ^ x10, 7);\n\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 16);\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 12);\n    x03 = (x03 + x07) | 0; x15 = rotl(x15 ^ x03, 8)\n    x11 = (x11 + x15) | 0; x07 = rotl(x07 ^ x11, 7);\n\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 16);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 12);\n    x00 = (x00 + x05) | 0; x15 = rotl(x15 ^ x00, 8);\n    x10 = (x10 + x15) | 0; x05 = rotl(x05 ^ x10, 7);\n\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 16);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 12);\n    x01 = (x01 + x06) | 0; x12 = rotl(x12 ^ x01, 8);\n    x11 = (x11 + x12) | 0; x06 = rotl(x06 ^ x11, 7);\n\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 16);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 12);\n    x02 = (x02 + x07) | 0; x13 = rotl(x13 ^ x02, 8);\n    x08 = (x08 + x13) | 0; x07 = rotl(x07 ^ x08, 7);\n\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 16)\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 12);\n    x03 = (x03 + x04) | 0; x14 = rotl(x14 ^ x03, 8);\n    x09 = (x09 + x14) | 0; x04 = rotl(x04 ^ x09, 7);\n  }\n  let oi = 0;\n  o32[oi++] = x00; o32[oi++] = x01;\n  o32[oi++] = x02; o32[oi++] = x03;\n  o32[oi++] = x12; o32[oi++] = x13;\n  o32[oi++] = x14; o32[oi++] = x15;\n}\n/**\n * Original, non-RFC chacha20 from DJB. 8-byte nonce, 8-byte counter.\n */\nexport const chacha20orig = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  allowShortKeys: true,\n});\n/**\n * ChaCha stream cipher. Conforms to RFC 8439 (IETF, TLS). 12-byte nonce, 4-byte counter.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  allowShortKeys: false,\n});\n\n/**\n * XChaCha eXtended-nonce ChaCha. 24-byte nonce.\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n */\nexport const xchacha20 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 8,\n  extendNonceFn: hchacha,\n  allowShortKeys: false,\n});\n\n/**\n * Reduced 8-round chacha, described in original paper.\n */\nexport const chacha8 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 8,\n});\n\n/**\n * Reduced 12-round chacha, described in original paper.\n */\nexport const chacha12 = /* @__PURE__ */ createCipher(chachaCore, {\n  counterRight: false,\n  counterLength: 4,\n  rounds: 12,\n});\n\nconst ZEROS16 = /* @__PURE__ */ new Uint8Array(16);\n// Pad to digest size with zeros\nconst updatePadded = (h: ReturnType<typeof poly1305.create>, msg: Uint8Array) => {\n  h.update(msg);\n  const left = msg.length % 16;\n  if (left) h.update(ZEROS16.subarray(left));\n};\n\nconst ZEROS32 = /* @__PURE__ */ new Uint8Array(32);\nfunction computeTag(\n  fn: XorStream,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  data: Uint8Array,\n  AAD?: Uint8Array\n): Uint8Array {\n  const authKey = fn(key, nonce, ZEROS32);\n  const h = poly1305.create(authKey);\n  if (AAD) updatePadded(h, AAD);\n  updatePadded(h, data);\n  const num = new Uint8Array(16);\n  const view = createView(num);\n  setBigUint64(view, 0, BigInt(AAD ? AAD.length : 0), true);\n  setBigUint64(view, 8, BigInt(data.length), true);\n  h.update(num);\n  const res = h.digest();\n  authKey.fill(0);\n  return res;\n}\n\n/**\n * AEAD algorithm from RFC 8439.\n * Salsa20 and chacha (RFC 8439) use poly1305 differently.\n * We could have composed them similar to:\n * https://github.com/paulmillr/scure-base/blob/b266c73dde977b1dd7ef40ef7a23cc15aab526b3/index.ts#L250\n * But it's hard because of authKey:\n * In salsa20, authKey changes position in salsa stream.\n * In chacha, authKey can't be computed inside computeTag, it modifies the counter.\n */\nexport const _poly1305_aead =\n  (xorStream: XorStream) =>\n  (key: Uint8Array, nonce: Uint8Array, AAD?: Uint8Array): CipherWithOutput => {\n    const tagLength = 16;\n    abytes(key, 32);\n    abytes(nonce);\n    return {\n      encrypt: (plaintext: Uint8Array, output?: Uint8Array) => {\n        const plength = plaintext.length;\n        const clength = plength + tagLength;\n        if (output) {\n          abytes(output, clength);\n        } else {\n          output = new Uint8Array(clength);\n        }\n        xorStream(key, nonce, plaintext, output, 1);\n        const tag = computeTag(xorStream, key, nonce, output.subarray(0, -tagLength), AAD);\n        output.set(tag, plength); // append tag\n        return output;\n      },\n      decrypt: (ciphertext: Uint8Array, output?: Uint8Array) => {\n        const clength = ciphertext.length;\n        const plength = clength - tagLength;\n        if (clength < tagLength)\n          throw new Error(`encrypted data must be at least ${tagLength} bytes`);\n        if (output) {\n          abytes(output, plength);\n        } else {\n          output = new Uint8Array(plength);\n        }\n        const data = ciphertext.subarray(0, -tagLength);\n        const passedTag = ciphertext.subarray(-tagLength);\n        const tag = computeTag(xorStream, key, nonce, data, AAD);\n        if (!equalBytes(passedTag, tag)) throw new Error('invalid tag');\n        xorStream(key, nonce, data, output, 1);\n        return output;\n      },\n    };\n  };\n\n/**\n * ChaCha20-Poly1305 from RFC 8439.\n * With 12-byte nonce, it's not safe to use fill it with random (CSPRNG), due to collision chance.\n */\nexport const chacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 12, tagLength: 16 },\n  _poly1305_aead(chacha20)\n);\n/**\n * XChaCha20-Poly1305 extended-nonce chacha.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha\n * With 24-byte nonce, it's safe to use fill it with random (CSPRNG).\n */\nexport const xchacha20poly1305 = /* @__PURE__ */ wrapCipher(\n  { blockSize: 64, nonceLength: 24, tagLength: 16 },\n  _poly1305_aead(xchacha20)\n);\n", "import { exists as aexists, bytes as abytes, output as aoutput } from './_assert.js';\nimport { Input, toBytes, Hash } from './utils.js';\n\n// Poly1305 is a fast and parallel secret-key message-authentication code.\n// https://cr.yp.to/mac.html, https://cr.yp.to/mac/poly1305-20050329.pdf\n// https://datatracker.ietf.org/doc/html/rfc8439\n\n// Based on Public Domain poly1305-donna https://github.com/floodyberry/poly1305-donna\nconst u8to16 = (a: Uint8Array, i: number) => (a[i++] & 0xff) | ((a[i++] & 0xff) << 8);\nclass Poly1305 implements Hash<Poly1305> {\n  readonly blockLen = 16;\n  readonly outputLen = 16;\n  private buffer = new Uint8Array(16);\n  private r = new Uint16Array(10);\n  private h = new Uint16Array(10);\n  private pad = new Uint16Array(8);\n  private pos = 0;\n  protected finished = false;\n\n  constructor(key: Input) {\n    key = toBytes(key);\n    abytes(key, 32);\n    const t0 = u8to16(key, 0);\n    const t1 = u8to16(key, 2);\n    const t2 = u8to16(key, 4);\n    const t3 = u8to16(key, 6);\n    const t4 = u8to16(key, 8);\n    const t5 = u8to16(key, 10);\n    const t6 = u8to16(key, 12);\n    const t7 = u8to16(key, 14);\n\n    // https://github.com/floodyberry/poly1305-donna/blob/e6ad6e091d30d7f4ec2d4f978be1fcfcbce72781/poly1305-donna-16.h#L47\n    this.r[0] = t0 & 0x1fff;\n    this.r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n    this.r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n    this.r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n    this.r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n    this.r[5] = (t4 >>> 1) & 0x1ffe;\n    this.r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n    this.r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n    this.r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n    this.r[9] = (t7 >>> 5) & 0x007f;\n    for (let i = 0; i < 8; i++) this.pad[i] = u8to16(key, 16 + 2 * i);\n  }\n\n  private process(data: Uint8Array, offset: number, isLast = false) {\n    const hibit = isLast ? 0 : 1 << 11;\n    const { h, r } = this;\n    const r0 = r[0];\n    const r1 = r[1];\n    const r2 = r[2];\n    const r3 = r[3];\n    const r4 = r[4];\n    const r5 = r[5];\n    const r6 = r[6];\n    const r7 = r[7];\n    const r8 = r[8];\n    const r9 = r[9];\n\n    const t0 = u8to16(data, offset + 0);\n    const t1 = u8to16(data, offset + 2);\n    const t2 = u8to16(data, offset + 4);\n    const t3 = u8to16(data, offset + 6);\n    const t4 = u8to16(data, offset + 8);\n    const t5 = u8to16(data, offset + 10);\n    const t6 = u8to16(data, offset + 12);\n    const t7 = u8to16(data, offset + 14);\n\n    let h0 = h[0] + (t0 & 0x1fff);\n    let h1 = h[1] + (((t0 >>> 13) | (t1 << 3)) & 0x1fff);\n    let h2 = h[2] + (((t1 >>> 10) | (t2 << 6)) & 0x1fff);\n    let h3 = h[3] + (((t2 >>> 7) | (t3 << 9)) & 0x1fff);\n    let h4 = h[4] + (((t3 >>> 4) | (t4 << 12)) & 0x1fff);\n    let h5 = h[5] + ((t4 >>> 1) & 0x1fff);\n    let h6 = h[6] + (((t4 >>> 14) | (t5 << 2)) & 0x1fff);\n    let h7 = h[7] + (((t5 >>> 11) | (t6 << 5)) & 0x1fff);\n    let h8 = h[8] + (((t6 >>> 8) | (t7 << 8)) & 0x1fff);\n    let h9 = h[9] + ((t7 >>> 5) | hibit);\n\n    let c = 0;\n\n    let d0 = c + h0 * r0 + h1 * (5 * r9) + h2 * (5 * r8) + h3 * (5 * r7) + h4 * (5 * r6);\n    c = d0 >>> 13;\n    d0 &= 0x1fff;\n    d0 += h5 * (5 * r5) + h6 * (5 * r4) + h7 * (5 * r3) + h8 * (5 * r2) + h9 * (5 * r1);\n    c += d0 >>> 13;\n    d0 &= 0x1fff;\n\n    let d1 = c + h0 * r1 + h1 * r0 + h2 * (5 * r9) + h3 * (5 * r8) + h4 * (5 * r7);\n    c = d1 >>> 13;\n    d1 &= 0x1fff;\n    d1 += h5 * (5 * r6) + h6 * (5 * r5) + h7 * (5 * r4) + h8 * (5 * r3) + h9 * (5 * r2);\n    c += d1 >>> 13;\n    d1 &= 0x1fff;\n\n    let d2 = c + h0 * r2 + h1 * r1 + h2 * r0 + h3 * (5 * r9) + h4 * (5 * r8);\n    c = d2 >>> 13;\n    d2 &= 0x1fff;\n    d2 += h5 * (5 * r7) + h6 * (5 * r6) + h7 * (5 * r5) + h8 * (5 * r4) + h9 * (5 * r3);\n    c += d2 >>> 13;\n    d2 &= 0x1fff;\n\n    let d3 = c + h0 * r3 + h1 * r2 + h2 * r1 + h3 * r0 + h4 * (5 * r9);\n    c = d3 >>> 13;\n    d3 &= 0x1fff;\n    d3 += h5 * (5 * r8) + h6 * (5 * r7) + h7 * (5 * r6) + h8 * (5 * r5) + h9 * (5 * r4);\n    c += d3 >>> 13;\n    d3 &= 0x1fff;\n\n    let d4 = c + h0 * r4 + h1 * r3 + h2 * r2 + h3 * r1 + h4 * r0;\n    c = d4 >>> 13;\n    d4 &= 0x1fff;\n    d4 += h5 * (5 * r9) + h6 * (5 * r8) + h7 * (5 * r7) + h8 * (5 * r6) + h9 * (5 * r5);\n    c += d4 >>> 13;\n    d4 &= 0x1fff;\n\n    let d5 = c + h0 * r5 + h1 * r4 + h2 * r3 + h3 * r2 + h4 * r1;\n    c = d5 >>> 13;\n    d5 &= 0x1fff;\n    d5 += h5 * r0 + h6 * (5 * r9) + h7 * (5 * r8) + h8 * (5 * r7) + h9 * (5 * r6);\n    c += d5 >>> 13;\n    d5 &= 0x1fff;\n\n    let d6 = c + h0 * r6 + h1 * r5 + h2 * r4 + h3 * r3 + h4 * r2;\n    c = d6 >>> 13;\n    d6 &= 0x1fff;\n    d6 += h5 * r1 + h6 * r0 + h7 * (5 * r9) + h8 * (5 * r8) + h9 * (5 * r7);\n    c += d6 >>> 13;\n    d6 &= 0x1fff;\n\n    let d7 = c + h0 * r7 + h1 * r6 + h2 * r5 + h3 * r4 + h4 * r3;\n    c = d7 >>> 13;\n    d7 &= 0x1fff;\n    d7 += h5 * r2 + h6 * r1 + h7 * r0 + h8 * (5 * r9) + h9 * (5 * r8);\n    c += d7 >>> 13;\n    d7 &= 0x1fff;\n\n    let d8 = c + h0 * r8 + h1 * r7 + h2 * r6 + h3 * r5 + h4 * r4;\n    c = d8 >>> 13;\n    d8 &= 0x1fff;\n    d8 += h5 * r3 + h6 * r2 + h7 * r1 + h8 * r0 + h9 * (5 * r9);\n    c += d8 >>> 13;\n    d8 &= 0x1fff;\n\n    let d9 = c + h0 * r9 + h1 * r8 + h2 * r7 + h3 * r6 + h4 * r5;\n    c = d9 >>> 13;\n    d9 &= 0x1fff;\n    d9 += h5 * r4 + h6 * r3 + h7 * r2 + h8 * r1 + h9 * r0;\n    c += d9 >>> 13;\n    d9 &= 0x1fff;\n\n    c = ((c << 2) + c) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = c >>> 13;\n    d1 += c;\n\n    h[0] = d0;\n    h[1] = d1;\n    h[2] = d2;\n    h[3] = d3;\n    h[4] = d4;\n    h[5] = d5;\n    h[6] = d6;\n    h[7] = d7;\n    h[8] = d8;\n    h[9] = d9;\n  }\n\n  private finalize() {\n    const { h, pad } = this;\n    const g = new Uint16Array(10);\n    let c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    for (let i = 2; i < 10; i++) {\n      h[i] += c;\n      c = h[i] >>> 13;\n      h[i] &= 0x1fff;\n    }\n    h[0] += c * 5;\n    c = h[0] >>> 13;\n    h[0] &= 0x1fff;\n    h[1] += c;\n    c = h[1] >>> 13;\n    h[1] &= 0x1fff;\n    h[2] += c;\n\n    g[0] = h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n    for (let i = 1; i < 10; i++) {\n      g[i] = h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n    g[9] -= 1 << 13;\n\n    let mask = (c ^ 1) - 1;\n    for (let i = 0; i < 10; i++) g[i] &= mask;\n    mask = ~mask;\n    for (let i = 0; i < 10; i++) h[i] = (h[i] & mask) | g[i];\n    h[0] = (h[0] | (h[1] << 13)) & 0xffff;\n    h[1] = ((h[1] >>> 3) | (h[2] << 10)) & 0xffff;\n    h[2] = ((h[2] >>> 6) | (h[3] << 7)) & 0xffff;\n    h[3] = ((h[3] >>> 9) | (h[4] << 4)) & 0xffff;\n    h[4] = ((h[4] >>> 12) | (h[5] << 1) | (h[6] << 14)) & 0xffff;\n    h[5] = ((h[6] >>> 2) | (h[7] << 11)) & 0xffff;\n    h[6] = ((h[7] >>> 5) | (h[8] << 8)) & 0xffff;\n    h[7] = ((h[8] >>> 8) | (h[9] << 5)) & 0xffff;\n\n    let f = h[0] + pad[0];\n    h[0] = f & 0xffff;\n    for (let i = 1; i < 8; i++) {\n      f = (((h[i] + pad[i]) | 0) + (f >>> 16)) | 0;\n      h[i] = f & 0xffff;\n    }\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input\n      if (take === blockLen) {\n        for (; blockLen <= len - pos; pos += blockLen) this.process(data, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(buffer, 0, false);\n        this.pos = 0;\n      }\n    }\n    return this;\n  }\n  destroy() {\n    this.h.fill(0);\n    this.r.fill(0);\n    this.buffer.fill(0);\n    this.pad.fill(0);\n  }\n  digestInto(out: Uint8Array) {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    const { buffer, h } = this;\n    let { pos } = this;\n    if (pos) {\n      buffer[pos++] = 1;\n      // buffer.subarray(pos).fill(0);\n      for (; pos < 16; pos++) buffer[pos] = 0;\n      this.process(buffer, 0, true);\n    }\n    this.finalize();\n    let opos = 0;\n    for (let i = 0; i < 8; i++) {\n      out[opos++] = h[i] >>> 0;\n      out[opos++] = h[i] >>> 8;\n    }\n    return out;\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n}\n\nexport type CHash = ReturnType<typeof wrapConstructorWithKey>;\nexport function wrapConstructorWithKey<H extends Hash<H>>(hashCons: (key: Input) => Hash<H>) {\n  const hashC = (msg: Input, key: Input): Uint8Array => hashCons(key).update(toBytes(msg)).digest();\n  const tmp = hashCons(new Uint8Array(32));\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (key: Input) => hashCons(key);\n  return hashC;\n}\n\nexport const poly1305 = wrapConstructorWithKey((key) => new Poly1305(key));\n", "// Basic utils for ARX (add-rotate-xor) salsa and chacha ciphers.\nimport { number as anumber, bytes as abytes, bool as abool } from './_assert.js';\nimport { XorStream, checkOpts, u32 } from './utils.js';\n\n/*\nRFC8439 requires multi-step cipher stream, where\nauthKey starts with counter: 0, actual msg with counter: 1.\n\nFor this, we need a way to re-use nonce / counter:\n\n    const counter = new Uint8Array(4);\n    chacha(..., counter, ...); // counter is now 1\n    chacha(..., counter, ...); // counter is now 2\n\nThis is complicated:\n\n- 32-bit counters are enough, no need for 64-bit: max ArrayBuffer size in JS is 4GB\n- Original papers don't allow mutating counters\n- Counter overflow is undefined [^1]\n- Idea A: allow providing (nonce | counter) instead of just nonce, re-use it\n- Caveat: Cannot be re-used through all cases:\n- * chacha has (counter | nonce)\n- * xchacha has (nonce16 | counter | nonce16)\n- Idea B: separate nonce / counter and provide separate API for counter re-use\n- Caveat: there are different counter sizes depending on an algorithm.\n- salsa & chacha also differ in structures of key & sigma:\n  salsa20:      s[0] | k(4) | s[1] | nonce(2) | ctr(2) | s[2] | k(4) | s[3]\n  chacha:       s(4) | k(8) | ctr(1) | nonce(3)\n  chacha20orig: s(4) | k(8) | ctr(2) | nonce(2)\n- Idea C: helper method such as `setSalsaState(key, nonce, sigma, data)`\n- Caveat: we can't re-use counter array\n\nxchacha [^2] uses the subkey and remaining 8 byte nonce with ChaCha20 as normal\n(prefixed by 4 NUL bytes, since [RFC8439] specifies a 12-byte nonce).\n\n[^1]: https://mailarchive.ietf.org/arch/msg/cfrg/gsOnTJzcbgG6OqD8Sc0GO5aR_tU/\n[^2]: https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-xchacha#appendix-A.2\n*/\n\n// We can't make top-level var depend on utils.utf8ToBytes\n// because it's not present in all envs. Creating a similar fn here\nconst _utf8ToBytes = (str: string) => Uint8Array.from(str.split('').map((c) => c.charCodeAt(0)));\nconst sigma16 = _utf8ToBytes('expand 16-byte k');\nconst sigma32 = _utf8ToBytes('expand 32-byte k');\nconst sigma16_32 = u32(sigma16);\nconst sigma32_32 = u32(sigma32);\nexport const sigma = sigma32_32.slice();\n\nexport function rotl(a: number, b: number): number {\n  return (a << b) | (a >>> (32 - b));\n}\n\nexport type CipherCoreFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  output: Uint32Array,\n  counter: number,\n  rounds?: number\n) => void;\n\nexport type ExtendNonceFn = (\n  sigma: Uint32Array,\n  key: Uint32Array,\n  input: Uint32Array,\n  output: Uint32Array\n) => void;\n\nexport type CipherOpts = {\n  allowShortKeys?: boolean; // Original salsa / chacha allow 16-byte keys\n  extendNonceFn?: ExtendNonceFn;\n  counterLength?: number;\n  counterRight?: boolean; // right: nonce|counter; left: counter|nonce\n  rounds?: number;\n};\n\n// Is byte array aligned to 4 byte offset (u32)?\nfunction isAligned32(b: Uint8Array) {\n  return b.byteOffset % 4 === 0;\n}\n\n// Salsa and Chacha block length is always 512-bit\nconst BLOCK_LEN = 64;\nconst BLOCK_LEN32 = 16;\n\n// new Uint32Array([2**32])   // => Uint32Array(1) [ 0 ]\n// new Uint32Array([2**32-1]) // => Uint32Array(1) [ 4294967295 ]\nconst MAX_COUNTER = 2 ** 32 - 1;\n\nconst U32_EMPTY = new Uint32Array();\nfunction runCipher(\n  core: CipherCoreFn,\n  sigma: Uint32Array,\n  key: Uint32Array,\n  nonce: Uint32Array,\n  data: Uint8Array,\n  output: Uint8Array,\n  counter: number,\n  rounds: number\n): void {\n  const len = data.length;\n  const block = new Uint8Array(BLOCK_LEN);\n  const b32 = u32(block);\n  // Make sure that buffers aligned to 4 bytes\n  const isAligned = isAligned32(data) && isAligned32(output);\n  const d32 = isAligned ? u32(data) : U32_EMPTY;\n  const o32 = isAligned ? u32(output) : U32_EMPTY;\n  for (let pos = 0; pos < len; counter++) {\n    core(sigma, key, nonce, b32, counter, rounds);\n    if (counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    const take = Math.min(BLOCK_LEN, len - pos);\n    // aligned to 4 bytes\n    if (isAligned && take === BLOCK_LEN) {\n      const pos32 = pos / 4;\n      if (pos % 4 !== 0) throw new Error('arx: invalid block position');\n      for (let j = 0, posj: number; j < BLOCK_LEN32; j++) {\n        posj = pos32 + j;\n        o32[posj] = d32[posj] ^ b32[j];\n      }\n      pos += BLOCK_LEN;\n      continue;\n    }\n    for (let j = 0, posj; j < take; j++) {\n      posj = pos + j;\n      output[posj] = data[posj] ^ block[j];\n    }\n    pos += take;\n  }\n}\n\nexport function createCipher(core: CipherCoreFn, opts: CipherOpts): XorStream {\n  const { allowShortKeys, extendNonceFn, counterLength, counterRight, rounds } = checkOpts(\n    { allowShortKeys: false, counterLength: 8, counterRight: false, rounds: 20 },\n    opts\n  );\n  if (typeof core !== 'function') throw new Error('core must be a function');\n  anumber(counterLength);\n  anumber(rounds);\n  abool(counterRight);\n  abool(allowShortKeys);\n  return (\n    key: Uint8Array,\n    nonce: Uint8Array,\n    data: Uint8Array,\n    output?: Uint8Array,\n    counter = 0\n  ): Uint8Array => {\n    abytes(key);\n    abytes(nonce);\n    abytes(data);\n    const len = data.length;\n    if (!output) output = new Uint8Array(len);\n    abytes(output);\n    anumber(counter);\n    if (counter < 0 || counter >= MAX_COUNTER) throw new Error('arx: counter overflow');\n    if (output.length < len)\n      throw new Error(`arx: output (${output.length}) is shorter than data (${len})`);\n    const toClean = [];\n\n    // Key & sigma\n    // key=16 -> sigma16, k=key|key\n    // key=32 -> sigma32, k=key\n    let l = key.length,\n      k: Uint8Array,\n      sigma: Uint32Array;\n    if (l === 32) {\n      k = key.slice();\n      toClean.push(k);\n      sigma = sigma32_32;\n    } else if (l === 16 && allowShortKeys) {\n      k = new Uint8Array(32);\n      k.set(key);\n      k.set(key, 16);\n      sigma = sigma16_32;\n      toClean.push(k);\n    } else {\n      throw new Error(`arx: invalid 32-byte key, got length=${l}`);\n    }\n\n    // Nonce\n    // salsa20:      8   (8-byte counter)\n    // chacha20orig: 8   (8-byte counter)\n    // chacha20:     12  (4-byte counter)\n    // xsalsa20:     24  (16 -> hsalsa,  8 -> old nonce)\n    // xchacha20:    24  (16 -> hchacha, 8 -> old nonce)\n    // Align nonce to 4 bytes\n    if (!isAligned32(nonce)) {\n      nonce = nonce.slice();\n      toClean.push(nonce);\n    }\n\n    const k32 = u32(k);\n    // hsalsa & hchacha: handle extended nonce\n    if (extendNonceFn) {\n      if (nonce.length !== 24) throw new Error(`arx: extended nonce must be 24 bytes`);\n      extendNonceFn(sigma, k32, u32(nonce.subarray(0, 16)), k32);\n      nonce = nonce.subarray(16);\n    }\n\n    // Handle nonce counter\n    const nonceNcLen = 16 - counterLength;\n    if (nonceNcLen !== nonce.length)\n      throw new Error(`arx: nonce must be ${nonceNcLen} or 16 bytes`);\n\n    // Pad counter when nonce is 64 bit\n    if (nonceNcLen !== 12) {\n      const nc = new Uint8Array(12);\n      nc.set(nonce, counterRight ? 0 : 12 - nonce.length);\n      nonce = nc;\n      toClean.push(nonce);\n    }\n    const n32 = u32(nonce);\n    runCipher(core, sigma, k32, n32, data, output, counter, rounds);\n    while (toClean.length > 0) toClean.pop()!.fill(0);\n    return output;\n  };\n}\n", "import assert from './_assert.js';\nimport { CHash, Input, toBytes } from './utils.js';\nimport { hmac } from './hmac.js';\n\n// HKDF (RFC 5869)\n// https://soatok.blog/2021/11/17/understanding-hkdf/\n\n/**\n * HKDF-Extract(IKM, salt) -> PRK\n * Arguments position differs from spec (IKM is first one, since it is not optional)\n * @param hash\n * @param ikm\n * @param salt\n * @returns\n */\nexport function extract(hash: CHash, ikm: Input, salt?: Input) {\n  assert.hash(hash);\n  // NOTE: some libraries treat zero-length array as 'not provided';\n  // we don't, since we have undefined as 'not provided'\n  // https://github.com/RustCrypto/KDFs/issues/15\n  if (salt === undefined) salt = new Uint8Array(hash.outputLen); // if not provided, it is set to a string of HashLen zeros\n  return hmac(hash, toBytes(salt), toBytes(ikm));\n}\n\n// HKDF-Expand(PRK, info, L) -> OKM\nconst HKDF_COUNTER = new Uint8Array([0]);\nconst EMPTY_BUFFER = new Uint8Array();\n\n/**\n * HKDF-expand from the spec.\n * @param prk - a pseudorandom key of at least HashLen octets (usually, the output from the extract step)\n * @param info - optional context and application specific information (can be a zero-length string)\n * @param length - length of output keying material in octets\n */\nexport function expand(hash: CHash, prk: Input, info?: Input, length: number = 32) {\n  assert.hash(hash);\n  assert.number(length);\n  if (length > 255 * hash.outputLen) throw new Error('Length should be <= 255*HashLen');\n  const blocks = Math.ceil(length / hash.outputLen);\n  if (info === undefined) info = EMPTY_BUFFER;\n  // first L(ength) octets of T\n  const okm = new Uint8Array(blocks * hash.outputLen);\n  // Re-use HMAC instance between blocks\n  const HMAC = hmac.create(hash, prk);\n  const HMACTmp = HMAC._cloneInto();\n  const T = new Uint8Array(HMAC.outputLen);\n  for (let counter = 0; counter < blocks; counter++) {\n    HKDF_COUNTER[0] = counter + 1;\n    // T(0) = empty string (zero length)\n    // T(N) = HMAC-Hash(PRK, T(N-1) | info | N)\n    HMACTmp.update(counter === 0 ? EMPTY_BUFFER : T)\n      .update(info)\n      .update(HKDF_COUNTER)\n      .digestInto(T);\n    okm.set(T, hash.outputLen * counter);\n    HMAC._cloneInto(HMACTmp);\n  }\n  HMAC.destroy();\n  HMACTmp.destroy();\n  T.fill(0);\n  HKDF_COUNTER.fill(0);\n  return okm.slice(0, length);\n}\n\n/**\n * HKDF (RFC 5869): extract + expand in one step.\n * @param hash - hash function that would be used (e.g. sha256)\n * @param ikm - input keying material, the initial key\n * @param salt - optional salt value (a non-secret random value)\n * @param info - optional context and application specific information\n * @param length - length of output keying material in octets\n */\nexport const hkdf = (\n  hash: CHash,\n  ikm: Input,\n  salt: Input | undefined,\n  info: Input | undefined,\n  length: number\n) => expand(hash, extract(hash, ikm, salt), info, length);\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import type { NostrProfile, Badge } from './nostr';\n\nfunction escapeXml(text: string): string {\n  return text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;');\n}\n\nfunction truncateText(text: string, maxLength: number): string {\n  if (text.length <= maxLength) return text;\n  return text.substring(0, maxLength) + '...';\n}\n\nexport function generateProfileSvg(profile: NostrProfile, npub: string, badges: Badge[] = []): string {\n  const displayName = escapeXml(profile.display_name || profile.name || 'Anonymous');\n  const name = escapeXml(profile.name || '');\n  const about = profile.about ? escapeXml(truncateText(profile.about, 150)) : '';\n  const picture = profile.picture || 'https://via.placeholder.com/120';\n\n  // SVG dimensions\n  const width = 650;\n  const height = 200;\n\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <defs>\n    <style>\n      .card {\n        fill: #ffffff;\n        stroke: #e1e4e8;\n        stroke-width: 1;\n      }\n      .avatar-border {\n        fill: #ffffff;\n        stroke: #e1e4e8;\n        stroke-width: 2;\n      }\n      .display-name {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;\n        font-size: 26px;\n        font-weight: 600;\n        fill: #24292e;\n      }\n      .username {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;\n        font-size: 20px;\n        font-weight: 300;\n        fill: #586069;\n      }\n      .bio {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;\n        font-size: 16px;\n        fill: #24292e;\n      }\n      .label {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;\n        font-size: 12px;\n        fill: #586069;\n      }\n      .npub-text {\n        font-family: 'Courier New', monospace;\n        font-size: 11px;\n        fill: #586069;\n      }\n      .badge-name {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;\n        font-size: 12px;\n        fill: #24292e;\n        text-anchor: middle;\n      }\n      .badge-border {\n        fill: #ffffff;\n        stroke: #e1e4e8;\n        stroke-width: 1;\n      }\n    </style>\n    <clipPath id=\"avatar-clip\">\n      <circle cx=\"80\" cy=\"80\" r=\"58\"/>\n    </clipPath>\n  </defs>\n\n  <!-- Background card -->\n  <rect class=\"card\" x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\" rx=\"10\"/>\n\n  <!-- Avatar with border -->\n  <circle class=\"avatar-border\" cx=\"80\" cy=\"80\" r=\"60\"/>\n  <image href=\"${picture}\" x=\"20\" y=\"20\" width=\"120\" height=\"120\" clip-path=\"url(#avatar-clip)\" preserveAspectRatio=\"xMidYMid slice\"/>\n\n  <!-- Profile info -->\n  <text class=\"display-name\" x=\"160\" y=\"65\">${displayName}</text>\n  ${name ? `<text class=\"username\" x=\"160\" y=\"95\">${name}</text>` : ''}\n\n  ${about ? `\n  <!-- Bio -->\n  <text class=\"bio\" x=\"160\" y=\"${name ? '135' : '115'}\">\n    ${about.split('\\n').slice(0, 3).map((line, i) =>\n      `<tspan x=\"160\" dy=\"${i === 0 ? '0' : '20'}\">${line}</tspan>`\n    ).join('\\n    ')}\n  </text>\n  ` : ''}\n\n  ${badges.length > 0 ? `\n  <!-- Badges -->\n  <g id=\"badges\">\n    ${badges.map((badge, index) => {\n      const badgeX = 382 + (index * 50); // Right-aligned: 650 - 20 - (48*5 + 2*4) = 382\n      const badgeY = 40;\n      const imageUrl = badge.thumb || badge.image || 'https://via.placeholder.com/48';\n\n      return `\n    <image href=\"${imageUrl}\" x=\"${badgeX}\" y=\"${badgeY}\" width=\"48\" height=\"48\" preserveAspectRatio=\"xMidYMid slice\"/>`;\n    }).join('\\n    ')}\n  </g>\n  ` : ''}\n</svg>`;\n}\n"],
  "mappings": "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CL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KAAK;AACJ,eAAO;AAAA,UACN,KAAK;AAAA,UACL,MAAM;AAAA,QACP;AAAA,MACD,KA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",
  "names": ["env", "ctx", "env", "env", "decodeURIComponent", "uri", "byte", "i", "isLE", "i", "bytes", "i", "StringType", "init_lib", "bytes", "err", "i", "l", "t", "parse", "env", "hash", "i", "debug", "init_lib", "i", "init_lib", "initDebug", "StringType", "StringType", "init_lib", "init_core", "init_lib", "fileType", "StringType", "parse", "serialize", "decode", "max", "i", "value", "IsAsyncIterator", "IsObject", "IsIterator", "IsDate", "IsUint8Array", "HasPropertyKey", "IsObject", "IsArray", "IsUndefined", "IsNull", "IsBoolean", "IsNumber", "IsBigInt", "IsString", "IsFunction", "IsSymbol", "TypeSystemPolicy", "isObject", "IsObject", "IsArray", "IsNumber", "IsUndefined", "value", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsDate", "IsFunction", "IsInteger", "IsIterator", "IsNull", "IsNumber", "IsObject", "IsPromise", "IsRegExp", "IsString", "IsSymbol", "IsUndefined", "IsUint8Array", "IsArray", "IsBoolean", "IsBigInt", "IsAsyncIterator", "IsDate", "IsFunction", "IsInteger", "IsIterator", "IsNull", "IsNumber", "IsObject", "IsPromise", "IsAny", "IsArgument", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsComputed", "IsConstructor", "IsDate", "IsFunction", "IsInteger", "IsIntersect", "IsIterator", "IsKind", "IsKindOf", "IsLiteral", "IsLiteralValue", "IsMappedKey", "IsMappedResult", "IsNever", "IsNot", "IsNull", "IsNumber", "IsObject", "IsOptional", "IsPromise", "IsReadonly", "IsRecord", "IsRef", "IsRegExp", "IsSchema", "IsString", "IsSymbol", "IsTemplateLiteral", "IsThis", "IsTransform", "IsTuple", "IsUint8Array", "IsUndefined", "IsUnion", "IsUnknown", "IsUnsafe", "IsVoid", "i", "IsSchema", "IsReadonly", "IsOptional", "IsAny", "IsKindOf", "IsArgument", "IsArray", "IsAsyncIterator", "IsBigInt", "IsBoolean", "IsComputed", "IsConstructor", "IsDate", "IsFunction", "IsInteger", "IsIntersect", "IsTransform", "IsIterator", "IsLiteral", "IsLiteralValue", "IsMappedKey", "IsMappedResult", "IsNever", "IsNot", "IsNull", "IsNumber", "IsObject", "IsPromise", "IsRecord", "IsRef", "IsRegExp", "IsString", "IsSymbol", "IsTemplateLiteral", "IsThis", "IsTuple", "IsUndefined", "IsUnion", "IsUint8Array", "IsUnknown", "IsUnsafe", "IsVoid", "IsKind", "Set", "Set", "type_exports", "Clear", "Delete", "Entries", "Get", "Has", "Set", "map", "Entries", "Clear", "Delete", "Has", "Set", "Get", "Array", "Function", "isOptional", "range", "pattern", "Boolean", "BigInt", "Number", "String", "Boolean", "Number", "BigInt", "String", "i", "Visit", "schema", "IsNumber", "IsInteger", "IsBigInt", "IsString", "IsBoolean", "FromUnion", "IsNumber", "IsInteger", "FromUnion", "IsArray", "IsObject", "Object", "Promise", "FromProperties", "FromMappedResult", "FromMappedResult", "FromRest", "FromProperties", "IsFunction", "Function", "IsAsyncIterator", "IsIterator", "IsObject", "Object", "IsArray", "Array", "IsPromise", "Promise", "map", "FromProperties", "FromMappedResult", "IsObject", "RemoveOptionalFromType", "RemoveOptionalFromRest", "FromIntersect", "FromRest", "FromUnion", "IsPromise", "FromRest", "FromIntersect", "FromUnion", "FromTuple", "FromArray", "FromProperties", "IsArray", "IsObject", "FromComputed", "FromRef", "Number", "FromProperties", "FromMappedResult", "Object", "Date", "Symbol", "Uint8Array", "FromArray", "FromProperties", "Uint8Array", "Date", "Object", "Function", "Symbol", "BigInt", "ExtendsResult", "FromArray", "Visit", "FromIntersect", "FromLiteral", "Number", "Function", "FromPromise", "String", "FromTemplateLiteral", "FromTuple", "FromUnion", "FromProperties", "FromMappedResult", "FromMappedKey", "Intersect", "schema", "Union", "FromProperties", "FromMappedResult", "FromProperties", "FromMappedResult", "Object", "IsBoolean", "IsInteger", "IsNumber", "IsRegExp", "IsString", "RecordKey", "String", "Number", "RecordValue", "FromConstructor", "FromFunction", "FromIntersect", "FromUnion", "FromTuple", "FromArray", "FromAsyncIterator", "FromIterator", "FromPromise", "FromObject", "FromProperties", "Object", "FromRecord", "RecordKey", "RecordValue", "FromProperty", "isOptional", "IsFunction", "IsArray", "IsAsyncIterator", "IsIterator", "IsPromise", "IsObject", "FromTemplateLiteral", "FromRest", "FromProperties", "FromMappedResult", "FromIntersect", "FromUnion", "FromProperty", "FromProperties", "FromObject", "Object", "result", "IsObject", "FromPropertyKey", "FromPropertyKeys", "FromMappedKey", "FromProperties", "FromMappedResult", "FromIntersect", "FromUnion", "FromProperties", "FromObject", "Object", "UnionFromPropertyKeys", "result", "IsObject", "FromPropertyKey", "FromPropertyKeys", "FromMappedKey", "FromComputed", "FromRef", "FromProperties", "FromObject", "Object", "FromRest", "IsObject", "IsBigInt", "IsBoolean", "IsInteger", "IsNull", "IsNumber", "IsString", "IsSymbol", "IsUndefined", "FromProperties", "FromMappedResult", "FromComputed", "FromRef", "FromProperties", "FromObject", "Object", "FromRest", "IsObject", "IsBigInt", "IsBoolean", "IsInteger", "IsNull", "IsNumber", "IsString", "IsSymbol", "IsUndefined", "FromProperties", "FromMappedResult", "FromType", "FromComputed", "FromArray", "Array", "FromAsyncIterator", "FromConstructor", "FromTypes", "FromFunction", "Function", "FromIntersect", "FromIterator", "FromObject", "Object", "FromRecord", "RecordValue", "FromTuple", "FromUnion", "IsArray", "IsAsyncIterator", "IsFunction", "IsIterator", "IsObject", "Not", "IsFunction", "RegExp", "IsFunction", "decode", "Encode", "Decode", "type_exports", "Array", "BigInt", "Boolean", "Date", "Function", "Not", "Number", "Object", "Promise", "RegExp", "String", "Symbol", "Uint8Array", "type_exports", "import_fast_decode_uri_component", "target", "IsString", "ByteMarker", "i", "ArrayType", "Visit", "byte", "DateType", "ObjectType", "Uint8ArrayType", "IsArray", "IsBoolean", "IsBigInt", "IsDate", "IsNull", "IsNumber", "IsObject", "IsString", "IsSymbol", "IsUint8Array", "IsUndefined", "FromAny", "FromArgument", "FromArray", "IsArray", "value", "Visit", "set", "IsNumber", "FromAsyncIterator", "IsAsyncIterator", "FromBigInt", "IsBigInt", "FromBoolean", "IsBoolean", "FromConstructor", "FromDate", "IsDate", "FromFunction", "IsFunction", "FromInteger", "FromIntersect", "schema", "FromIterator", "IsIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "IsNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "regex", "FromRef", "FromRegExp", "FromString", "IsString", "FromSymbol", "IsSymbol", "FromTemplateLiteral", "FromTuple", "i", "FromUndefined", "IsUndefined", "FromUnion", "FromUint8Array", "IsUint8Array", "FromUnknown", "FromVoid", "type_exports", "ValueErrorType", "IsDefined", "FromAny", "FromArgument", "FromArray", "IsArray", "i", "Visit", "set", "value", "IsNumber", "FromAsyncIterator", "IsAsyncIterator", "FromBigInt", "IsBigInt", "FromBoolean", "IsBoolean", "FromConstructor", "FromDate", "IsDate", "FromFunction", "IsFunction", "FromImport", "FromInteger", "FromIntersect", "FromIterator", "IsIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "IsNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "regex", "FromRef", "FromRegExp", "IsString", "FromString", "FromSymbol", "IsSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "IsUndefined", "FromUnion", "FromUint8Array", "IsUint8Array", "FromUnknown", "FromVoid", "FromKind", "type_exports", "_AssertError_Iterator", "FromObject", "Clone", "FromArray", "FromDate", "FromValue", "IsArray", "IsDate", "IsObject", "IsFunction", "Clone", "FromAny", "HasPropertyKey", "FromArgument", "FromArray", "Visit", "FromAsyncIterator", "FromBigInt", "FromBoolean", "FromConstructor", "FromDate", "FromFunction", "FromImport", "FromInteger", "FromIntersect", "schema", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "FromUint8Array", "FromUnknown", "FromVoid", "FromKind", "type_exports", "Create", "IsNull", "schema", "exists", "Clone", "Create", "FromArray", "IsArray", "IsNumber", "value", "Visit", "FromConstructor", "FromImport", "IsObject", "FromIntersect", "FromNever", "FromObject", "FromRecord", "FromRef", "FromThis", "FromTuple", "FromUnion", "IsString", "FromArray", "IsArray", "value", "Visit", "FromImport", "FromIntersect", "schema", "Clone", "IsObject", "FromObject", "HasPropertyKey", "FromRecord", "FromRef", "FromThis", "FromTuple", "IsUndefined", "i", "FromUnion", "IsString", "IsString", "IsBigInt", "IsBoolean", "IsNumber", "value", "IsSymbol", "IsDate", "Default", "FromArray", "IsArray", "Visit", "FromBigInt", "FromBoolean", "FromDate", "FromImport", "FromInteger", "FromIntersect", "schema", "FromLiteral", "FromNull", "FromNumber", "FromObject", "IsObject", "HasPropertyKey", "FromRecord", "FromRef", "FromString", "FromSymbol", "FromThis", "FromTuple", "IsUndefined", "FromUndefined", "FromUnion", "Clone", "Default", "FromArray", "IsArray", "value", "Visit", "FromIntersect", "IsObject", "FromImport", "FromNot", "FromObject", "HasPropertyKey", "IsUndefined", "FromRecord", "FromRef", "FromThis", "FromTuple", "schema", "FromUnion", "Default", "FromArray", "IsArray", "value", "Visit", "FromImport", "FromIntersect", "IsObject", "FromNot", "FromObject", "HasPropertyKey", "IsUndefined", "FromRecord", "FromRef", "FromThis", "FromTuple", "schema", "FromUnion", "FromArray", "Visit", "FromAsyncIterator", "FromConstructor", "schema", "FromFunction", "FromIntersect", "FromImport", "FromIterator", "FromNot", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromThis", "FromTuple", "IsUndefined", "FromUnion", "HasPropertyKey", "IsFunction", "Clone", "IsUndefined", "IsObject", "FromArray", "IsArray", "i", "Visit", "FromDate", "IsDate", "FromImport", "FromIntersect", "schema", "FromObject", "FromRecord", "FromRef", "FromThis", "FromTuple", "max", "FromUnion", "Default", "Delete", "Get", "Has", "Set", "Escape", "i", "Set", "Delete", "Has", "Get", "ObjectType", "IsObject", "DateType", "IsDate", "ArrayType", "IsArray", "Object", "String", "Delete", "ObjectType", "HasPropertyKey", "Visit", "ArrayType", "IsArray", "i", "TypedArrayType", "ValueType", "Clone", "IsStandardObject", "IsObject", "IsArray", "ObjectType", "Clone", "Visit", "ArrayType", "TypedArrayType", "i", "ValueType", "ParseRegistry", "Clone", "Default", "Delete", "Set", "Get", "value", "IsUndefined", "IsArray", "value_exports", "Clone", "Create", "Default", "Character", "MemberExpression", "i", "Encode", "Identifier", "LiteralString", "Escape", "Policy", "TypeCompiler", "IsAnyOrUnknown", "FromAny", "FromArgument", "FromArray", "IsNumber", "IsSchema", "FromAsyncIterator", "FromBigInt", "IsBigInt", "FromBoolean", "FromConstructor", "Visit", "FromDate", "FromFunction", "FromImport", "FromInteger", "FromIntersect", "schema", "FromIterator", "FromLiteral", "FromNever", "FromNot", "FromNull", "FromNumber", "FromObject", "FromPromise", "FromRecord", "FromRef", "FromRegExp", "FromString", "FromSymbol", "FromTemplateLiteral", "FromThis", "FromTuple", "FromUndefined", "FromUnion", "FromUint8Array", "FromUnknown", "FromVoid", "FromKind", "IsString", "type_exports", "pad", "expression", "IsArray", "isBun", "i", "number", "status", "ParseError", "value_exports", "type_exports", "value_exports", "fileTypeFromBlob", "file", "mod", "i", "i", "number", "date2", "date", "decode", "set", "decode", "i", "env", "set", "i", "env", "mapResponse", "mapCompactResponse", "handleStream", "status", "file", "stat", "isOptional", "i", "regex", "caches", "i", "mapResponse", "handleResponse", "errorToResponse", "handleStream", "mapCompactResponse", "mapEarlyResponse", "createStaticHandler", "import_fast_decode_uri_component", "import_fast_decode_uri_component", "i", "decode", "process", "i", "process2", "i2", "Kind", "Hint", "v2", "isOptional", "i", "i2", "i", "value_exports", "normalize", "sanitize", "mirror", "Check", "status", "i", "normalize", "isObject", "mapResponse", "value_exports", "validateFile", "i2", "mapResponse2", "ParseError", "decode", "allocateIf", "mapEarlyResponse", "set", "mapResponse", "parse", "i", "mapResponse", "mapEarlyResponse", "mapCompactResponse", "createStaticHandler", "i", "parse", "set", "handleResponse", "mapResponse", "mapEarlyResponse", "set", "i", "form", "i2", "_a", "_Elysia", "fastDecodeURIComponent", "env", "normalize", "sanitize", "compile", "i", "v2", "hash", "crypto", "pad", "Hash", "crypto", "isLE", "Hash", "i", "i", "concatBytes", "utf8ToBytes", "u8a", "i", "bytes", "hex", "byte", "concatBytes", "pad", "utf8ToBytes", "isOptional", "_0n", "_1n", "_2n", "number", "gcd", "Fp", "ge", "i", "map", "_0n", "_1n", "i", "bitLen", "isLE", "_0n", "_1n", "bytes", "isLE", "_1n", "_0n", "_1n", "bits", "window", "i", "Fp", "hex", "s", "_0n", "_1n", "_2n", "_3n", "_4n", "toBytes", "concatBytes", "bytes", "Point", "i", "mul", "a", "modN", "number", "Signature", "getPublicKey", "hash", "randomBytes", "r", "Hash", "hash", "pad", "i", "hash", "_1n", "_2n", "_3n", "_0n", "concatBytes", "t", "crypto", "u8a", "createView", "rotr", "isLE", "hexes", "i", "bytesToHex", "bytes", "u8a", "hex", "hexToBytes", "byte", "utf8ToBytes", "toBytes", "u8a", "concatBytes", "pad", "Hash", "wrapConstructor", "toBytes", "randomBytes", "crypto", "number", "bytes", "hash", "exists", "output", "setBigUint64", "isLE", "SHA2", "Hash", "createView", "toBytes", "i", "Chi", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "i", "rotr", "sha256", "wrapConstructor", "i", "decode", "alphabet", "bits", "padding", "bytes", "i", "i", "limit", "decode", "_words", "number", "bool", "bytes", "exists", "output", "bytes", "u8", "createView", "isLE", "utf8ToBytes", "toBytes", "utf8ToBytes", "equalBytes", "i", "setBigUint64", "isLE", "i", "t", "bytes", "toBytes", "createView", "bits", "byte", "exists", "output", "BLOCK_SIZE", "POLY", "mul2", "t", "i", "sbox", "sbox2", "bytes", "t0", "t1", "t2", "t3", "ctr", "u8", "isLE", "createView", "ecb", "cbc", "cfb", "setBigUint64", "gcm", "equalBytes", "max", "siv", "i", "toBytes", "bytes", "pad", "exists", "output", "wrapConstructorWithKey", "sigma", "output", "number", "bool", "bytes", "i", "ZEROS16", "ZEROS32", "computeTag", "createView", "setBigUint64", "bytes", "output", "equalBytes", "HMAC", "Hash", "hash", "toBytes", "pad", "i", "hmac", "hash", "hmac", "toBytes", "HMAC", "__defProp", "__export", "utils_exports", "__export", "bytesToHex", "hexToBytes", "t", "hash", "err", "sha256", "Date2", "__export", "challenge", "t", "err", "set", "err", "map", "__export", "decode", "number", "bytesToHex", "t", "hex", "hexToBytes", "bytes", "concatBytes", "__export", "decrypt", "encrypt", "bytesToHex", "randomBytes", "parse", "hex", "sha256", "decrypt2", "encrypt2", "concatBytes", "hmac", "equalBytes", "t", "parse2", "uri", "decode", "max", "regex", "err", "hash", "i", "set"]
}
